<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2022-11-04T08:40:42</timestamp>
        <product version="6.3.0+8b29d6f4a2" user=" " serial="">Dotfuscator Community</product>
    </header>
    <mapping>
        <module>
            <name>CharacterEditor.dll</name>
            <type>
                <name>CharacterEditor.AbilityTool</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn, int32)</signature>
                        <name>CheckAddPsylink</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Ability&gt;(Verse.Pawn)</signature>
                        <name>GetCopyOfAbilites</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.Pawn)</signature>
                        <name>GetEntropy</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPsyAbilitiesAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.Pawn)</signature>
                        <name>GetPsyfocus</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;RimWorld.Ability&gt;)</signature>
                        <name>RemoveTemporaryAbilities</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, float32)</signature>
                        <name>SetEntropy</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetPsyAbilitiesFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, float32)</signature>
                        <name>SetPsyfocus</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.AgeTool</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>int64(Verse.Pawn)</signature>
                        <name>GetAgeTicks</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64(Verse.Pawn)</signature>
                        <name>GetChronoAgeTicks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int32)</signature>
                        <name>SetAge</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int64)</signature>
                        <name>SetAgeTicks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int32)</signature>
                        <name>SetChronoAge</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int32, int32)</signature>
                        <name>SetChronoAgeDay</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int64)</signature>
                        <name>SetChronoAgeTicks</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.AlienRaceTool</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>object(Verse.Pawn)</signature>
                        <name>AlienPartGenerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int32, bool)</signature>
                        <name>AlienPartGenerator_BodyAddon_Toggle_DrawFor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>AlienPartGenerator_DeleteAllAddons</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object(Verse.Pawn, int32)</signature>
                        <name>AlienPartGenerator_GetBodyAddonAtIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(Verse.Pawn)</signature>
                        <name>AlienPartGenerator_GetBodyAddons</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>object[](Verse.Pawn)</signature>
                        <name>AlienPartGenerator_GetBodyAddonsAsArray</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.BodyTypeDef&gt;(Verse.Pawn)</signature>
                        <name>AlienPartGenerator_GetBodyTypes</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2(Verse.Pawn)</signature>
                        <name>AlienPartGenerator_GetCustomDrawSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.HeadTypeDef&gt;(Verse.Pawn)</signature>
                        <name>AlienPartGenerator_GetHeadTypes</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, UnityEngine.Vector2)</signature>
                        <name>AlienPartGenerator_SetCustomDrawSize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(Verse.Pawn)</signature>
                        <name>AlienRace</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>AlienRaceComp_ClearAllAddons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Graphic&gt;(Verse.Pawn)</signature>
                        <name>AlienRaceComp_GetAddonGraphics</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;(Verse.Pawn)</signature>
                        <name>AlienRaceComp_GetAddonVariants</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(Verse.Pawn, string)</signature>
                        <name>AlienRaceComp_GetChannel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn, string, bool)</signature>
                        <name>AlienRaceComp_GetChannelColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2(Verse.Pawn)</signature>
                        <name>AlienRaceComp_GetCustomDrawSize</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn, bool)</signature>
                        <name>AlienRaceComp_GetSkinColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;int32&gt;)</signature>
                        <name>AlienRaceComp_SetAddonVariants</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string, bool, UnityEngine.Color)</signature>
                        <name>AlienRaceComp_SetChannelColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, UnityEngine.Vector2)</signature>
                        <name>AlienRaceComp_SetCustomDrawSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, UnityEngine.Color)</signature>
                        <name>AlienRaceComp_SetHairColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, UnityEngine.Color)</signature>
                        <name>AlienRaceComp_SetSkinColor</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingComp(Verse.Pawn)</signature>
                        <name>AlienRace_GetAlienRaceComp</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object(Verse.Pawn)</signature>
                        <name>AlienRace_GetGeneralSettings</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>BodyAddon_GetDrawForFemale</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>BodyAddon_GetDrawForMale</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2(object)</signature>
                        <name>BodyAddon_GetDrawSize</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>float32(object)</signature>
                        <name>BodyAddon_GetLayerOffset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>BodyAddon_GetOffsets</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>BodyAddon_GetPath</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>BodyAddon_GetRoationOffsetEast</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>BodyAddon_GetRoationOffsetNorth</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>BodyAddon_GetRoationOffsetSouth</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>BodyAddon_GetRoationOffsetWest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float32(object)</signature>
                        <name>BodyAddon_GetRotation</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>BodyAddon_GetVariantCountMax</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, bool)</signature>
                        <name>BodyAddon_SetDrawForFemale</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, bool)</signature>
                        <name>BodyAddon_SetDrawForMale</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, float32)</signature>
                        <name>BodyAddon_SetDrawSize</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, float32)</signature>
                        <name>BodyAddon_SetLayerOffset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, float32)</signature>
                        <name>BodyAddon_SetRotation</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>IsAlienRace</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ApparelLayerDef)</signature>
                        <name>AddApparelLayer</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, string)</signature>
                        <name>AddApparelTag</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.BodyPartGroupDef)</signature>
                        <name>AddBodyPart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, string)</signature>
                        <name>AddOutfitTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>AllowAllApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AllowApparelToBeColorable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, Verse.ThingDef, bool)</signature>
                        <name>ApparalGraphicTest2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, RimWorld.Apparel, bool, bool)</signature>
                        <name>ApparelGraphicTest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>AskToWearIncompatibleApparel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, RimWorld.Apparel, bool)</signature>
                        <name>CanWearApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Pawn, Verse.ThingDef)</signature>
                        <name>CountApparelThatWillBeReplacedByThisApparel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, CharacterEditor.Selected)</signature>
                        <name>CreateAndWearApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, CharacterEditor.Selected, RimWorld.Apparel&amp;, bool)</signature>
                        <name>CreateAndWearApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;Verse.ApparelLayerDef,System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;&gt;()</signature>
                        <name>CreateDicOfApparel</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>CreateListOfGraphicPaths</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>DestroyAllApparel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>DestroyApparel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>FixForBelts</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>ForceWearThatApparel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Apparel(CharacterEditor.Selected)</signature>
                        <name>GenerateApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Apparel(Verse.ApparelLayerDef, bool, string, Verse.BodyPartGroupDef)</signature>
                        <name>GenerateRandomApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllApparelAsSeparatedString</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>GetAllBelt</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>GetAllMiddle</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>GetAllOnSkn</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>GetAllOverhead</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>GetAllShell</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef, Verse.Pawn)</signature>
                        <name>GetApparelPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Apparel&gt;(Verse.Pawn, Verse.ApparelLayerDef)</signature>
                        <name>GetApparelWithThisLayer</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Apparel&gt;(Verse.Pawn, Verse.ThingDef)</signature>
                        <name>GetConflictedApparelList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartGroupDef&gt;(Verse.Pawn)</signature>
                        <name>GetCoveredBodyPartGroupDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasAnyApparel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ApparelLayerDef)</signature>
                        <name>HasApparelLayer</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, string)</signature>
                        <name>HasApparelTag</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.BodyPartGroupDef)</signature>
                        <name>HasBodyPartGroup</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, string)</signature>
                        <name>HasBodyPartGroupDefName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, string)</signature>
                        <name>HasOutfitTag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>HasSameApparelLayer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>HasSameCover</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, Verse.ThingDef)</signature>
                        <name>HasThisApparelDef</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsApparelForNeck</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel)</signature>
                        <name>IsForEyes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel)</signature>
                        <name>IsForLegs</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel)</signature>
                        <name>IsForNeck</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>IsWornByPawn</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;(Verse.ApparelLayerDef, string, Verse.BodyPartGroupDef)</signature>
                        <name>ListOfApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;(bool)</signature>
                        <name>ListOfApparelLayerDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Apparel&gt;(Verse.Pawn)</signature>
                        <name>ListOfCopyOutfits</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;(int32)</signature>
                        <name>ListOfRandomApparelLayerDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.ApparelLayerDef)</signature>
                        <name>MoveDressFromInv</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.ApparelLayerDef)</signature>
                        <name>MoveDressToInv</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;)</signature>
                        <name>PasteApparelLayer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>PasteApparelTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;Verse.BodyPartGroupDef&gt;)</signature>
                        <name>PasteBodyPartGroup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;RimWorld.Apparel&gt;)</signature>
                        <name>PasteCopyOutfits</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>PasteOutfitTag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Apparel(Verse.Pawn)</signature>
                        <name>RandomWornApparel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.Selected, bool, int32, bool)</signature>
                        <name>Redress</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ApparelLayerDef)</signature>
                        <name>RemoveApparelLayer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, string)</signature>
                        <name>RemoveApparelTag</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.BodyPartGroupDef)</signature>
                        <name>RemoveBodyPartGroup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, string)</signature>
                        <name>RemoveOutfitTag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel)</signature>
                        <name>RenderAsPack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>RenderAsPack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel, Verse.ApparelLayerDef, bool)</signature>
                        <name>ReplaceAndWearRandomApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel, RimWorld.Apparel)</signature>
                        <name>ReplaceThatApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetApparelFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>TestAllApparel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Apparel(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>ThisOrFirstWornApparel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Apparel)</signature>
                        <name>WearThatApparel</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c</name>
                <newname>ac/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;Verse.GraphicRequest,Verse.Graphic&gt;)</signature>
                        <name>&lt;CreateListOfGraphicPaths&gt;b__59_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllBelt&gt;b__61_0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;GetAllBelt&gt;b__61_1</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllMiddle&gt;b__62_0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;GetAllMiddle&gt;b__62_1</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllOnSkn&gt;b__60_0</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;GetAllOnSkn&gt;b__60_1</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllOverhead&gt;b__63_0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;GetAllOverhead&gt;b__63_1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllShell&gt;b__64_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;GetAllShell&gt;b__64_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;ListOfApparel&gt;b__66_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ApparelLayerDef)</signature>
                        <name>&lt;ListOfApparelLayerDefs&gt;b__65_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ApparelLayerDef)</signature>
                        <name>&lt;ListOfApparelLayerDefs&gt;b__65_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ApparelLayerDef)</signature>
                        <name>&lt;ListOfApparelLayerDefs&gt;b__65_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ApparelLayerDef)</signature>
                        <name>&lt;ListOfApparelLayerDefs&gt;b__65_3</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.ApparelTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;Verse.GraphicRequest,Verse.Graphic&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__59_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__60_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__60_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__61_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__61_1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__62_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__62_1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__63_0</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__63_1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__64_0</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__64_1</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,bool&gt;</signature>
                        <name>&lt;&gt;9__65_0</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,string&gt;</signature>
                        <name>&lt;&gt;9__65_1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,bool&gt;</signature>
                        <name>&lt;&gt;9__65_2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,string&gt;</signature>
                        <name>&lt;&gt;9__65_3</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__66_1</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass17_0</name>
                <newname>ac/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel)</signature>
                        <name>&lt;GetApparelWithThisLayer&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.ApparelLayerDef</signature>
                        <name>ald</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass21_0</name>
                <newname>ac/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ReplaceAndWearRandomApparel&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass21_1</name>
                <newname>ac/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;ReplaceAndWearRandomApparel&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass21_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>hasApparelTags</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass26_0</name>
                <newname>ac/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;AskToWearIncompatibleApparel&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>RimWorld.Apparel</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass27_0</name>
                <newname>ac/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GenerateRandomApparel&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.BodyPartGroupDef</signature>
                        <name>bpd</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ApparelTool/&lt;&gt;c__DisplayClass66_0</name>
                <newname>ac/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;ListOfApparel&gt;b__0</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bAll1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAll2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAll3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Verse.BodyPartGroupDef</signature>
                        <name>bpd</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Verse.ApparelLayerDef</signature>
                        <name>ld</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BackstoryTool</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>RimWorld.BackstoryDef(string)</signature>
                        <name>GetBackstory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, bool)</signature>
                        <name>GetBackstrory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.BackstoryDef&gt;(bool, bool)</signature>
                        <name>ListOfBackstories</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.BackstoryDef, RimWorld.BackstoryDef)</signature>
                        <name>SetBackstory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, bool, bool, bool)</signature>
                        <name>SetBackstory</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BackstoryTool/&lt;&gt;c</name>
                <newname>ae/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BackstoryDef)</signature>
                        <name>&lt;GetBackstory&gt;b__1_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BackstoryDef)</signature>
                        <name>&lt;GetBackstory&gt;b__1_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BackstoryDef)</signature>
                        <name>&lt;ListOfBackstories&gt;b__0_1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BackstoryDef)</signature>
                        <name>&lt;SetBackstory&gt;b__3_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.BackstoryTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__0_1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,bool&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__1_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__3_1</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BackstoryTool/&lt;&gt;c__DisplayClass0_0</name>
                <newname>ae/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BackstoryDef)</signature>
                        <name>&lt;ListOfBackstories&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>isChildhood</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>notDisabling</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BackstoryTool/&lt;&gt;c__DisplayClass3_0</name>
                <newname>ae/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BackstoryDef)</signature>
                        <name>&lt;SetBackstory&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>isChildhood</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>notDisabled</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BlockBio</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>Draw</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BodyTool</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.BodyTypeDef&gt;(Verse.Pawn, bool)</signature>
                        <name>GetBodyDefList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.BodyTypeDef&gt;(Verse.Pawn)</signature>
                        <name>GetBodyList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetBodyTypeDefName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetBodyTypeName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartGroupDef&gt;(bool)</signature>
                        <name>ListAllBodyPartGroupDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveRotEndings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.BodyTypeDef)</signature>
                        <name>SetBody</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, bool)</signature>
                        <name>SetBody</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetBodyByDefName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.BodyTool/&lt;&gt;c</name>
                <newname>ai/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.BodyPartGroupDef)</signature>
                        <name>&lt;ListAllBodyPartGroupDefs&gt;b__1_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.BodyPartGroupDef)</signature>
                        <name>&lt;ListAllBodyPartGroupDefs&gt;b__1_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.BodyPartGroupDef)</signature>
                        <name>&lt;ListAllBodyPartGroupDefs&gt;b__1_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.BodyPartGroupDef)</signature>
                        <name>&lt;ListAllBodyPartGroupDefs&gt;b__1_3</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.BodyTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.BodyPartGroupDef,bool&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.BodyPartGroupDef,string&gt;</signature>
                        <name>&lt;&gt;9__1_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.BodyPartGroupDef,bool&gt;</signature>
                        <name>&lt;&gt;9__1_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.BodyPartGroupDef,string&gt;</signature>
                        <name>&lt;&gt;9__1_3</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(RimWorld.Page_ConfigureStartingPawns, UnityEngine.Rect)</signature>
                        <name>AddCharacterEditorButton</name>
                    </method>
                    <method>
                        <signature>void(RimWorld.Dialog_AdvancedGameConfig, UnityEngine.Rect)</signature>
                        <name>AddMapSizeSlider</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckAddButton</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseEditor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConfigEditor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EditorMoveRight</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(CharacterEditor.EType)</signature>
                        <name>Get</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(CharacterEditor.OptionS)</signature>
                        <name>GetCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(CharacterEditor.OptionB)</signature>
                        <name>GetO</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSlot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(CharacterEditor.EType)</signature>
                        <name>Has</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Mod)</signature>
                        <name>Initialize</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;!!0&gt;(CharacterEditor.EType)</signature>
                        <name>ListOf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatDef&gt;(RimWorld.StatCategoryDef, bool, bool)</signature>
                        <name>ListOfStatDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnDoingMainMenu</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnMainMenuInit</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnMapLoaded</name>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>OnSettingsChanged</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.OptionS, string, string)</signature>
                        <name>SetCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string, bool)</signature>
                        <name>SetSlot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>StartEditor</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.OptionB)</signature>
                        <name>Toggle</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateGraphics</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.CEditor()</signature>
                        <name>get_API</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DontAsk</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EditorPosX</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EditorPosY</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_InStartingScreen</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAVPActive</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAgeMattersActive</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAlienRaceActive</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCombatExtendedActive</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDualWieldActive</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExtendedUI</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFacesOfTheRimActive</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFacialAnimationActive</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFacialStuffActive</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGradientHairActive</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPersonalitiesActive</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPsychologyActive</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRJWActive</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRaceSpecificHead</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRandom</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsTerraformRimworldActive</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>Verse.WindowLayer()</signature>
                        <name>get_Layer</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ListName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxSliderVal</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumCapsuleSlots</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumSlots</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OnMap</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef()</signature>
                        <name>get_PKD</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;()</signature>
                        <name>get_PKDNAME</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;()</signature>
                        <name>get_PKDTOOLTIP</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_Pawn</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef()</signature>
                        <name>get_RACE</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;()</signature>
                        <name>get_RACEDESC</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;()</signature>
                        <name>get_RACENAME</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor)</signature>
                        <name>set_API</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DontAsk</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAVPActive</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAgeMattersActive</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAlienRaceActive</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCombatExtendedActive</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDualWieldActive</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsExtendedUI</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFacesOfTheRimActive</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFacialAnimationActive</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFacialStuffActive</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsGradientHairActive</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPersonalitiesActive</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPsychologyActive</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRJWActive</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRaceSpecificHead</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRandom</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsTerraformRimworldActive</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ListName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OnMap</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.PawnKindDef)</signature>
                        <name>set_PKD</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_Pawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>set_RACE</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor</signature>
                        <name>&lt;API&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DontAsk&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsAVPActive&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsAgeMattersActive&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsAlienRaceActive&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsCombatExtendedActive&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDualWieldActive&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsExtendedUI&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFacesOfTheRimActive&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFacialAnimationActive&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFacialStuffActive&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsGradientHairActive&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPersonalitiesActive&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPsychologyActive&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRJWActive&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRaceSpecificHead&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRandom&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsTerraformRimworldActive&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ListName&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Verse.PawnKindDef</signature>
                        <name>&lt;PKD&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>&lt;RACE&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>aDensity</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bOnMap</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/ModData</signature>
                        <name>data</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>pDensity</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>Verse.ModContentPack</signature>
                        <name>pack</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>RimWorld.Page_ConfigureStartingPawns</signature>
                        <name>pstartInstance</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>selectedTile</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>zufallswert</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>CharacterEditor.CEditor()</signature>
                        <name>API</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>DontAsk</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EditorPosX</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>EditorPosY</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>InStartingScreen</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAVPActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAgeMattersActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAlienRaceActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCombatExtendedActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDualWieldActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExtendedUI</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFacesOfTheRimActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFacialAnimationActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFacialStuffActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGradientHairActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPersonalitiesActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPsychologyActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRJWActive</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRaceSpecificHead</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRandom</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsTerraformRimworldActive</name>
                    </property>
                    <property>
                        <signature>Verse.WindowLayer()</signature>
                        <name>Layer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ListName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxSliderVal</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NumCapsuleSlots</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NumSlots</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OnMap</name>
                    </property>
                    <property>
                        <signature>Verse.PawnKindDef()</signature>
                        <name>PKD</name>
                    </property>
                    <property>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;()</signature>
                        <name>PKDNAME</name>
                    </property>
                    <property>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;()</signature>
                        <name>PKDTOOLTIP</name>
                    </property>
                    <property>
                        <signature>Verse.Pawn()</signature>
                        <name>Pawn</name>
                    </property>
                    <property>
                        <signature>Verse.ThingDef()</signature>
                        <name>RACE</name>
                    </property>
                    <property>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;()</signature>
                        <name>RACEDESC</name>
                    </property>
                    <property>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;()</signature>
                        <name>RACENAME</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;get_PKDNAME&gt;b__99_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;get_PKDTOOLTIP&gt;b__101_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;get_RACEDESC&gt;b__97_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;get_RACENAME&gt;b__95_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__101_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__95_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__97_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__99_0</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI</name>
                <newname>CharacterEditor.CEditor/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AShowList</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AShowTabs</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/TabType)</signature>
                        <name>ATabwechsel</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0, CharacterEditor.CEditor/EditorUI/TabType)</signature>
                        <name>AddClassContainer</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/TabType)</signature>
                        <name>CreateType</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawSelectedTab</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTabs</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(CharacterEditor.CEditor/EditorUI/TabType)</signature>
                        <name>Get</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>PreselectPawn</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Start</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PersonH</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PersonW</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PersonX</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PersonY</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SizeH</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SizeRand</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SizeW0</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SizeW1</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SizeW2</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TabH</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TabW</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TabX</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TabY</name>
                        <newname>s</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>currentTab</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;CharacterEditor.CEditor/EditorUI/TabType,System.ComponentModel.Design.ServiceContainer&gt;</signature>
                        <name>dicData</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockBio</name>
                <newname>CharacterEditor.CEditor/c/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddAbility</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddAge</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddBirthdayTick</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddChronoAge</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.SkillRecord)</signature>
                        <name>AAddSkillLevel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddTrait</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABeginAgeChange</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABeginEditName</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACapsuleUI</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeAdulthoodUI</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeChildhoodUI</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeFaction</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeFavColorUI</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeIdeo</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeNameTriple</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeNameTripleAll</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangePersonality</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeRJW</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigXenoType</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfirmRaceChange</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyAbilities</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopySkills</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyTraits</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AEnslave</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Trait)</signature>
                        <name>ANextTrait</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Trait)</signature>
                        <name>AOnTraitClick</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOpenIdeoConfig</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteAbilities</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteSkills</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteTraits</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Trait)</signature>
                        <name>APrevTrait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomAbilities</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomAdulthood</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomChildhood</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomSkills</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Trait)</signature>
                        <name>ARandomTrait</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomTraits</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARecruit</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARemoveTitle</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ASelectMaster</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextAdulthood</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextChildhood</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevAdulthood</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevChildhood</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.SkillRecord)</signature>
                        <name>ASetSkillNumeric</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.RoyalTitleDef)</signature>
                        <name>ASetTitle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.RoyalTitle)</signature>
                        <name>AShowTitle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AShowXenoType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASubAge</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASubChronoAge</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.SkillRecord)</signature>
                        <name>ASubSkillLevel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.SkillRecord)</signature>
                        <name>ATogglePassion</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ATogglePsyvalues</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AToggleRemoveAbility</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AToggleRemoveTrait</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TrainableDef)</signature>
                        <name>ATrain</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, Verse.Pawn, RimWorld.TrainableDef, Verse.AcceptanceReport)</signature>
                        <name>DoTrainableTooltip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawAbilities</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawBackstory</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawBiologicalAge</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawCapsule</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawChronologicalAge</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawDesc</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawExtendables</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawFaction</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawFavorite</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawIdeo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawIncapableOf</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawLowerButtons</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawNameSingle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawNameTripe</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawPersonality</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawPsycasts</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawRJW</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawSkills</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTraining</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawTraits</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawXeno</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(RimWorld.TrainableDef)</signature>
                        <name>GetTrainingSteps</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Trait)</signature>
                        <name>GetTraitTooltip</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RecalcSkills</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RememberOldBackstory</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetTickInput</name>
                        <newname>aq</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.Trait,RimWorld.Trait,bool&gt;</signature>
                        <name>FTraitComparator</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Trait,string&gt;</signature>
                        <name>FTraitLabel</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Trait,string&gt;</signature>
                        <name>FTraitTooltip</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ageBuffer</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bRemoveAbility</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bRemoveTrait</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowPsyValues</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>chronoAgeBuffer</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>RimWorld.RoyalTitle</signature>
                        <name>currentTitle</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iAge</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iChronoAge</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTickInputAge</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTickInputName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTickInputSkill</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Ability&gt;</signature>
                        <name>lCopyAbilities</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Trait&gt;</signature>
                        <name>lCopyTraits</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;</signature>
                        <name>lOfColonists</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.SkillRecord&gt;</signature>
                        <name>lOfCopySkills</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.RoyalTitleDef&gt;</signature>
                        <name>lOfRoyalTitles</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>RimWorld.BackstoryDef</signature>
                        <name>oBackAdult</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>RimWorld.BackstoryDef</signature>
                        <name>oBackChild</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regexInt</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosParam</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollTraits</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>RimWorld.Ideo</signature>
                        <name>selectedIdeo</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedParamName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>selectedTrainer</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tooltip1</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tooltip2</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ttip</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uniqueID</name>
                        <newname>z</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockBio/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/c/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.RoyalTitleDef)</signature>
                        <name>&lt;.ctor&gt;b__30_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Trait)</signature>
                        <name>&lt;.ctor&gt;b__30_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Trait, RimWorld.Trait)</signature>
                        <name>&lt;.ctor&gt;b__30_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.Ability)</signature>
                        <name>&lt;DrawAbilities&gt;b__100_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;DrawDesc&gt;b__37_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.RoyalTitleDef)</signature>
                        <name>&lt;DrawTitle&gt;b__71_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>&lt;DrawTraining&gt;b__110_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockBio/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.GenUI/StackElementWidthGetter`1&lt;RimWorld.Ability&gt;</signature>
                        <name>&lt;&gt;9__100_1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>&lt;&gt;9__110_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.RoyalTitleDef,bool&gt;</signature>
                        <name>&lt;&gt;9__30_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Trait,string&gt;</signature>
                        <name>&lt;&gt;9__30_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.Trait,RimWorld.Trait,bool&gt;</signature>
                        <name>&lt;&gt;9__30_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;string&gt;</signature>
                        <name>&lt;&gt;9__37_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.RoyalTitleDef,string&gt;</signature>
                        <name>&lt;&gt;9__71_0</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockBio/&lt;&gt;c__DisplayClass100_0</name>
                <newname>CharacterEditor.CEditor/c/c/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, RimWorld.Ability)</signature>
                        <name>&lt;DrawAbilities&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockBio</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockBio/&lt;&gt;c__DisplayClass100_1</name>
                <newname>CharacterEditor.CEditor/c/c/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;DrawAbilities&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>RimWorld.Ability</signature>
                        <name>abilCapture</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockBio/&lt;&gt;c__DisplayClass111_0</name>
                <newname>CharacterEditor.CEditor/c/c/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;DoTrainableTooltip&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.AcceptanceReport</signature>
                        <name>canTrain</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>RimWorld.TrainableDef</signature>
                        <name>td</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth</name>
                <newname>CharacterEditor.CEditor/c/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32(System.Linq.IGrouping`2&lt;Verse.BodyPartRecord,Verse.Hediff&gt;)</signature>
                        <name>&lt;VisibleHediffGroupsInOrder&gt;b__17_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddHediff</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAnaesthetize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyHealth</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff)</signature>
                        <name>AEditHediff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFullHeal</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>AHiddenChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AHurt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AMedicate</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteHealth</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomHealth</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARemoveHediff</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARessurect</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff)</signature>
                        <name>BRemoveHediff</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoRightRowHighlight</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawHealth</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, Verse.Pawn, bool)</signature>
                        <name>DrawHediffListing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, Verse.Pawn, System.Collections.Generic.IEnumerable`1&lt;Verse.Hediff&gt;, float32&amp;)</signature>
                        <name>DrawHediffRow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawLower</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawUpper</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.BodyPartRecord)</signature>
                        <name>GetListPriority</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, System.Collections.Generic.IEnumerable`1&lt;Verse.Hediff&gt;, Verse.Pawn, Verse.BodyPartRecord)</signature>
                        <name>OnClickOrHover</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.Linq.IGrouping`2&lt;Verse.BodyPartRecord,Verse.Hediff&gt;&gt;(Verse.Pawn, bool)</signature>
                        <name>VisibleHediffGroupsInOrder</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Verse.Hediff&gt;(Verse.Pawn, bool)</signature>
                        <name>VisibleHediffs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowHidden</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowHidden</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>HighlightColor</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>StaticHighlightColor</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bHighlight</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowHidden</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowRemove</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>backgr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Hediff&gt;</signature>
                        <name>lCopyHealth</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>lastMaxIconsTotalWidth</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>scrollH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Texture2D</signature>
                        <name>texBleeding</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/d/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(Verse.Hediff)</signature>
                        <name>&lt;DrawHediffRow&gt;b__21_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Hediff)</signature>
                        <name>&lt;DrawHediffRow&gt;b__21_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, Verse.GenUI/AnonymousStackElement)</signature>
                        <name>&lt;DrawHediffRow&gt;b__21_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.GenUI/AnonymousStackElement)</signature>
                        <name>&lt;DrawHediffRow&gt;b__21_3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.GenUI/AnonymousStackElement)</signature>
                        <name>&lt;DrawHediffRow&gt;b__21_4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.BodyPartRecord(Verse.Hediff)</signature>
                        <name>&lt;VisibleHediffGroupsInOrder&gt;b__17_0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Hediff,Verse.BodyPartRecord&gt;</signature>
                        <name>&lt;&gt;9__17_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Hediff,int32&gt;</signature>
                        <name>&lt;&gt;9__21_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Hediff,int32&gt;</signature>
                        <name>&lt;&gt;9__21_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.GenUI/StackElementDrawer`1&lt;Verse.GenUI/AnonymousStackElement&gt;</signature>
                        <name>&lt;&gt;9__21_2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Verse.GenUI/StackElementWidthGetter`1&lt;Verse.GenUI/AnonymousStackElement&gt;</signature>
                        <name>&lt;&gt;9__21_3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GenUI/AnonymousStackElement,float32&gt;</signature>
                        <name>&lt;&gt;9__21_4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass18_0</name>
                <newname>CharacterEditor.CEditor/c/d/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Hediff)</signature>
                        <name>&lt;VisibleHediffs&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>showBloodLoss</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass21_0</name>
                <newname>CharacterEditor.CEditor/c/d/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass21_1</name>
                <newname>CharacterEditor.CEditor/c/d/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>&lt;DrawHediffRow&gt;b__5</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>&lt;DrawHediffRow&gt;b__6</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>&lt;DrawHediffRow&gt;b__7</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass21_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Texture2D</signature>
                        <name>bleedingIcon</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Rect</signature>
                        <name>iconsRect</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.Hediff</signature>
                        <name>localHediff</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.TextureAndColor</signature>
                        <name>stateIcon</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>totalBleedRate</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass21_2</name>
                <newname>CharacterEditor.CEditor/c/d/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;DrawHediffRow&gt;b__8</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass21_1</signature>
                        <name>CS$&lt;&gt;8__locals2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Hediff</signature>
                        <name>hediff</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;VisibleHediffGroupsInOrder&gt;d__17</name>
                <newname>CharacterEditor.CEditor/c/d/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;System.Linq.IGrouping`2&lt;Verse.BodyPartRecord,Verse.Hediff&gt;&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.Linq.IGrouping&lt;Verse.BodyPartRecord,Verse.Hediff&gt;&gt;.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Linq.IGrouping`2&lt;Verse.BodyPartRecord,Verse.Hediff&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Linq.IGrouping&lt;Verse.BodyPartRecord,Verse.Hediff&gt;&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Linq.IGrouping`2&lt;Verse.BodyPartRecord,Verse.Hediff&gt;</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;&gt;3__pawn</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__showBloodLoss</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockHealth</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;System.Linq.IGrouping`2&lt;Verse.BodyPartRecord,Verse.Hediff&gt;&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showBloodLoss</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;VisibleHediffs&gt;d__18</name>
                <newname>CharacterEditor.CEditor/c/d/d</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Verse.Hediff&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Verse.Hediff&gt;.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Verse.Hediff()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Verse.Hediff&gt;.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.Hediff</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;&gt;3__pawn</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__showBloodLoss</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockHealth</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Verse.Hediff&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;Verse.Hediff&gt;</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockHealth/&lt;&gt;c__DisplayClass18_0</signature>
                        <name>&lt;&gt;8__1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__3</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Hediff_MissingPart&gt;</signature>
                        <name>&lt;mpca&gt;5__2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showBloodLoss</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockInfo</name>
                <newname>CharacterEditor.CEditor/c/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOpenFactionCard</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Faction)</signature>
                        <name>ASetRelation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawEnemies</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Faction&gt;</signature>
                        <name>lfe</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uniqueID</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockInventory</name>
                <newname>CharacterEditor.CEditor/c/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddApparel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddGun</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyAll</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyApparel</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyInv</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyWeapon</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>ADropOrDestroy</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>AIngestThing</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteAll</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteApparel</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteInv</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteWeapon</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, int32)</signature>
                        <name>ARandomThing</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ARandomWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARedress</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AReequip</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AReinvent</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>AShift</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>AShowInfo</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AUndress</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, Verse.Thing)</signature>
                        <name>DoThingToolTip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawApparel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawArmorRating</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawCarryAndComfy</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawEquipment</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawInvData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawInventory</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawLowerButtons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32, Verse.Thing, int32)</signature>
                        <name>DrawThingRow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect, float32)</signature>
                        <name>GetCopyRect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect, float32)</signature>
                        <name>GetPasteRect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Thing)</signature>
                        <name>GetThingLabel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, bool)</signature>
                        <name>InterfaceDrop</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>InterfaceIngest</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, int32)</signature>
                        <name>OpenEditDialog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32)</signature>
                        <name>TryDrawComfyTemperatureRange</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32)</signature>
                        <name>TryDrawMassInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32, RimWorld.StatDef, string)</signature>
                        <name>TryDrawOverallArmor</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>BUTTONH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>ICONH</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Thing&gt;</signature>
                        <name>lOfCopyItems</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Apparel&gt;</signature>
                        <name>lOfCopyOutfits</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingWithComps&gt;</signature>
                        <name>lOfCopyWeapons</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>scrollH</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Thing&gt;</signature>
                        <name>workingInvList</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockInventory/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/f/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(RimWorld.Apparel)</signature>
                        <name>&lt;DrawApparel&gt;b__14_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockInventory/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Apparel,int32&gt;</signature>
                        <name>&lt;&gt;9__14_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockInventory/&lt;&gt;c__DisplayClass44_0</name>
                <newname>CharacterEditor.CEditor/c/f/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawThingRow&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockInventory</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.Thing</signature>
                        <name>thing</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>type</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockLog</name>
                <newname>CharacterEditor.CEditor/c/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LogInit</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>hLog</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.ITab_Pawn_Log_Utility/LogLineDisplayable&gt;</signature>
                        <name>logCachedDisplay</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>logCachedDisplayLastTick</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>logCachedPlayLastTick</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>RimWorld.ITab_Pawn_Log_Utility/LogDrawData</signature>
                        <name>logData</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Verse.LogEntry</signature>
                        <name>logSeek</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uniqueID</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>wLog</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>yLine</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockNeeds</name>
                <newname>CharacterEditor.CEditor/c/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(RimWorld.Need)</signature>
                        <name>AAddNeed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AClearAllMemory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADoAddThought</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADoRemoveThought</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFullNeeds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Need)</signature>
                        <name>ASubNeed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawLowerButtons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawMemories</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32, int32)</signature>
                        <name>DrawNeedBars</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawThoughtButtons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Thought, float32&amp;, float32&amp;, UnityEngine.Texture2D&amp;, UnityEngine.Color&amp;)</signature>
                        <name>IconAndOffsetHelper</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Thought, string&amp;, string&amp;, string&amp;, string&amp;, int32)</signature>
                        <name>LabelHelper</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bToggleShowRemoveThought</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>hNeedBar</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>listH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>wNeedBar</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yStartMemories</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockPawnList</name>
                <newname>CharacterEditor.CEditor/c/l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;DrawListSelector&gt;b__15_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddStartPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAllowRemovePawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangedOnMap</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.PawnKindDef)</signature>
                        <name>APKDChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>ARaceChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ChangeList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckPawnFromSelector</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawListCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32)</signature>
                        <name>DrawListSelector</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawOnMap</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32)</signature>
                        <name>DrawTopBottons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReloadList</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateRaceList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.Faction&gt;()</signature>
                        <name>get_DicFactions</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPlayerFaction</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;()</signature>
                        <name>get_ListOfPawnKinds</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;()</signature>
                        <name>get_ListOfPawns</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bShowRemovePawn</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.Capturer</signature>
                        <name>capturer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>colParam</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lraces</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockPawnList/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/l/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawListSelector&gt;b__15_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockPawnList/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__15_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockPerson</name>
                <newname>CharacterEditor.CEditor/c/k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(RimWorld.Apparel)</signature>
                        <name>&lt;DrawApparelSelector&gt;b__39_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddPawn</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.BeardDef)</signature>
                        <name>ABeardSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABeginTeleportSelectPawn</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TattooDef)</signature>
                        <name>ABodyTattooSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel)</signature>
                        <name>AChangeApparelUI</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeEyeUI</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeHairUI</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeHeadAddons</name>
                        <newname>b0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChangeSkinUI</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>AChangeWeaponUI</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseBeardCustom</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseBodyCustom</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseBodyTattooCustom</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseFaceTattooCustom</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseGradientCustom</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseHairCustom</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseHeadCustom</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChooseNextPawn</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AChoosePrevPawn</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AClonePawn</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel)</signature>
                        <name>AConfigApparelcolor</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigBeard</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigBodyTattoo</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigEyeColor</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigFaceTattoo</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigHair</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigHaircolor</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfigSkincolor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>AConfigWeaponcolor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFACustomBrow</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFACustomEye</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFACustomHead</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFACustomLid</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFACustomMouth</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFACustomSkin</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFARandomBrow</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFARandomEye</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFARandomHead</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFARandomLid</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFARandomMouth</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFARandomSkin</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFASetCustomBrow</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFASetCustomEye</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFASetCustomFace</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFASetCustomLid</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFASetCustomMouth</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFASetCustomSkin</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetNextBrow</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetNextEye</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetNextHead</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetNextLid</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetNextMouth</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetNextSkin</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetPrevBrow</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetPrevEye</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetPrevHead</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetPrevLid</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetPrevMouth</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFASetPrevSkin</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TattooDef)</signature>
                        <name>AFaceTattooSelected</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFindPawn</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.HairDef)</signature>
                        <name>AHairSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AJumpToPawn</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ALoadPawn</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AMoveDown</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AMoveUp</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AOnApparelColorChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnBodyOpen</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AOnEyeColorChanged</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AOnHairColorChanged</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnHairOpen</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnHeadOpen</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnHeadOpen2</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>AOnMelaninChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AOnSkinColorChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel)</signature>
                        <name>AOnTextureApparel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>AOnTextureWeapon</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AOnWeaponColorChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AQuickResurrect</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel)</signature>
                        <name>ARandomApparel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomBeard</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomBody</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomBodyTattoo</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomEyeColor</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomFaceTattoo</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomGradient</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomHair</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomHairColor</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomHead</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomSkinColor</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>ARandomWeapon</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomizeBio</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomizeBodyParts</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomizeEquip</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomizePawn</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomizePawnKeepRace</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARemoveDeadLogo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARemovePawn</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>ARotate</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASavePawn</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.BeardDef)</signature>
                        <name>ASetBeardCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.BodyTypeDef)</signature>
                        <name>ASetBodyCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TattooDef)</signature>
                        <name>ASetBodyTattooCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TattooDef)</signature>
                        <name>ASetFaceTattooCustom</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.HairDef)</signature>
                        <name>ASetHairCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASetHairCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.HeadTypeDef)</signature>
                        <name>ASetHeadDefCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel)</signature>
                        <name>ASetNextApparel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextBeard</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextBody</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextBodyTattoo</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextFaceTattoo</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextGradient</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextHair</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetNextHead</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>ASetNextWeapon</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel)</signature>
                        <name>ASetPrevApparel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevBeard</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevBody</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevBodyTattoo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevFaceTattoo</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevGradient</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevHair</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASetPrevHead</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>ASetPrevWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AStartFacialEditorUI</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AStartPsychologyUI</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleColor</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AToggleHats</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AToggleNude</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleR</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleSkinColor</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawApparelSelector</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawBeardSelector</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawBody</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawBodySelector</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawBodyTattooSelector</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawDeadLogo</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawEyeColorSelection</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawFaceTattooSelector</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawGradientSelector</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawHaare</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawHairColorSelector</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawHairSelector</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawHead</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawImage</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawMainIcons</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawSkinColorSelector</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawTop</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawWeaponSelector</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Selected, bool)</signature>
                        <name>EquipSelectedWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ApparelLayerDef(System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;)</signature>
                        <name>GetBestLayer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(RimWorld.Apparel)</signature>
                        <name>GetDrawOrder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.ApparelLayerDef(System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;, RimWorld.Apparel)</signature>
                        <name>GetFreeLayer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;()</signature>
                        <name>GetPawnKindDefs</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;(RimWorld.Apparel)</signature>
                        <name>GetUsedLayers</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel, bool, bool, bool)</signature>
                        <name>NextOrRandomApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps, bool, bool)</signature>
                        <name>NextOrRandomWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32, bool)</signature>
                        <name>SlotLabel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Selected, UnityEngine.Color)</signature>
                        <name>WearSelectedApparel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.Faction&gt;()</signature>
                        <name>get_DicFactions</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectFullSolid</name>
                        <newname>cp</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>RimWorld.Apparel</signature>
                        <name>apparelCurrent</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bIsBodyOpen</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bIsHairOpen</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bIsHeadOpen</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowClothes</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowHat</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>deftest</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>h</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTickRemoveDeadLogo</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTickTool</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isAlien</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isApparelConfigOpen</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isBeardConfigOpen</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isBodyTattooConfigOpen</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isEyeConfigOpen</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFaceTattooConfigOpen</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isHairConfigOpen</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isHaircolorConfigOpen</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPrimaryColor</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPrimarySkinColor</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isSkinConfigOpen</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isWeaponConfigOpen</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.BeardDef&gt;</signature>
                        <name>lOfBeardDefs</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.TattooDef&gt;</signature>
                        <name>lOfBodyTattooDefs</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.TattooDef&gt;</signature>
                        <name>lOfFaceTattooDefs</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.HairDef&gt;</signature>
                        <name>lOfHairDefs</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>randomDeadColor</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedModName</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>w</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingWithComps</signature>
                        <name>weaponCurrent</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockPerson/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/k/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.BeardDef)</signature>
                        <name>&lt;AChooseBeardCustom&gt;b__127_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BodyTypeDef)</signature>
                        <name>&lt;AChooseBodyCustom&gt;b__156_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.TattooDef)</signature>
                        <name>&lt;AChooseBodyTattooCustom&gt;b__163_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.TattooDef)</signature>
                        <name>&lt;AChooseFaceTattooCustom&gt;b__117_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AChooseGradientCustom&gt;b__149_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.HairDef)</signature>
                        <name>&lt;AChooseHairCustom&gt;b__136_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.HeadTypeDef)</signature>
                        <name>&lt;AChooseHeadCustom&gt;b__106_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AFACustomBrow&gt;b__86_0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AFACustomEye&gt;b__96_0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AFACustomHead&gt;b__101_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AFACustomLid&gt;b__91_0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AFACustomMouth&gt;b__81_0</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;AFACustomSkin&gt;b__76_0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ApparelLayerDef)</signature>
                        <name>&lt;AToggleHats&gt;b__71_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ApparelLayerDef)</signature>
                        <name>&lt;AToggleHats&gt;b__71_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawBeardSelector&gt;b__125_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BeardDef)</signature>
                        <name>&lt;DrawBeardSelector&gt;b__125_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BeardDef)</signature>
                        <name>&lt;DrawBeardSelector&gt;b__125_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BeardDef, RimWorld.BeardDef)</signature>
                        <name>&lt;DrawBeardSelector&gt;b__125_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawHairSelector&gt;b__135_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.HairDef)</signature>
                        <name>&lt;DrawHairSelector&gt;b__135_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.HairDef)</signature>
                        <name>&lt;DrawHairSelector&gt;b__135_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.HairDef, RimWorld.HairDef)</signature>
                        <name>&lt;DrawHairSelector&gt;b__135_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawTop&gt;b__46_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockPerson/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__101_0</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HeadTypeDef,string&gt;</signature>
                        <name>&lt;&gt;9__106_0</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TattooDef,string&gt;</signature>
                        <name>&lt;&gt;9__117_0</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__125_0</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BeardDef,string&gt;</signature>
                        <name>&lt;&gt;9__125_1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BeardDef,string&gt;</signature>
                        <name>&lt;&gt;9__125_2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.BeardDef,RimWorld.BeardDef,bool&gt;</signature>
                        <name>&lt;&gt;9__125_3</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BeardDef,string&gt;</signature>
                        <name>&lt;&gt;9__127_0</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__135_0</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.HairDef,string&gt;</signature>
                        <name>&lt;&gt;9__135_1</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.HairDef,string&gt;</signature>
                        <name>&lt;&gt;9__135_2</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.HairDef,RimWorld.HairDef,bool&gt;</signature>
                        <name>&lt;&gt;9__135_3</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.HairDef,string&gt;</signature>
                        <name>&lt;&gt;9__136_0</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__149_0</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BodyTypeDef,string&gt;</signature>
                        <name>&lt;&gt;9__156_0</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TattooDef,string&gt;</signature>
                        <name>&lt;&gt;9__163_0</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__46_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,bool&gt;</signature>
                        <name>&lt;&gt;9__71_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,bool&gt;</signature>
                        <name>&lt;&gt;9__71_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__76_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__81_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__86_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__91_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__96_0</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockPerson/&lt;&gt;c__DisplayClass66_0</name>
                <newname>CharacterEditor.CEditor/c/k/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ALoadPawn&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentSlot</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockPerson/&lt;&gt;c__DisplayClass68_0</name>
                <newname>CharacterEditor.CEditor/c/k/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ASavePawn&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentSlot</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockRecords</name>
                <newname>CharacterEditor.CEditor/c/i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawMiniCapsule</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockRecords/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/i/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawMiniCapsule&gt;b__2_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockRecords/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__2_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockSocial</name>
                <newname>CharacterEditor.CEditor/c/j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>&lt;get_FGetRelationLabel2&gt;b__52_0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>&lt;get_FGetRelationLabel3&gt;b__54_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>&lt;get_FGetRelationLabel4&gt;b__56_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>&lt;get_FGetRelationLabel&gt;b__50_0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddIndirectRelation</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddRelation</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddThought</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.InspirationDef)</signature>
                        <name>AChangeInspiration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.MentalStateDef)</signature>
                        <name>AChangeMentalState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnGenderChange</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnGenderChange2</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnGenderChange3</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnGenderChange4</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnImgAction</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnParent2Selected</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnParent3Selected</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnParent4Selected</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.PawnRelationDef)</signature>
                        <name>AOnRelationSelected</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASelectOtherPawn</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleRemove</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>CreateDirect</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>CreateIndirect</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.CEditor/EditorUI/coord)</signature>
                        <name>Draw</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawCard</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X)</signature>
                        <name>DrawDirect</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X)</signature>
                        <name>DrawIndirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawRelations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawUpper</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>GetLabelSelectedPawn</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>GetLabelSelectedPawn2</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>GetLabelSelectedPawn3</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>GetLabelSelectedPawn4</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleChild</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleGrandparent</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleHalfSibling</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleSibling</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleUncle</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.InspirationDef,string&gt;()</signature>
                        <name>get_FGetInspirationLabel</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.MentalStateDef,string&gt;()</signature>
                        <name>get_FGetMentalLabel</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.PawnRelationDef,string&gt;()</signature>
                        <name>get_FGetRelationLabel</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.PawnRelationDef,string&gt;()</signature>
                        <name>get_FGetRelationLabel2</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.PawnRelationDef,string&gt;()</signature>
                        <name>get_FGetRelationLabel3</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.PawnRelationDef,string&gt;()</signature>
                        <name>get_FGetRelationLabel4</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;()</signature>
                        <name>get_FGetThoughtLabel</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn4</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn4</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn2&gt;k__BackingField</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn3&gt;k__BackingField</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn4&gt;k__BackingField</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn&gt;k__BackingField</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LIST_OBJ_H</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LIST_OBJ_W</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LIST_SELECTED_H</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>allowGender2</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>allowGender3</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>allowGender4</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowRemove</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>canAddRelation</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>RimWorld.DirectPawnRelation</signature>
                        <name>dpr</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>imgSize</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.PawnRelationDef&gt;</signature>
                        <name>lOfIndirectRelations</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.InspirationDef&gt;</signature>
                        <name>lOfInspirations</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.MentalStateDef&gt;</signature>
                        <name>lOfMentalStates</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;</signature>
                        <name>lOfRelatedPawns</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.PawnRelationDef&gt;</signature>
                        <name>lOfRelations</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollDirectRelated</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollIndirectRelated</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>RimWorld.PawnRelationDef</signature>
                        <name>selRelation1</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>RimWorld.PawnRelationDef</signature>
                        <name>selRelation2</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>RimWorld.PawnRelationDef</signature>
                        <name>selRelation3</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>RimWorld.PawnRelationDef</signature>
                        <name>selRelation4</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>Verse.Gender</signature>
                        <name>selectedGender</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>Verse.Gender</signature>
                        <name>selectedGender2</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Verse.Gender</signature>
                        <name>selectedGender3</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Verse.Gender</signature>
                        <name>selectedGender4</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>RimWorld.PawnRelationDef</signature>
                        <name>selectedIndirectRelationDef</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>RimWorld.InspirationDef</signature>
                        <name>selectedInspiration</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Verse.MentalStateDef</signature>
                        <name>selectedMentalState</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>selectedPawnToSwap</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showPawn3</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showPawn4</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>widthLeft</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/BlockSocial/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/c/j/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.PawnRelationDef)</signature>
                        <name>&lt;.ctor&gt;b__26_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>&lt;AChangeMentalState&gt;b__66_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.InspirationDef)</signature>
                        <name>&lt;get_FGetInspirationLabel&gt;b__44_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.MentalStateDef)</signature>
                        <name>&lt;get_FGetMentalLabel&gt;b__46_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;get_FGetThoughtLabel&gt;b__48_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/BlockSocial/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.PawnRelationDef,bool&gt;</signature>
                        <name>&lt;&gt;9__26_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.InspirationDef,string&gt;</signature>
                        <name>&lt;&gt;9__44_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.MentalStateDef,string&gt;</signature>
                        <name>&lt;&gt;9__46_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,bool&gt;</signature>
                        <name>&lt;&gt;9__66_0</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/TabType</name>
                <newname>CharacterEditor.CEditor/c/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockBio</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockHealth</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockInfo</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockInventory</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockLog</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockNeeds</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockPawnList</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockPerson</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockRecords</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>BlockSocial</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/EditorUI/TabType</signature>
                        <name>None</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/EditorUI/coord</name>
                <newname>CharacterEditor.CEditor/c/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>h</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>w</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModData</name>
                <newname>CharacterEditor.CEditor/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0, CharacterEditor.EType)</signature>
                        <name>AddClassContainer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.List`1&lt;!!0&gt;, CharacterEditor.EType)</signature>
                        <name>AddServiceContainer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.EType)</signature>
                        <name>CreateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.EType)</signature>
                        <name>CreateType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(CharacterEditor.EType)</signature>
                        <name>Get</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(CharacterEditor.EType)</signature>
                        <name>Has</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;!!0&gt;(CharacterEditor.EType)</signature>
                        <name>ListOf</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>OnSettingsChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReInitSettings</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>StartEditor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateArchitectObjects</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateGraphics</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateKeyBindings</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateMainButton</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateUIParameter</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;CharacterEditor.EType,System.ComponentModel.Design.ServiceContainer&gt;</signature>
                        <name>dicData</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>p</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useZombrella</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModData/&lt;&gt;c</name>
                <newname>CharacterEditor.CEditor/b/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;CreateType&gt;b__12_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;CreateType&gt;b__12_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/ModData/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__12_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__12_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModOptions</name>
                <newname>CharacterEditor.CEditor/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>BoolSettingsToString</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Configurate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExposeData</name>
                    </method>
                    <method>
                        <signature>bool(CharacterEditor.OptionB)</signature>
                        <name>Get</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(CharacterEditor.OptionI)</signature>
                        <name>Get</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(CharacterEditor.OptionS)</signature>
                        <name>Get</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSlot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>IntSettingsToString</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Load</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadBoolSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadIntSettings</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadSlots</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadStringSettings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>PawnSlotsToString</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReInit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RescueOldPawns</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveSettings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveSlots</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.OptionS, string, string)</signature>
                        <name>SetCustom</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string, bool)</signature>
                        <name>SetSlot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>StringSettingsToString</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.OptionB)</signature>
                        <name>Toggle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateNumSlots</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdatingCustoms</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PATH_MODDIR</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PATH_PAWNS</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PATH_SETTINGS</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PATH_MODDIR</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PATH_MODDIR&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bDoRescue</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;CharacterEditor.OptionB,CharacterEditor.CEditor/ModOptions/BData&gt;</signature>
                        <name>dicBool</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;CharacterEditor.OptionI,CharacterEditor.CEditor/ModOptions/IData&gt;</signature>
                        <name>dicInt</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;</signature>
                        <name>dicSlots</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;CharacterEditor.OptionS,CharacterEditor.CEditor/ModOptions/SData&gt;</signature>
                        <name>dicString</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModOptions/BData</name>
                <newname>CharacterEditor.CEditor/a/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>Default</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Descr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Title</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Value</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModOptions/DialogConfigurate</name>
                <newname>CharacterEditor.CEditor/a/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AConfirmDelete</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADeleteCustoms</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADeleteSlots</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AExportSlots</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AImportSlots</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AMinusInt</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>APlusInt</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.OptionB)</signature>
                        <name>BoolChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ChangeHotkey</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoOnce</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawBoolean</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawButtons</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawHotkey</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string, CharacterEditor.OptionS, string, string)</signature>
                        <name>DrawHotkey</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawHotkeyTeleport</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawNumeric</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawStrings</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawTitle</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string, CharacterEditor.OptionS)</signature>
                        <name>RemoveHotkey</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectAccept</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectBottom</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectConfig</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectFrame</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectFullWidth</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectHalfWidth</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectHotkey</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectHotkeyLabel</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectImage</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectNumeric</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectRemoveHotkey</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectSlider</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectSliderLabel</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_RectSolid</name>
                        <newname>p</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buttonWidth</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frameH</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>framwW</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CEditor/ModOptions</signature>
                        <name>mo</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModOptions/DialogConfigurate/&lt;&gt;c__DisplayClass58_0</name>
                <newname>CharacterEditor.CEditor/a/d/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawHotkey&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawHotkey&gt;b__1</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CEditor/ModOptions/DialogConfigurate</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>kbdName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionS</signature>
                        <name>s</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModOptions/IData</name>
                <newname>CharacterEditor.CEditor/a/b</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Default</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Descr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Title</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Value</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CEditor/ModOptions/SData</name>
                <newname>CharacterEditor.CEditor/a/c</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Default</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Descr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Title</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Value</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Capturer</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>ChangeRenderTextureParamter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int32, int32)</signature>
                        <name>DrawPawnImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.RenderTexture(Verse.Pawn, bool)</signature>
                        <name>GetRenderTexture</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>PrepareForRender</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Render</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>RotateAndCapture</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ToggleHatAndCapture</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ToggleNudeAndCapture</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>UpdatePawnGraphic</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_Pawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_Pawn</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;Pawn&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bHats</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bNude</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bUpdateGraphics</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iCurrentRotation</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.RenderTexture</signature>
                        <name>image</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>imageH</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>imageW</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Rot4&gt;</signature>
                        <name>lRotation</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>renderH</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.RenderTextureFormat</signature>
                        <name>renderTextureFormat</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>renderW</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>v2</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CharacterEditorCascet</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Thing, bool)</signature>
                        <name>TryAcceptThing</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>innerPawn</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CharacterEditorGrave</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EjectContents</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Verse.FloatMenuOption&gt;(Verse.Pawn)</signature>
                        <name>GetFloatMenuOptions</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Thing, bool)</signature>
                        <name>TryAcceptThing</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Thing)</signature>
                        <name>TryToEnter</name>
                    </method>
                    <method>
                        <signature>Verse.Graphic()</signature>
                        <name>get_Graphic</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Graphic</signature>
                        <name>cachedGraphicFull</name>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>innerPawn</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Verse.Graphic()</signature>
                        <name>Graphic</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CharacterEditorGrave/&lt;&gt;c__DisplayClass5_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GetFloatMenuOptions&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.CharacterEditorGrave</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>myPawn</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CharacterEditorGrave/&lt;GetFloatMenuOptions&gt;d__5</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Verse.FloatMenuOption&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Verse.FloatMenuOption&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Verse.FloatMenuOption()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Verse.FloatMenuOption&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.FloatMenuOption</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;&gt;3__myPawn</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.CharacterEditorGrave</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>myPawn</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Verse.FloatMenuOption()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Verse.FloatMenuOption&gt;.Current</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CharacterEditorMod</name>
                <methodlist>
                    <method>
                        <signature>void(Verse.ModContentPack)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoSettingsWindowContents</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SettingsCategory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>MODID</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Clipboard</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>CloseClipboard</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CopyToClip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>OpenClipboard</name>
                    </method>
                    <method>
                        <signature>native int(unsigned int32, native int)</signature>
                        <name>SetClipboardData</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ColorTool</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string(UnityEngine.Color)</signature>
                        <name>ColorHexString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(UnityEngine.Color, float32)</signature>
                        <name>GetDerivedColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(float32, float32, bool)</signature>
                        <name>GetRandomColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(string)</signature>
                        <name>HexStringToColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;()</signature>
                        <name>get_ListOfColors</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color()</signature>
                        <name>get_RandomAlphaColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color()</signature>
                        <name>get_RandomColor</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>DMAX</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>DMAXB</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>FMAX</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>FMAXB</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMAX</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IMAXB</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colAsche</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colBeige</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colBlack</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colBlaze</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colBlue</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colBrown</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colBurgundy</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colChartreuse</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkBlue</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkBrown</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkDimGray</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkGray</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkGreen</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkOlive</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkPurple</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkRed</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDarkYellow</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colDimGray</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colFoilageGreen</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colGold</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colGraphite</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colGray</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colGreen</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colHotPink</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colKhaki</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightBlue</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightBrown</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightGray</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightGreen</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightOrange</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightPurple</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightRed</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLightYellow</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colLimeGreen</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colMaroon</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colNavyBlue</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colOlive</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colOliveDrab</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colOrange</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colPeach</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colPink</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colPureBlue</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colPureGreen</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colPureRed</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colPurple</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colRed</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colRoyalBlue</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colSkyBlue</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colTan</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colTawny</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colTeal</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colTurquoise</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colWhite</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colYellow</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>colYellowGold</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;</signature>
                        <name>lcolors</name>
                        <newname>a3</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ColorType</name>
                <newname>bm</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>ApparelColor</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>EyeColor</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>FavColor</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>HairColor</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>SkinColor</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>WeaponColor</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CompTool</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>Verse.HediffComp(Verse.Pawn, bool, string)</signature>
                        <name>GetHediffComp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CompatibilityTool</name>
                <methodlist>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetFavoriteColorTooltip</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPersonalitiesTooltip</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPersonality</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetRJWTooltip</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>OpenPersonalitiesDialog</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>OpenRJWDialog</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetPersonality</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>UpdateLifestage</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.CustomDialog</name>
                <newname>k</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Action, System.Action, System.Action)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnAbort</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnAccept</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ASetAlwaysSkip</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnCancelKeyPressed</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_InteractionDelayExpired</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_TimeUntilInteractive</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>ButtonHeight</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>TitleHeight</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>buttonAbortAction</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>buttonAbortText</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>buttonAcceptAction</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>buttonAcceptText</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>buttonNextAction</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>buttonNextText</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>creationRealTime</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>interactionDelay</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosition</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DefTool</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>RimWorld.AbilityDef(string)</signature>
                        <name>AbilityDef</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>Verse.ApparelLayerDef(string)</signature>
                        <name>ApparelLayerDef</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>RimWorld.BackstoryDef(string)</signature>
                        <name>BackstoryDef</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>RimWorld.BeardDef(string)</signature>
                        <name>BeardDef</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>Verse.BodyPartGroupDef(string)</signature>
                        <name>BodyPartGroupDef</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>RimWorld.BodyTypeDef(string)</signature>
                        <name>BodyTypeDef</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;(Verse.ThingCategoryDef, string)</signature>
                        <name>CONDITION_IS_ITEM</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.StatDef,bool&gt;(System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;)</signature>
                        <name>CONDITION_STATDEFS_APPAREL</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.StatDef,bool&gt;(System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;)</signature>
                        <name>CONDITION_STATDEFS_WEAPON</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.DesignationCategoryDef(string)</signature>
                        <name>DesignationCategoryDef</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.DesignatorDropdownGroupDef(string)</signature>
                        <name>DesignatorDropdownGroupDef</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Verse.GeneDef(string)</signature>
                        <name>GeneDef</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>RimWorld.MainButtonDef(string, string, string, System.Type, Verse.ModContentPack, string, bool)</signature>
                        <name>GetCreateMainButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>GetDef</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Def)</signature>
                        <name>GetModName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Def, System.Type)</signature>
                        <name>GiveShortHashTo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.HairDef(string)</signature>
                        <name>HairDef</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>Verse.HediffDef(string)</signature>
                        <name>HediffDef</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Def)</signature>
                        <name>IsFromCoreMod</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Def, string)</signature>
                        <name>IsFromMod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Def)</signature>
                        <name>IsNullOrEmpty</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.JobDef(string)</signature>
                        <name>JobDef</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Verse.KeyBindingDef(string)</signature>
                        <name>KeyBindingDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;!!0&gt;()</signature>
                        <name>ListAll</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;!!0&gt;(System.Func`2&lt;!!0,bool&gt;)</signature>
                        <name>ListBy</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;!!0&gt;(string)</signature>
                        <name>ListByMod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;!!0&gt;(string, System.Func`2&lt;!!0,bool&gt;)</signature>
                        <name>ListByMod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;!!0&gt;(string, System.Func`2&lt;!!0,bool&gt;)</signature>
                        <name>ListByModWithNull</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;()</signature>
                        <name>ListModnames</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;(System.Func`2&lt;!!0,bool&gt;)</signature>
                        <name>ListModnames</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;(System.Func`2&lt;!!0,bool&gt;)</signature>
                        <name>ListModnamesWithNull</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>RimWorld.MainButtonDef(string)</signature>
                        <name>MainButtonDef</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>RimWorld.NeedDef(string)</signature>
                        <name>NeedDef</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef(string)</signature>
                        <name>PawnKindDef</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef(string, Verse.PawnKindDef)</signature>
                        <name>PawnKindDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.PawnRelationDef(string)</signature>
                        <name>PawnRelationDef</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>RimWorld.RecordDef(string)</signature>
                        <name>RecordDef</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Def)</signature>
                        <name>SDefname</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtStage)</signature>
                        <name>SLabel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Def)</signature>
                        <name>SLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>RimWorld.ScenPartDef(string)</signature>
                        <name>ScenPartDef</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>RimWorld.SkillDef(string)</signature>
                        <name>SkillDef</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>Verse.SoundDef(string)</signature>
                        <name>SoundDef</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>RimWorld.StatDef(string)</signature>
                        <name>StatDef</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>RimWorld.StuffCategoryDef(string)</signature>
                        <name>StuffCategoryDef</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>RimWorld.TattooDef(string)</signature>
                        <name>TattooDef</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(string)</signature>
                        <name>ThingDef</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(string, Verse.ThingDef)</signature>
                        <name>ThingDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingStyleDef(string)</signature>
                        <name>ThingStyleDef</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>RimWorld.ThoughtDef(string)</signature>
                        <name>ThoughtDef</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>RimWorld.TraitDef(string)</signature>
                        <name>TraitDef</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Verse.KeyBindingDef(string, string, string, string)</signature>
                        <name>TryCreateKeyBinding</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.WorkTypeDef(string)</signature>
                        <name>WorkTypeDef</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>RimWorld.XenotypeDef(string)</signature>
                        <name>XenotypeDef</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingCategoryDef,bool&gt;()</signature>
                        <name>get_CONDITION_NO_CORPSE</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/GiveShortHash</signature>
                        <name>giveShortHash</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>HarmonyLib.AccessTools/FieldRef`1&lt;System.Collections.Generic.Dictionary`2&lt;System.Type,System.Collections.Generic.HashSet`1&lt;unsigned int16&gt;&gt;&gt;</signature>
                        <name>takenShortHashes</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DefTool/&lt;&gt;c</name>
                <newname>ak/l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingCategoryDef)</signature>
                        <name>&lt;get_CONDITION_NO_CORPSE&gt;b__52_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingCategoryDef,bool&gt;</signature>
                        <name>&lt;&gt;9__52_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__43`1</name>
                <newname>ak/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListAll&gt;b__43_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c__43`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__43_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__45`1</name>
                <newname>ak/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListModnames&gt;b__45_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListModnames&gt;b__45_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c__45`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__45_1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__45_2</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__46`1</name>
                <newname>ak/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;ListModnames&gt;b__46_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListModnames&gt;b__46_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListModnames&gt;b__46_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c__46`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,bool&gt;</signature>
                        <name>&lt;&gt;9__46_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__46_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__46_2</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__48`1</name>
                <newname>ak/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListByMod&gt;b__48_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c__48`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__48_1</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__49`1</name>
                <newname>ak/i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListByMod&gt;b__49_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c__49`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__49_1</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__50`1</name>
                <newname>ak/k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;ListBy&gt;b__50_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DefTool/&lt;&gt;c__50`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__50_1</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass45_0`1</name>
                <newname>ak/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;ListModnames&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;!0,bool&gt;</signature>
                        <name>condition</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass48_0`1</name>
                <newname>ak/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;ListByMod&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;!0,bool&gt;</signature>
                        <name>condition</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass49_0`1</name>
                <newname>ak/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;ListByMod&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass50_0`1</name>
                <newname>ak/j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;ListBy&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;!0,bool&gt;</signature>
                        <name>condition</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass53_0</name>
                <newname>ak/m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;CONDITION_IS_ITEM&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingCategoryDef</signature>
                        <name>tc</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass54_0</name>
                <newname>ak/n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatDef)</signature>
                        <name>&lt;CONDITION_STATDEFS_APPAREL&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lnok</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DefTool/&lt;&gt;c__DisplayClass55_0</name>
                <newname>ak/o</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatDef)</signature>
                        <name>&lt;CONDITION_STATDEFS_WEAPON&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lnok</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DefTool/GiveShortHash</name>
                <newname>ak/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(Verse.Def, System.Type, System.Collections.Generic.HashSet`1&lt;unsigned int16&gt;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(Verse.Def, System.Type, System.Collections.Generic.HashSet`1&lt;unsigned int16&gt;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddAbility</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomAbility</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedStufe</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawDropdown</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawFilter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.AbilityDef,RimWorld.AbilityDef,bool&gt;</signature>
                        <name>FAbilityComparator</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.AbilityDef,string&gt;</signature>
                        <name>FAbilityLabel</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.AbilityDef,string&gt;</signature>
                        <name>FAbilityTooltip</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>alllevels</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.AbilityDef&gt;</signature>
                        <name>lOfAbilities</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lOfStufen</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>RimWorld.AbilityDef</signature>
                        <name>oldSelectedAbility</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>prepend</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>RimWorld.AbilityDef</signature>
                        <name>selectedAbility</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedModName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedStufe</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddAbility/&lt;&gt;c</name>
                <newname>l/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.AbilityDef)</signature>
                        <name>&lt;.ctor&gt;b__16_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.AbilityDef)</signature>
                        <name>&lt;.ctor&gt;b__16_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.AbilityDef, RimWorld.AbilityDef)</signature>
                        <name>&lt;.ctor&gt;b__16_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.AbilityDef)</signature>
                        <name>&lt;ASelectedStufe&gt;b__22_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__19_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawFilter&gt;b__20_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogAddAbility/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.AbilityDef,string&gt;</signature>
                        <name>&lt;&gt;9__16_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.AbilityDef,string&gt;</signature>
                        <name>&lt;&gt;9__16_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.AbilityDef,RimWorld.AbilityDef,bool&gt;</signature>
                        <name>&lt;&gt;9__16_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__19_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__20_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.AbilityDef,string&gt;</signature>
                        <name>&lt;&gt;9__22_1</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddAbility/&lt;&gt;c__DisplayClass22_0</name>
                <newname>l/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.AbilityDef)</signature>
                        <name>&lt;ASelectedStufe&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bAll</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>level</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddAnimal</name>
                <newname>az</newname>
                <methodlist>
                    <method>
                        <signature>void(CharacterEditor.DialogCapsuleUI)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.PawnKindDef)</signature>
                        <name>AAnimalSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawEditLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawTexture</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef, Verse.PawnKindDef)</signature>
                        <name>IsSameAnimal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogCapsuleUI</signature>
                        <name>CapsuleUI</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.PawnKindDef,Verse.PawnKindDef,bool&gt;</signature>
                        <name>FAnimalComparator</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iChangeTick0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;</signature>
                        <name>lOfAnimals</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxSliderVal</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>oldStackVal</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.PawnKindDef</signature>
                        <name>selectedAnimal</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stackVal</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddAnimal/&lt;&gt;c</name>
                <newname>az/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;.ctor&gt;b__13_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;.ctor&gt;b__13_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogAddAnimal/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__13_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__13_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddGene</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.GeneCategoryDef)</signature>
                        <name>ASelectedCategoryDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawCustomFilter</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(Verse.GeneDef)</signature>
                        <name>GetTooltip</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAccept</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnSelectionChanged</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Preselection</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneCategoryDef,string&gt;</signature>
                        <name>FCatLabel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bIsXeno</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.GeneCategoryDef&gt;</signature>
                        <name>lCat</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.GeneCategoryDef</signature>
                        <name>selGeneCategoryDef</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddGene/&lt;&gt;c</name>
                <newname>a/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.GeneCategoryDef)</signature>
                        <name>&lt;.ctor&gt;b__4_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.GeneCategoryDef)</signature>
                        <name>&lt;.ctor&gt;b__4_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.GeneDef)</signature>
                        <name>&lt;ASelectedCategoryDef&gt;b__8_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogAddGene/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneCategoryDef,bool&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneCategoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__4_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneDef,string&gt;</signature>
                        <name>&lt;&gt;9__8_1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddGene/&lt;&gt;c__DisplayClass8_0</name>
                <newname>a/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.GeneDef)</signature>
                        <name>&lt;ASelectedCategoryDef&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.GeneCategoryDef</signature>
                        <name>def</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddHediff</name>
                <newname>bw</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Hediff)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>AChangePermanent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectBodyPartRecord</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectFilter1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleOverride</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckIsReady</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff)</signature>
                        <name>CheckSelectionChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawAdjustableLevel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawAdjustablePain</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawAdjustableSeverity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawAdjustableTime</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawDropdown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawPermanent</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetExtraTipString</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateHediffList</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>Verse.BodyPartRecord()</signature>
                        <name>get_SelectedPart</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn4</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.BodyPartRecord)</signature>
                        <name>set_SelectedPart</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn4</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn2&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn3&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn4&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Verse.BodyPartRecord&gt;</signature>
                        <name>DicOfFilter2</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.HediffDef,Verse.HediffDef,bool&gt;</signature>
                        <name>FHediffComparator</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,string&gt;</signature>
                        <name>FHediffLabel</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,string&gt;</signature>
                        <name>FHediffTooltip</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bNeedsPart</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bNeedsPawn</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Verse.Hediff</signature>
                        <name>example</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>extraTipString</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>Verse.HediffComp_Disappears</signature>
                        <name>hDisappears</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>Verse.HediffComp_GetsPermanent</signature>
                        <name>hPermanent</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>inEditMode</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isAdjustable</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isOverridden</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPartSelectionDone</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPawnSelectionDone</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPermanent</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lOfFilter1</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.HediffDef&gt;</signature>
                        <name>lOfHediffs</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>Verse.HediffDef</signature>
                        <name>oldSelectedHediff</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>oldSeverity</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paramName</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>Verse.BodyPartRecord</signature>
                        <name>selPart</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>selPawn</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>selectedDuration</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Verse.HediffDef</signature>
                        <name>selectedHediff</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>selectedLevel</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>selectedPain</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>selectedSeverity</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yCalc</name>
                        <newname>an</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddHediff/&lt;&gt;c</name>
                <newname>bw/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.HediffDef)</signature>
                        <name>&lt;.ctor&gt;b__51_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.HediffDef)</signature>
                        <name>&lt;.ctor&gt;b__51_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef, Verse.HediffDef)</signature>
                        <name>&lt;.ctor&gt;b__51_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__66_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__66_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__66_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogAddHediff/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,string&gt;</signature>
                        <name>&lt;&gt;9__51_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,string&gt;</signature>
                        <name>&lt;&gt;9__51_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.HediffDef,Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__51_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__66_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__66_1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__66_2</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddStat</name>
                <newname>a9</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.ThingDef, bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>ASetStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatCategoryDef)</signature>
                        <name>ASetStatCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatCategoryDef)</signature>
                        <name>GetStatCategoryLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>GetStatLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatCategoryDef,string&gt;</signature>
                        <name>FGetStatCategoryLabel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>FGetStatLabel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isEquip</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isWeapon</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatDef&gt;</signature>
                        <name>lOfStat</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lOfStatCat</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>RimWorld.StatCategoryDef</signature>
                        <name>selectedStatCategoryDef</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>RimWorld.StatDef</signature>
                        <name>selectedStatDef</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>thingDef</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddThought</name>
                <newname>p</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;AModnameSelected&gt;b__54_0</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;AModnameSelected&gt;b__54_1</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;AModnameSelected&gt;b__54_2</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;AModnameSelected&gt;b__54_3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;AModnameSelected&gt;b__54_4</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;AModnameSelected&gt;b__54_5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;get_FGetThoughtLabel&gt;b__41_0</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;get_FGetTooltip&gt;b__39_0</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AModnameSelected</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.RoyalTitleDef)</signature>
                        <name>ARoyalTitleSelected</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASelectPawn</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AStageSelected</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.ThoughtDef)</signature>
                        <name>AThoughtSelected</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AThoughtTypeSelected</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawAccept</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawLowerDropdowns</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawSlider</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawThoughtList</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawUpperDropdowns</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>GetLabelForThought</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>GetTooltipForThought</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;()</signature>
                        <name>get_FGetPawnName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.RoyalTitleDef,string&gt;()</signature>
                        <name>get_FGetRoyalTitleLabel</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;()</signature>
                        <name>get_FGetThoughtLabel</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;()</signature>
                        <name>get_FGetTooltip</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn4</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn4</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn2&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn3&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn4&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAllOk</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bNeedOtherPawn</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bNeedStage</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bNeedTitle</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>baseMoodOffset</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;</signature>
                        <name>dicStages</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lListThoughts</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>lListType</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>lModnames</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.RoyalTitleDef&gt;</signature>
                        <name>lRoyalTitles</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lTAll</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lTMemory</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lTMemorySocial</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lTSituational</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lTSituationalSocial</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;</signature>
                        <name>lTUnsupported</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedModName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>selectedMoodOffset</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>selectedOpinionOffset</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedStage</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>RimWorld.ThoughtDef</signature>
                        <name>selectedThought</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>RimWorld.RoyalTitleDef</signature>
                        <name>selectedTitle</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedType</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddThought/&lt;&gt;c</name>
                <newname>p/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>&lt;.ctor&gt;b__50_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.RoyalTitleDef)</signature>
                        <name>&lt;.ctor&gt;b__50_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawLowerDropdowns&gt;b__62_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef, RimWorld.ThoughtDef)</signature>
                        <name>&lt;DrawThoughtList&gt;b__56_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawUpperDropdowns&gt;b__53_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawUpperDropdowns&gt;b__53_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>&lt;get_FGetPawnName&gt;b__45_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.RoyalTitleDef)</signature>
                        <name>&lt;get_FGetRoyalTitleLabel&gt;b__43_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogAddThought/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.RoyalTitleDef,string&gt;</signature>
                        <name>&lt;&gt;9__43_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>&lt;&gt;9__45_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,bool&gt;</signature>
                        <name>&lt;&gt;9__50_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.RoyalTitleDef,bool&gt;</signature>
                        <name>&lt;&gt;9__50_1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__53_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__53_1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.ThoughtDef,RimWorld.ThoughtDef,bool&gt;</signature>
                        <name>&lt;&gt;9__56_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__62_0</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddTrait</name>
                <newname>bv</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(RimWorld.Trait)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AChangedCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AChangedModName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatModifier)</signature>
                        <name>AChangedSM</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomTrait</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawDropdown</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32, int32)</signature>
                        <name>DrawList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDicTooltip</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatModifier,string&gt;</signature>
                        <name>FStatLabel</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,bool&gt;</signature>
                        <name>FTraitComparator</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,string&gt;</signature>
                        <name>FTraitLabel</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,string&gt;</signature>
                        <name>FTraitTooltip</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,string&gt;</signature>
                        <name>dicDesc</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lOfFilters</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lOfSM</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;&gt;</signature>
                        <name>lOfTraits</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;</signature>
                        <name>oldSelectedTrait</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>RimWorld.Trait</signature>
                        <name>oldTrait</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;</signature>
                        <name>selectedTrait</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogAddTrait/&lt;&gt;c</name>
                <newname>bv/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;)</signature>
                        <name>&lt;.ctor&gt;b__17_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;)</signature>
                        <name>&lt;.ctor&gt;b__17_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;, System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;)</signature>
                        <name>&lt;.ctor&gt;b__17_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatModifier)</signature>
                        <name>&lt;.ctor&gt;b__17_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__21_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__21_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogAddTrait/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__17_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__17_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,bool&gt;</signature>
                        <name>&lt;&gt;9__17_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatModifier,string&gt;</signature>
                        <name>&lt;&gt;9__17_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__21_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__21_1</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogArmory</name>
                <newname>ba</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawEditLabel&gt;b__63_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ApparelLayerDef)</signature>
                        <name>AAddApparelLayer</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AAddApparelTag</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.BodyPartGroupDef)</signature>
                        <name>AAddBodyPartGroup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AAddCosts</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>AAddEquipStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AAddOutfitTag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>AAddStat</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StuffCategoryDef)</signature>
                        <name>AAddStuffCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAllowRemoveStat</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AApparelSelected</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABuyApparel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyApparelLayer</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyApparelTag</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyBodyPartGroup</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyCosts</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyEquipStat</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyOutfitTag</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyStat</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyStuff</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADialogAddEquipStat</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADialogAddStat</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteApparelLayer</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteApparelTag</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteBodyPartGroup</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteCosts</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteEquipStat</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteOutfitTag</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteStat</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteStuff</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveApparelLayer</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveApparelTag</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveBodyPartGroup</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveCosts</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveEquipStat</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveOutfitTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveStat</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveStuffCategory</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetAll</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetOne</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASave</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>ASelectApparelFromSelector</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ApparelLayerDef)</signature>
                        <name>ASelectLayerCat</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.BodyPartGroupDef)</signature>
                        <name>ASelectedBodyPart</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TechLevel)</signature>
                        <name>ASetTechLevel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Tradeability)</signature>
                        <name>ASetTradeability</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleStats</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalcHSCROLL</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Confirmed</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawBodyParts</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawCosts</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawDropdown</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawEditLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawEquipStatProperties</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X)</signature>
                        <name>DrawExtras</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawLayers</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawLowerButtons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawOutfits</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawParameter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawStatProperties</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawStuffProperties</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawTags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32&amp;, float32, float32)</signature>
                        <name>DrawTexture</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetApparelLabel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ApparelLayerDef)</signature>
                        <name>GetApparelLayerLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetApparelTooltip</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.BodyPartGroupDef)</signature>
                        <name>GetBodyPartGroupLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>GetStatLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StuffCategoryDef)</signature>
                        <name>GetStuffCategoryLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetTagLabel</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.TechLevel)</signature>
                        <name>GetTechLevelLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingStyleDef)</signature>
                        <name>GetThingStyleDefLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Tradeability)</signature>
                        <name>GetTradeabilityLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>IsSameApparel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;Verse.ThingDef,Verse.ThingDef,bool&gt;</signature>
                        <name>FApparelComparator</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FApparelLabel</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FApparelTooltip</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ApparelLayerDef,string&gt;</signature>
                        <name>FGetApparelLayerLabel</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.BodyPartGroupDef,string&gt;</signature>
                        <name>FGetBodyPartGroupLabel</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>FGetStatLabel</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StuffCategoryDef,string&gt;</signature>
                        <name>FGetStuffCategoryLabel</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>FGetTagLabel</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TechLevel,string&gt;</signature>
                        <name>FGetTechLevelLabel</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;</signature>
                        <name>FGetThingStyleDefLabel</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Tradeability,string&gt;</signature>
                        <name>FGetTradeabilityLabel</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>HSCROLLPARAM</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>MAXW</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>SELECTED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TEXTURESIZE</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>WTITLE</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_APPA</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_PARAMS</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>allowRemove</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>firstPreselection</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iChangeTick0</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTick_AllowRemoveStat</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;</signature>
                        <name>lCopyApparelLayer</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lCopyApparelTag</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartGroupDef&gt;</signature>
                        <name>lCopyBodyPartGroup</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDefCountClass&gt;</signature>
                        <name>lCopyCost</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lCopyEquipStat</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lCopyOutfitTag</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lCopyStat</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StuffCategoryDef&gt;</signature>
                        <name>lCopyStuff</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;</signature>
                        <name>lOfAllLayers</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lOfApparel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lOfQuality</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>previousColor</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosParam</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tempName</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>toggleText</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogArmory/&lt;&gt;c</name>
                <newname>ba/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__59_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogArmory/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__59_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogCapsuleUI</name>
                <newname>a0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;DrawButtons&gt;b__28_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;DrawButtons&gt;b__28_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddParts</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddPartsAnimal</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddPartsMap</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAllowRemoveParts</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACommit</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOnAstronaut</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AOnLoadSlot</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AOnSaveSlot</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.ScenPart)</signature>
                        <name>ARemovePart</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.ScenPart)</signature>
                        <name>ARemovePartAnimal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.ScenPart)</signature>
                        <name>ARemovePartMap</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AStart</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Verse.PawnKindDef, int32)</signature>
                        <name>AddAnimal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, Verse.ThingStyleDef, int32)</signature>
                        <name>AddThingDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawAnimals</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawButtons</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawContainer</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawUIObjects</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawWreckage</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>FULLSLOTPATH</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitSlots</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateLists</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateSlots</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_rectLoad</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect()</signature>
                        <name>get_rectSave</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>HITEM</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SLOTPATH</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>WTITLE</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>addToTaken</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>astronautPic</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bShowRemove</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;</signature>
                        <name>dicSlots</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.ScenPart&gt;</signature>
                        <name>lParts</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.ScenPart&gt;</signature>
                        <name>lPartsAnimal</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.ScenPart&gt;</signature>
                        <name>lPartsOnMap</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.ScenPart&gt;</signature>
                        <name>lPartsTaken</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos3</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>RimWorld.ScenPart</signature>
                        <name>selectedPart</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeBackstory</name>
                <newname>bq</newname>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BackstoryDef)</signature>
                        <name>&lt;UpdateDictionary&gt;b__29_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ACategoryChanged</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFilter2Changed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFilterChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomBackstory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoRemoveAndClose</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.BackstoryDef)</signature>
                        <name>GetBackstoryLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BackstoryDef)</signature>
                        <name>GetBackstoryTooltip</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BackstoryDef, RimWorld.BackstoryDef)</signature>
                        <name>IsSameBackstory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RecalcSkills</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RememberOldBackstory</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDictionary</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.BackstoryDef,RimWorld.BackstoryDef,bool&gt;</signature>
                        <name>FBackstoryComparator</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>FBackstoryLabel</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>FBackstoryTooltip</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>dicBackstory</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.SkillDef&gt;</signature>
                        <name>dicOfFilters</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Verse.Gender</signature>
                        <name>gender</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isChildhood</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFiltered</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFilteredOld</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.BackstoryDef&gt;</signature>
                        <name>lOfBackstories</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>lOfCategories</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lOfFilter2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>RimWorld.BackstoryDef</signature>
                        <name>oBackAdult</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>RimWorld.BackstoryDef</signature>
                        <name>oBackChild</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>RimWorld.BackstoryDef</signature>
                        <name>selectedBackstory</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedCategory</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;string,RimWorld.SkillDef&gt;</signature>
                        <name>selectedFilter</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedFilter2</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeBackstory/&lt;&gt;c</name>
                <newname>bq/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(RimWorld.BackstoryDef)</signature>
                        <name>&lt;.ctor&gt;b__22_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DoWindowContents&gt;b__30_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DoWindowContents&gt;b__30_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DoWindowContents&gt;b__30_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.BackstoryDef)</signature>
                        <name>&lt;UpdateDictionary&gt;b__29_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogChangeBackstory/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,System.Collections.Generic.List`1&lt;string&gt;&gt;</signature>
                        <name>&lt;&gt;9__22_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.BackstoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__29_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__30_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__30_1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__30_2</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeBirthday</name>
                <newname>b3</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>BioTicks</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>ChronoTicks</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ChronologicalAge</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn4</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn4</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn2&gt;k__BackingField</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn3&gt;k__BackingField</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn4&gt;k__BackingField</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>&lt;SelectedPawn&gt;k__BackingField</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iMaxLifestage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelctedQuadrum</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedBioDay</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedBioHour</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedBioQuadrum</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedBioYear</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedDay</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedHour</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedLifestage</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSelectedYear</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedBioDay</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedBioHour</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedBioQuadrum</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedBioYear</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedDay</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedHour</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedLifestage</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedQuadrum</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedYear</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>startBioTick</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>startTick</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ticksPerDay</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ticksPerHour</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ticksPerQuadrum</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ticksPerYear</name>
                        <newname>ad</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeFaction</name>
                <newname>bt</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawEditLabel&gt;b__11_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawEditLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Faction)</signature>
                        <name>Factiondescr</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Faction)</signature>
                        <name>Factionlabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>iChangeTick</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Faction&gt;</signature>
                        <name>lOfFactions</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>RimWorld.Faction</signature>
                        <name>selectedFaction</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeFaction/&lt;&gt;c</name>
                <newname>bt/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.Faction)</signature>
                        <name>&lt;.ctor&gt;b__7_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogChangeFaction/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Faction,string&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeHeadAddons</name>
                <newname>bb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, float32)</signature>
                        <name>AOnDrawSizeChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, float32)</signature>
                        <name>AOnRotationChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ARemoveAddonFemale</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ARemoveAddonMale</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, float32)</signature>
                        <name>DrawAddon</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawAddons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>DrawCustom</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>aAddons</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>aOldAddonVariants</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Graphic&gt;</signature>
                        <name>lAddonGraphics</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lAddonVariants</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lMax</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lOldAddonVariants</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lPaths</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paramName</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosParam</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>tempPawn</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.Listing_X</signature>
                        <name>view</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeRace</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AChangeRace</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ARedress</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawDropdown</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32, int32)</signature>
                        <name>DrawList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdatePKDList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateRacesList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>humanlike</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>key</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.PawnKindDef&gt;</signature>
                        <name>lpkd</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lraces</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>raceDef</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Verse.PawnKindDef</signature>
                        <name>selectedPKD</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChangeRace/&lt;&gt;c</name>
                <newname>m/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef, Verse.PawnKindDef)</signature>
                        <name>&lt;DrawList&gt;b__20_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogChangeRace/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.PawnKindDef,Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__20_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChoosePart</name>
                <newname>bs</newname>
                <methodlist>
                    <method>
                        <signature>void(CharacterEditor.IPartable, Verse.HediffDef)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawAccept</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>DrawPartList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>addWholeBody</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.IPartable</signature>
                        <name>callback</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>countParts</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Verse.HediffDef</signature>
                        <name>hediff</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartRecord&gt;</signature>
                        <name>lOfParts</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.BodyPartRecord</signature>
                        <name>selectedPart</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChoosePawn</name>
                <newname>o</newname>
                <methodlist>
                    <method>
                        <signature>void(CharacterEditor.IPawnable, int32, Verse.Gender)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AFactionSelected</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawAccept</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawDropdowns</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawPawnList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.Faction&gt;()</signature>
                        <name>get_DicFactions</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.IPawnable</signature>
                        <name>callback</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Verse.Gender</signature>
                        <name>choosenGender</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>id</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;</signature>
                        <name>lOfPawns</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedListname</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>selectedPawn</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogChoosePawn/&lt;&gt;c</name>
                <newname>o/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdowns&gt;b__15_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogChoosePawn/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__15_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogColorPicker</name>
                <newname>bn</newname>
                <methodlist>
                    <method>
                        <signature>void(CharacterEditor.ColorType, bool, RimWorld.Apparel, Verse.ThingWithComps)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AApparelSelected</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Color)</signature>
                        <name>AColorSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AFromFavColor</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.HairDef)</signature>
                        <name>AHairSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomColor</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomizeHairAndColor</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AWeaponSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawColorSlider</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawColorTable</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>DrawDerivedColors</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawDropdown</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawLists</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawRadioButtons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTextFields</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HEXTextToSelectedColor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Apparel, Verse.ThingWithComps)</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel, Verse.ThingWithComps)</signature>
                        <name>Preselect</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RGBTextToSelectedColor</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TextValuesFromSelectedColor</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdatePawnColors</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Xwidth</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bInstantClose</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.ColorType</signature>
                        <name>colorType</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fAlpha</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fBlue</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fGreen</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fMaxBright</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fMinBright</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fRed</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iAlpha</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iBlue</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iGreen</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iRed</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isColor1Choosen</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPrimaryColor</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.HairDef&gt;</signature>
                        <name>lOfHairDefs</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>oldHex</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>oldSelected</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>oldsRGB</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>part</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regexColor</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regexHex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sHex</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sRGB</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>RimWorld.Apparel</signature>
                        <name>selectedApparel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>selectedColor</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>selectedDef</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>RimWorld.HairDef</signature>
                        <name>selectedHair</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedModName</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingWithComps</signature>
                        <name>selectedWeapon</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>tempPawn</name>
                        <newname>af</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogColorPicker/&lt;&gt;c</name>
                <newname>bn/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__39_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.HairDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.HairDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.HairDef, RimWorld.HairDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(RimWorld.Apparel)</signature>
                        <name>&lt;DrawLists&gt;b__48_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_4</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_5</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_6</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingWithComps)</signature>
                        <name>&lt;DrawLists&gt;b__48_7</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_8</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;DrawLists&gt;b__48_9</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogColorPicker/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__39_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.HairDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.HairDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.ThingDef,Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__48_10</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;RimWorld.HairDef,RimWorld.HairDef,bool&gt;</signature>
                        <name>&lt;&gt;9__48_2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Apparel,Verse.ThingDef&gt;</signature>
                        <name>&lt;&gt;9__48_3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.ThingDef,Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__48_6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingWithComps,Verse.ThingDef&gt;</signature>
                        <name>&lt;&gt;9__48_7</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_8</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_9</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogColorPicker/&lt;&gt;c__DisplayClass57_0</name>
                <newname>bn/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Apparel)</signature>
                        <name>&lt;AApparelSelected&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>apparelDef</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogColorPicker/&lt;&gt;c__DisplayClass58_0</name>
                <newname>bn/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingWithComps)</signature>
                        <name>&lt;AWeaponSelected&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>weaponDef</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogFacialStuff</name>
                <newname>a1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>facialUI</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogFindPawn</name>
                <newname>bu</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ASelectPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetInfo</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>FGetInfo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>selectedPawn</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogFindPawn/&lt;&gt;c</name>
                <newname>bu/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>&lt;DoWindowContents&gt;b__8_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, Verse.Pawn)</signature>
                        <name>&lt;DoWindowContents&gt;b__8_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogFindPawn/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>&lt;&gt;9__8_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.Pawn,Verse.Pawn,bool&gt;</signature>
                        <name>&lt;&gt;9__8_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogFullheal</name>
                <newname>bp</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;Verse.Hediff,bool&gt;</signature>
                        <name>dicToRemove</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isChecked</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Hediff&gt;</signature>
                        <name>lOfHediff</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogItemry</name>
                <newname>bc</newname>
                <methodlist>
                    <method>
                        <signature>void(CharacterEditor.DialogCapsuleUI, Verse.Thing)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.ThingCategoryDef)</signature>
                        <name>&lt;DrawDropdown&gt;b__57_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawEditLabel&gt;b__62_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AAddCosts</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>AAddEquipStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>AAddStat</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StuffCategoryDef)</signature>
                        <name>AAddStuffCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAllowRemoveStat</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABuyItem</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyCosts</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyEquipStat</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyStat</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyStuff</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADestroy</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADialogAddEquipStat</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADialogAddStat</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AItemSelected</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteCosts</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteEquipStat</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteStat</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteStuff</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APlacingMode</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveCosts</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveEquipStat</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveStat</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveStuffCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetAll</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetOne</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARotate</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASave</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectFilter</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>ASelectItemFromSelector</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingCategoryDef)</signature>
                        <name>ASelectThingCategory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TechLevel)</signature>
                        <name>ASetTechLevel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Tradeability)</signature>
                        <name>ASetTradeability</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleStats</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalcHSCROLL</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawDropdown</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawEditLabel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawList</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawLowerButtons</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawParameter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32&amp;, float32, float32)</signature>
                        <name>DrawTexture</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetItemLabel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetItemTooltip</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingCategoryDef)</signature>
                        <name>GetLaberForSelectedCategory</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>GetStatLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StuffCategoryDef)</signature>
                        <name>GetStuffCategoryLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.TechLevel)</signature>
                        <name>GetTechLevelLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D()</signature>
                        <name>GetTexture</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingStyleDef)</signature>
                        <name>GetThingStyleDefLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Tradeability)</signature>
                        <name>GetTradeabilityLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>IsSameItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateLTC</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogCapsuleUI</signature>
                        <name>CapsuleUI</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>FGetStatLabel</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StuffCategoryDef,string&gt;</signature>
                        <name>FGetStuffCategoryLabel</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TechLevel,string&gt;</signature>
                        <name>FGetTechLevelLabel</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;</signature>
                        <name>FGetThingStyleDefLabel</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Tradeability,string&gt;</signature>
                        <name>FGetTradeabilityLabel</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.ThingDef,Verse.ThingDef,bool&gt;</signature>
                        <name>FItemComparator</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FItemLabel</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FItemTooltip</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>HSCROLLPARAM</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>MAXW</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>SELECTED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TEXTURESIZE</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>WTITLE</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_APPA</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_PARAMS</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAllowRemove</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bDoOnce</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bInPlacingMode</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>firstPreselection</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iChangeTick0</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTick_AllowRemoveStat</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDefCountClass&gt;</signature>
                        <name>lCopyCost</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lCopyEquipStat</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lCopyStat</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StuffCategoryDef&gt;</signature>
                        <name>lCopyStuff</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lOfFilter</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lOfItems</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>lOfModnames</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lOfQuality</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingCategoryDef&gt;</signature>
                        <name>lOfThingCategories</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxSliderVal</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>previousColor</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosParam</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tempName</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>toggleText</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogItemry/&lt;&gt;c</name>
                <newname>bc/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__57_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__57_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogItemry/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__57_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__57_2</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogPsychology</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AModify</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>psychologyUI</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Rect</signature>
                        <name>rect</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>InitialSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogRelations</name>
                <newname>bo</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef)</signature>
                        <name>&lt;DoWindowContents&gt;b__14_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAddRelation</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectFaction</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ASelectPawn</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.PawnRelationDef)</signature>
                        <name>ASelectRelation</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ASwapToPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>CreateDirect</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>CreateIndirect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, RimWorld.PawnRelationDef)</signature>
                        <name>GetRelationLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bImplicite</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.Faction&gt;</signature>
                        <name>dicFaction</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>RimWorld.DirectPawnRelation</signature>
                        <name>dpr</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;</signature>
                        <name>lOfPawns</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.PawnRelationDef&gt;</signature>
                        <name>lOfRelations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedKey</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>selectedPawn</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>RimWorld.PawnRelationDef</signature>
                        <name>selectedRelation</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogRelations/&lt;&gt;c</name>
                <newname>bo/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DoWindowContents&gt;b__14_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>&lt;DoWindowContents&gt;b__14_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogRelations/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__14_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>&lt;&gt;9__14_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DialogTemplate`1</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;DoWindowContents&gt;b__22_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ARandomDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>DrawCustomFilter</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawDropdownModname</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawTitle</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>GetTooltip</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAccept</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnSelectionChanged</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Preselection</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;!0,!0,bool&gt;</signature>
                        <name>FDefComparator</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>FDefLabel</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frameH</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frameW</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;!0&gt;</signature>
                        <name>lDefs</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lMods</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>oldSelectedDef</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>selectedDef</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>selectedModName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>xPosOffset</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                        <newname>o</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.DialogTemplate`1/&lt;&gt;c</name>
                <newname>b/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(!0)</signature>
                        <name>&lt;.ctor&gt;b__19_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(!0, !0)</signature>
                        <name>&lt;.ctor&gt;b__19_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdownModname&gt;b__24_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogTemplate`1/&lt;&gt;c&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,string&gt;</signature>
                        <name>&lt;&gt;9__19_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;!0,!0,bool&gt;</signature>
                        <name>&lt;&gt;9__19_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__24_0</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogViewXenoGenes</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.GeneDef)</signature>
                        <name>AAddEndoGene</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>AChangeGType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.XenotypeDef)</signature>
                        <name>AChangeXenotype</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.CustomXenotype)</signature>
                        <name>ALoadCustomXenotype</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AOpenAddDialog</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Gene)</signature>
                        <name>ARemoveEndoGene</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetGenes</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleGeneType</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCustomList</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PostOpen</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>HeaderHeight</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bIsXeno</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.GeneDef&gt;</signature>
                        <name>lallgenes</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.CustomXenotype&gt;</signature>
                        <name>lcustomxeontypes</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.XenotypeDef&gt;</signature>
                        <name>lxenotypes</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosition</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>target</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogViewXenoGenes/&lt;&gt;c</name>
                <newname>c/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.GeneDef)</signature>
                        <name>&lt;.ctor&gt;b__8_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.XenotypeDef)</signature>
                        <name>&lt;.ctor&gt;b__8_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.XenotypeDef)</signature>
                        <name>&lt;.ctor&gt;b__8_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.XenotypeDef)</signature>
                        <name>&lt;DoWindowContents&gt;b__12_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.CustomXenotype)</signature>
                        <name>&lt;DoWindowContents&gt;b__12_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Gene)</signature>
                        <name>&lt;DoWindowContents&gt;b__12_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogViewXenoGenes/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.XenotypeDef,string&gt;</signature>
                        <name>&lt;&gt;9__12_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.CustomXenotype,string&gt;</signature>
                        <name>&lt;&gt;9__12_1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Gene,string&gt;</signature>
                        <name>&lt;&gt;9__12_2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneDef,string&gt;</signature>
                        <name>&lt;&gt;9__8_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.XenotypeDef,bool&gt;</signature>
                        <name>&lt;&gt;9__8_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.XenotypeDef,float32&gt;</signature>
                        <name>&lt;&gt;9__8_2</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogWeaponry</name>
                <newname>bd</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(CharacterEditor.WeaponType)</signature>
                        <name>&lt;DrawDropdown&gt;b__72_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawEditLabel&gt;b__76_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AAddCosts</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>AAddEquipStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StatDef)</signature>
                        <name>AAddStat</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.StuffCategoryDef)</signature>
                        <name>AAddStuffCategory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AAddWeaponTag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AAllowRemoveStat</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>ABulletSelected</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABuyAmmo</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ABuyWeapon</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyCosts</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyEquipStat</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyStat</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyStuff</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACopyWeaponTag</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADialogAddEquipStat</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ADialogAddStat</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteCosts</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteEquipStat</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteStat</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteStuff</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>APasteWeaponTag</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveCosts</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveEquipStat</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveStat</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveStuffCategory</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ARemoveWeaponTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetAll</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AResetOne</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASave</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingWithComps)</signature>
                        <name>ASelectWeaponFromSelector</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.WeaponType)</signature>
                        <name>ASelectWeaponType</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ASelectedModName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.TechLevel)</signature>
                        <name>ASetTechLevel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.Tradeability)</signature>
                        <name>ASetTradeability</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ASoundListChange</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.SoundDef)</signature>
                        <name>ASoundSelected</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleStats</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AWeaponSelected</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalcHSCROLL</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ChangeAmmo</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoAndClose</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawBulletTexture</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawCosts</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X)</signature>
                        <name>DrawDamage</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawDropdown</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawEditLabel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawEquipStatProperties</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawExtras</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawList</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>DrawLowerButtons</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>DrawParameter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X)</signature>
                        <name>DrawRangedStats</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawStatProperties</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawStuffProperties</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Listing_X, int32)</signature>
                        <name>DrawTags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32&amp;, float32, float32)</signature>
                        <name>DrawTexture</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetBulletLabel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetBulletTooltip</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(CharacterEditor.WeaponType)</signature>
                        <name>GetNameForWeaponType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.SoundDef)</signature>
                        <name>GetSoundLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.SoundDef)</signature>
                        <name>GetSoundTooltip</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>GetStatLabel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StuffCategoryDef)</signature>
                        <name>GetStuffCategoryLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetTagLabel</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.TechLevel)</signature>
                        <name>GetTechLevelLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D()</signature>
                        <name>GetTexture</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingStyleDef)</signature>
                        <name>GetThingStyleDefLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Tradeability)</signature>
                        <name>GetTradeabilityLabel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetWeaponLabel</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetWeaponTooltip</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingWithComps)</signature>
                        <name>IsPrimary</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>IsSameBullet</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.SoundDef, Verse.SoundDef)</signature>
                        <name>IsSameSound</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>IsSameWeapon</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnAcceptKeyPressed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PostSelect</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;Verse.ThingDef,Verse.ThingDef,bool&gt;</signature>
                        <name>FBulletComparator</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FBulletLabel</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FBulletTooltip</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>FGetStatLabel</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StuffCategoryDef,string&gt;</signature>
                        <name>FGetStuffCategoryLabel</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>FGetTagLabel</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TechLevel,string&gt;</signature>
                        <name>FGetTechLevelLabel</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;</signature>
                        <name>FGetThingStyleDefLabel</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Tradeability,string&gt;</signature>
                        <name>FGetTradeabilityLabel</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.SoundDef,Verse.SoundDef,bool&gt;</signature>
                        <name>FSoundComparator</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.SoundDef,string&gt;</signature>
                        <name>FSoundLabel</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.SoundDef,string&gt;</signature>
                        <name>FSoundTooltip</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;Verse.ThingDef,Verse.ThingDef,bool&gt;</signature>
                        <name>FWeaponComparator</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FWeaponLabel</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>FWeaponTooltip</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>HSCROLLPARAM</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>MAXW</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>SELECTED</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TEXTURESIZE</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>WTITLE</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_BULLETS</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_GUNS</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_PARAMS</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>W_SOUND</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>allowRemove</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAllSounds</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>changeFirstWeapon</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>doOnce</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>firstPreselection</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iChangeTick0</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iTick_AllowRemoveStat</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>idxList</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDefCountClass&gt;</signature>
                        <name>lCopyCost</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lCopyEquipStat</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;</signature>
                        <name>lCopyStat</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StuffCategoryDef&gt;</signature>
                        <name>lCopyStuff</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lCopyWeaponTag</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lOfBullet</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lOfQuality</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.SoundDef&gt;</signature>
                        <name>lOfSound</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lOfWeapon</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;CharacterEditor.WeaponType&gt;</signature>
                        <name>lOfWeaponType</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>previousColor</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPos</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosBullet</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosParam</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Vector2</signature>
                        <name>scrollPosSound</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.SearchTool</signature>
                        <name>search</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tempName</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>toggleText</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogWeaponry/&lt;&gt;c</name>
                <newname>bd/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;DrawDropdown&gt;b__72_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogWeaponry/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__72_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(RimWorld.CustomXenotype)</signature>
                        <name>&lt;DrawSearchRect&gt;b__31_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.GeneLeftChosenGroup)</signature>
                        <name>&lt;GeneTip&gt;g__GroupInfo|25_4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PostXenotypeOnGUI&gt;b__26_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ACheckAndSave</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.CustomXenotype)</signature>
                        <name>ALoadCustomXenotype</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(RimWorld.XenotypeDef)</signature>
                        <name>ALoadXenotypeDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ASaveAnd</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASaveAndUse</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ASaveOnly</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Accept</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>AcceptInner</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CanAccept</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoBottomButtons</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DoFileInteraction</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.GeneDef, bool, float32&amp;, float32, float32, UnityEngine.Rect, bool)</signature>
                        <name>DrawGene</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawGenes</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DrawSearchRect</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, System.Collections.Generic.List`1&lt;Verse.GeneDef&gt;, string, float32&amp;, float32&amp;, bool, UnityEngine.Rect, System.Nullable`1&lt;bool&gt;&amp;)</signature>
                        <name>DrawSection</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.GeneDef, bool)</signature>
                        <name>GeneTip</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>GetWarnings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnGenesChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PostOpen</name>
                    </method>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>PostXenotypeOnGUI</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateSearchResults</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AcceptButtonLabel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Header</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.GeneDef&gt;()</signature>
                        <name>get_SelectedGenes</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MaxCustomXenotypes</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>OutlineColorSelected</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;Verse.GeneCategoryDef,bool&gt;</signature>
                        <name>collapsedCategories</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>hoveredAnyGene</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Verse.GeneDef</signature>
                        <name>hoveredGene</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ignoreRestrictionsConfirmationSent</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>inheritable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.GeneCategoryDef&gt;</signature>
                        <name>matchingCategories</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>RimWorld.XenotypeDef</signature>
                        <name>predefinedXenoDef</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>selectedCollapsed</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.GeneDef&gt;</signature>
                        <name>selectedGenes</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;&gt;c</name>
                <newname>d/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.GeneDef)</signature>
                        <name>&lt;ALoadCustomXenotype&gt;b__28_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.GeneDef)</signature>
                        <name>&lt;ALoadXenotypeDef&gt;b__29_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(RimWorld.GeneLeftChosenGroup)</signature>
                        <name>&lt;DoBottomButtons&gt;b__32_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.XenotypeDef)</signature>
                        <name>&lt;DrawSearchRect&gt;b__31_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.GeneDef)</signature>
                        <name>&lt;GeneTip&gt;b__25_3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Verse.GeneDef)</signature>
                        <name>&lt;GeneTip&gt;b__25_5</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PostXenotypeOnGUI&gt;b__26_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.GeneDef)</signature>
                        <name>&lt;PostXenotypeOnGUI&gt;b__26_2</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogXenoType/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneDef,string&gt;</signature>
                        <name>&lt;&gt;9__25_3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.GeneDef,string&gt;</signature>
                        <name>&lt;&gt;9__25_5</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__26_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;Verse.GeneDef&gt;</signature>
                        <name>&lt;&gt;9__26_2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;Verse.GeneDef&gt;</signature>
                        <name>&lt;&gt;9__28_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;Verse.GeneDef&gt;</signature>
                        <name>&lt;&gt;9__29_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.XenotypeDef,float32&gt;</signature>
                        <name>&lt;&gt;9__31_1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.GeneLeftChosenGroup,int32&gt;</signature>
                        <name>&lt;&gt;9__32_0</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;&gt;c__DisplayClass24_0</name>
                <newname>d/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.GeneLeftChosenGroup)</signature>
                        <name>&lt;DrawGene&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.GeneDef</signature>
                        <name>geneDef</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;&gt;c__DisplayClass25_0</name>
                <newname>d/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.GeneLeftChosenGroup)</signature>
                        <name>&lt;GeneTip&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.GeneLeftChosenGroup)</signature>
                        <name>&lt;GeneTip&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.GeneLeftChosenGroup)</signature>
                        <name>&lt;GeneTip&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.GeneDef</signature>
                        <name>geneDef</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;&gt;c__DisplayClass30_0</name>
                <newname>d/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DoFileInteraction&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogXenoType</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;&gt;c__DisplayClass31_0</name>
                <newname>d/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DrawSearchRect&gt;b__2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>&lt;DrawSearchRect&gt;b__3</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.DialogXenoType</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>RimWorld.XenotypeDef</signature>
                        <name>xenotype</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;&gt;c__DisplayClass39_0</name>
                <newname>d/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;AcceptInner&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>absPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>RimWorld.CustomXenotype</signature>
                        <name>customXenotype</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.DialogXenoType/&lt;GetWarnings&gt;d__40</name>
                <newname>d/g</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.DialogXenoType</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.DialogXenoType</signature>
                        <name>&lt;dialogCreateXenotype&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.EType</name>
                <newname>h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ApparelPreset</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ApparelTags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Bodies</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Capturer</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>CostItems</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>DicApparel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>EditorUI</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Factions</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>GraphicPaths</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Inspirations</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ItemPreset</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>MainButton</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>MentalStates</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsAbilityDef</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsApparel</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsBeardDef</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsHairDef</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsHediffDef</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsThingDef</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsTraitDef</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ModsWeapons</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>OutfitTags</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>PawnKindAnimal</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>PawnKindHuman</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>PawnKindListed</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>PawnKindOther</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Pawns</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Search</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Settings</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StatCategoryApparel</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StatCategoryOnEquip</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StatCategoryWeapon</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StatDefApparel</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StatDefOnEquip</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StatDefWeapon</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>StuffCategory</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>TechLevel</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>TeleButton</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ThoughtMemory</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ThoughtMemorySocial</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ThoughtSituational</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ThoughtSituationalSocial</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ThoughtUnsupported</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>ThoughtsAll</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>Tradeability</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>UIContainers</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>WeaponPreset</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.EType</signature>
                        <name>WeaponTags</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.EnumTool</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;!!0&gt;()</signature>
                        <name>GetAllEnumsOfType</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Extension</name>
                <newname>be</newname>
                <methodlist>
                    <method>
                        <arity>2</arity>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;, System.Collections.Generic.List`1&lt;!!0&gt;, !!1)</signature>
                        <name>AddFromList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.List`1&lt;!!0&gt;, System.Collections.Generic.List`1&lt;!!0&gt;)</signature>
                        <name>AddFromList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(System.Collections.Generic.SortedDictionary`2&lt;!!0,!!1&gt;, System.Collections.Generic.List`1&lt;!!0&gt;, !!1)</signature>
                        <name>AddFromList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,!!0&gt;, string, !!0)</signature>
                        <name>AddLabeled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.SortedDictionary`2&lt;string,!!0&gt;, string, !!0)</signature>
                        <name>AddLabeled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;, !!0, !!1)</signature>
                        <name>AddSkipDuplicate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(System.Collections.Generic.SortedDictionary`2&lt;!!0,!!1&gt;, !!0, !!1)</signature>
                        <name>AddSkipDuplicate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, System.Text.Encoding)</signature>
                        <name>AsBase64</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>AsBool</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>AsBoolWithDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string, System.Text.Encoding)</signature>
                        <name>AsBytes</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>float32(string)</signature>
                        <name>AsFloat</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>AsInt32</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.KeyCode(string)</signature>
                        <name>AsKeyCode</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>AsLong</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>string(System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;, string, string)</signature>
                        <name>AsString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>string(System.Collections.Generic.SortedDictionary`2&lt;!!0,!!1&gt;, string, string)</signature>
                        <name>AsString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[], System.Text.Encoding)</signature>
                        <name>AsString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>AsStringUNICODE</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Collections.Generic.HashSet`1&lt;!!0&gt;, int32)</signature>
                        <name>At</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Collections.Generic.List`1&lt;!!0&gt;, int32)</signature>
                        <name>At</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>Base64ToBytes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, System.Text.Encoding)</signature>
                        <name>Base64ToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, bool&amp;, int32)</signature>
                        <name>ChangeXPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>!!1(System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;, !!0)</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>!!1(System.Collections.Generic.SortedDictionary`2&lt;!!0,!!1&gt;, !!0)</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasMID</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>int32(System.Collections.Generic.HashSet`1&lt;!!0&gt;, !!0)</signature>
                        <name>IndexOf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(System.Collections.Generic.List`1&lt;!!0&gt;, System.Collections.Generic.List`1&lt;!!0&gt;)</signature>
                        <name>IsSame</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>!!0(System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;, !!1)</signature>
                        <name>KeyByValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>string(System.Collections.Generic.SortedDictionary`2&lt;string,!!0&gt;, !!0)</signature>
                        <name>KeyByValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>string(System.Collections.Generic.List`1&lt;!!0&gt;)</signature>
                        <name>ListToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;, System.Collections.Generic.Dictionary`2&lt;!!0,!!1&gt;)</signature>
                        <name>Merge</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>int32(System.Collections.Generic.HashSet`1&lt;!!0&gt;, int32, bool, bool)</signature>
                        <name>NextOrPrevIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>int32(System.Collections.Generic.List`1&lt;!!0&gt;, int32, bool, bool)</signature>
                        <name>NextOrPrevIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(System.Collections.Generic.HashSet`1&lt;!!0&gt;)</signature>
                        <name>NullOrEmpty</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;!!0&gt;)</signature>
                        <name>RemoveDuplicates</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string[](string, string)</signature>
                        <name>SplitNo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>StringToList</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ApparelLayerDef&gt;(string, bool&amp;)</signature>
                        <name>StringToListApparelLayer</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartGroupDef&gt;(string, bool&amp;)</signature>
                        <name>StringToListBodyPartGroup</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;(string, bool&amp;)</signature>
                        <name>StringToListStatModifier</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StuffCategoryDef&gt;(string, bool&amp;)</signature>
                        <name>StringToListStuffCategory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string, bool)</signature>
                        <name>SubstringBackwardFrom</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string, string, bool)</signature>
                        <name>SubstringBackwardTo</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string, string, bool)</signature>
                        <name>SubstringFrom</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string, int32)</signature>
                        <name>SubstringFrom</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>SubstringRemoveLast</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string, string, bool)</signature>
                        <name>SubstringTo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string, int32)</signature>
                        <name>SubstringTo</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.Extension/&lt;&gt;c__DisplayClass19_0`1</name>
                <newname>be/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;IndexOf&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>val</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.FacialTool</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Def&gt;(Verse.Pawn, string, System.Collections.Generic.List`1&lt;Verse.Def&gt;)</signature>
                        <name>FA_FilterOutIncompatible</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingComp(Verse.Pawn, string)</signature>
                        <name>FA_GetControllerComp</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object(Verse.Pawn, string)</signature>
                        <name>FA_GetCurrentDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, string)</signature>
                        <name>FA_GetCurrentDefName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Def(Verse.Pawn, string, string)</signature>
                        <name>FA_GetDefByName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Def&gt;(object)</signature>
                        <name>FA_GetDefList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(Verse.Pawn, string)</signature>
                        <name>FA_GetDefStringList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, string, bool, bool)</signature>
                        <name>FA_SetDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string, string)</signature>
                        <name>FA_SetDefByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetFacialAnimationParams</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingComp(Verse.Pawn)</signature>
                        <name>GetPersoComp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingComp(Verse.Pawn)</signature>
                        <name>GetRJWComp</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetFacialAnimationParams</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BROW</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EYE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACETYPE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LID</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOUTH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SKIN</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.FacialTool/&lt;&gt;c__DisplayClass17_0</name>
                <newname>v/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Def)</signature>
                        <name>&lt;FA_GetDefByName&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>defName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.FactionTool</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>bool(RimWorld.Faction, Verse.PawnKindDef)</signature>
                        <name>CanCreateRelations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Faction)</signature>
                        <name>ChangeFaction</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Faction&gt;(Verse.Pawn)</signature>
                        <name>FactionEnemies</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Faction(string, RimWorld.Faction)</signature>
                        <name>GetBySeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.Faction&gt;(bool, bool, bool)</signature>
                        <name>GetDicOfFactions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(RimWorld.Faction)</signature>
                        <name>GetFacionColor</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn)</signature>
                        <name>GetFacionColor</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, RimWorld.Faction)</signature>
                        <name>GetFactionFullDesc</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPawnFactionAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>HasFactionColor</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsAbomination</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction, string)</signature>
                        <name>IsAnimal</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsCreature</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, RimWorld.Faction)</signature>
                        <name>IsFriendlyFaction</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsHumanlike</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction, string)</signature>
                        <name>IsHumanoid</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsInsektoid</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsMechanoid</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsNotInsectXenoMechZombie</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsNullOrEmpty</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction, string)</signature>
                        <name>IsOther</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsXeno</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>IsZombie</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Faction(RimWorld.Faction)</signature>
                        <name>ThisOrDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,RimWorld.Faction&gt;()</signature>
                        <name>get_DicFactions</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.FactionTool/&lt;&gt;c</name>
                <newname>am/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.Faction)</signature>
                        <name>&lt;GetDicOfFactions&gt;b__3_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.FactionTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Faction,string&gt;</signature>
                        <name>&lt;&gt;9__3_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.FactionTool/&lt;&gt;c__DisplayClass2_0</name>
                <newname>am/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>&lt;FactionEnemies&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.FileIO</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>CheckOrCreateDir</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Exists</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ExistsDir</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string[](string, string, bool)</signature>
                        <name>GetDirFileList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string[](string, string, bool)</signature>
                        <name>GetDirFolderList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>ReadFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, unsigned int8[])</signature>
                        <name>WriteFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PATH_DESKTOP</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PATH_PAWNEX</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Fix</name>
                <newname>bf</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ISize22</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISize24</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISize25</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISize28</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HairTool</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetAllGradientHairs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn)</signature>
                        <name>GetGradientColor</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingComp(Verse.Pawn)</signature>
                        <name>GetGradientComp</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetGradientMask</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn, bool)</signature>
                        <name>GetHairColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GetHairDefCount</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetHairDefName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.HairDef&gt;(string)</signature>
                        <name>GetHairList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetHairName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.HairDef(string)</signature>
                        <name>GetRandomHairDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>RandomizeGradientMask</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, UnityEngine.Color)</signature>
                        <name>SetGradientHairColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetGradientMask</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.HairDef)</signature>
                        <name>SetHair</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, bool, string)</signature>
                        <name>SetHair</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, UnityEngine.Color)</signature>
                        <name>SetHairColor</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HairTool/&lt;&gt;c</name>
                <newname>ao/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(UnityEngine.Texture2D)</signature>
                        <name>&lt;GetAllGradientHairs&gt;b__3_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(UnityEngine.Texture2D)</signature>
                        <name>&lt;GetAllGradientHairs&gt;b__3_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.HairTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;UnityEngine.Texture2D,string&gt;</signature>
                        <name>&lt;&gt;9__3_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;UnityEngine.Texture2D,string&gt;</signature>
                        <name>&lt;&gt;9__3_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HeadTool</name>
                <newname>ap</newname>
                <methodlist>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllHeadAddonsAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn)</signature>
                        <name>GetEyeColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.HeadTypeDef&gt;(Verse.Pawn, bool)</signature>
                        <name>GetHeadDefList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, string)</signature>
                        <name>GetHeadName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string&amp;, string&amp;)</signature>
                        <name>GetHeadPathFolderFor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetHeadTypeDefName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.HeadTypeDef&gt;(Verse.Pawn, System.Collections.Generic.HashSet`1&lt;Verse.HeadTypeDef&gt;, bool)</signature>
                        <name>GetTestedHeadList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsCoreHeadPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.HeadTypeDef&gt;(Verse.Pawn, System.Collections.Generic.HashSet`1&lt;Verse.HeadTypeDef&gt;)</signature>
                        <name>ReduceListByGender</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, UnityEngine.Color)</signature>
                        <name>SetEyeColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, bool, bool)</signature>
                        <name>SetHead</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetHeadAddonsFromSeparatedString</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.HeadTypeDef)</signature>
                        <name>SetHeadTypeDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetHeadTypeDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, string)</signature>
                        <name>TestHead</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HeadTool/&lt;&gt;c__DisplayClass6_0</name>
                <newname>ap/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.HeadTypeDef)</signature>
                        <name>&lt;GetHeadDefList&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HeadTypeDef)</signature>
                        <name>&lt;GetHeadDefList&gt;b__1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HeadTypeDef)</signature>
                        <name>&lt;GetHeadDefList&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>pathG</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pathNG</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HealthTool</name>
                <newname>a3</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn, bool, Verse.HediffDef, float32, Verse.BodyPartRecord, bool, int32, int32, int32, Verse.Pawn)</signature>
                        <name>AddHediff2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string, float32, string, int32, bool, int32, int32, int32, string)</signature>
                        <name>AddHediffByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Addictize</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Anaesthetize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.PainCategory)</signature>
                        <name>ConvertPainCategoryToSliderVal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.PainCategory(int32)</signature>
                        <name>ConvertSliderToPainCategory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>DamageUntilDeath</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Deaddictize</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllHediffsAsSeparatedString</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Verse.BodyPartRecord(Verse.Pawn, Verse.Hediff)</signature>
                        <name>GetBodyPart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.BodyPartRecord(Verse.Pawn, string, int32)</signature>
                        <name>GetBodyPartByDefName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Hediff)</signature>
                        <name>GetDuration</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Hediff)</signature>
                        <name>GetFullLabel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Hediff)</signature>
                        <name>GetHediffAsSeparatedString</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Hediff)</signature>
                        <name>GetLevel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartRecord&gt;(Verse.Pawn, Verse.HediffDef)</signature>
                        <name>GetListOfAllowedBodyPartRecords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.BodyPartRecord&gt;(Verse.Pawn, string, Verse.HediffDef, bool)</signature>
                        <name>GetListOfBodyPartRecordsByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.HediffDef)</signature>
                        <name>GetMaxSeverity</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.Hediff)</signature>
                        <name>GetOtherPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Hediff)</signature>
                        <name>GetPainValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Hurt</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsAddedPart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsAdjustableSeverity</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef, string)</signature>
                        <name>IsFor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForAllParts</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForArm</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForBrain</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForClavicle</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForEar</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForEye</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForFemur</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForFinger</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForFoot</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForHand</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForHead</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForHeart</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForHumerus</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForJaw</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForKidney</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForLeg</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForLiver</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForLung</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForNose</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForPelvis</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForRadius</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForShoulder</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForSkull</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForSpine</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForSternum</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForStomach</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForTibia</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForToe</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForTorso</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForUtilitySlot</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsForWholeBody</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsHediffLink</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsHediffWithComps</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsHediffWithLevel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsHediffWithOtherPawn</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsHediffWithTarget</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsHigh</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>IsImplant</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.HediffDef&gt;(string, Verse.Pawn, Verse.BodyPartRecord, string, bool)</signature>
                        <name>ListOfHediffDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>Medicate</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>NeedBodyPart</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Hediff)</signature>
                        <name>RemoveHediff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.DefHyperlink, Verse.Pawn, System.Collections.Generic.List`1&lt;Verse.BodyPartRecord&gt;&amp;, bool)</signature>
                        <name>ResolveHyperlink</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ResurrectAndHeal</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff, int32)</signature>
                        <name>SetDuration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetHediffsFromSeparatedString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff, int32)</signature>
                        <name>SetLevel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff, Verse.Pawn)</signature>
                        <name>SetOtherPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff, int32)</signature>
                        <name>SetPainValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff, bool)</signature>
                        <name>SetPermanent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Hediff)</signature>
                        <name>ShowDebugInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Hediff(Verse.Pawn, string)</signature>
                        <name>TryGetHediffByDefName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Func`2&lt;Verse.HediffDef,bool&gt;&gt;()</signature>
                        <name>get_AllBodyPartChecks</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>HB_All</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_AllAddictions</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_AllDiseases</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_AllImplants</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_AllInjuries</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_AllTime</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Arm</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Brain</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Clavicle</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Ear</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Eye</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Femur</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Finger</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Foot</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Hand</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Head</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Heart</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Humerus</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Jaw</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Kidney</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Leg</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Liver</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Lung</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Neck</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Nose</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Pelvis</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Radius</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Shoulder</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Skull</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Spine</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Sternum</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Stomach</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Tibia</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Toe</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Torso</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Utility</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_UtilitySlot</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_WholeBody</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Abasia</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_AestheticShaper</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_AlcoholTolerance</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Alzheimers</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Anesthetic</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Asthma</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_BadBack</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_BerserkTrance</name>
                        <newname>ce</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_BlindFold</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Blindness</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_BloodLoss</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Carcinoma</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Cataract</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_CatatonicBreakdown</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ChemicalDamageModerate</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ChemicalDamageSevere</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Circadian</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Cirrhosis</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Coagulator</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Cochlear</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Command</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_CryptosleepSickness</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Dementia</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Denture</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_DrugOverdose</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ElbowBlade</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Fangs</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_FibrousMechanites</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_FieldHand</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Flu</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_FoodPoisoning</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Force</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Frail</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_GastroAnalyzer</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_GutWorms</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_HandTalon</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Hangover</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_HealingEnhancer</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Hear</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_HearingLoss</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_High</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_HungerMaker</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ImmunityDrive</name>
                        <newname>cf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Immunoenhancer</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Joyfuzz</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Joywire</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_KneeSpike</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_LearningAssistant</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_LoveEnhancer</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Malaria</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Malnutrition</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Mindscrew</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_MuscleParasites</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_NeuralHealRecoveryGain</name>
                        <newname>cb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_NeuralSupercharge</name>
                        <newname>ch</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Neurocalcularor</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_NoPain</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Painstopper</name>
                        <newname>b4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Plague</name>
                        <newname>b5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_PowerClaw</name>
                        <newname>b6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_PreachHealth</name>
                        <newname>cd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Pregnant</name>
                        <newname>b7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Psychic</name>
                        <newname>b8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_PsychicEntropy</name>
                        <newname>ca</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_PsychicShock</name>
                        <newname>b9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ResurrectionPsychosis</name>
                        <newname>ci</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ResurrectionSickness</name>
                        <newname>cj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_SensoryMechanites</name>
                        <newname>ck</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Skingland</name>
                        <newname>cl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_SleepingSickness</name>
                        <newname>cm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_Smelling</name>
                        <newname>cn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_SpeedBoost</name>
                        <newname>co</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_TortureCrown</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_ToxicBuildup</name>
                        <newname>cq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_TraumaSavant</name>
                        <newname>cr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_VenomTalon</name>
                        <newname>cs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_WoodenFoot</name>
                        <newname>ct</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_WorkDrive</name>
                        <newname>cc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_WorkFocus</name>
                        <newname>cg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_WoundInfection</name>
                        <newname>cu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>H_tolerance</name>
                        <newname>cp</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HealthTool/&lt;&gt;c</name>
                <newname>a3/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;AddHediff2&gt;b__163_0</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;Addictize&gt;b__188_0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;Hurt&gt;b__187_0</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_1</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_2</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_4</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_5</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_6</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_7</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__193_9</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.HealthTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__163_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__187_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__188_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,string&gt;</signature>
                        <name>&lt;&gt;9__193_1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_7</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.HediffDef,bool&gt;</signature>
                        <name>&lt;&gt;9__193_9</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.HealthTool/&lt;&gt;c__DisplayClass193_0</name>
                <newname>a3/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.HediffDef)</signature>
                        <name>&lt;ListOfHediffDef&gt;b__8</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bAll1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.BodyPartRecord</signature>
                        <name>bpr</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>p</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.IPartable</name>
                <newname>br</newname>
                <methodlist>
                    <method>
                        <signature>Verse.BodyPartRecord()</signature>
                        <name>get_SelectedPart</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(Verse.BodyPartRecord)</signature>
                        <name>set_SelectedPart</name>
                        <newname>p</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.IPawnable</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn()</signature>
                        <name>get_SelectedPawn4</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>set_SelectedPawn4</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.IdeoTool</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPawnCultureDefName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPawnIdeoName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasIdeoTracker</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string, string)</signature>
                        <name>SetPawnIdeo</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.JobDriver_EnterZGrave</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Label</name>
                <newname>bh</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddNames</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, RimWorld.GenderPossibility)</signature>
                        <name>AddNamesFromPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangCN</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangDE</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangEN</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangFR</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangJP</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangPO</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangRU</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LangSP</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateLabels</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ABILITIES</name>
                        <newname>dg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ABOMINATION</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADD</name>
                        <newname>dx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADDONS_INFO</name>
                        <newname>du</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADDONS_INFO2</name>
                        <newname>dv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADDSTAT</name>
                        <newname>d2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADD_GENE</name>
                        <newname>d1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADD_HEDIFF</name>
                        <newname>dy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADD_THOUGHT</name>
                        <newname>dz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADD_TRAIT</name>
                        <newname>d0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALL</name>
                        <newname>d3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALLCUSTOMSWILLBEDELEATED</name>
                        <newname>d4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALLSLOTSWILLBECLEARED</name>
                        <newname>d5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALLSOUNDS</name>
                        <newname>d6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALWAYS_SKIP</name>
                        <newname>ix</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ANAESTHETIZE</name>
                        <newname>d7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ANIMAL</name>
                        <newname>d8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ANIMALDENSITY</name>
                        <newname>d9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>APPARELLAYER</name>
                        <newname>ea</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ATTENTION</name>
                        <newname>dt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>AVP_MODNAME</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BEARD</name>
                        <newname>eb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BIOAGE</name>
                        <newname>ec</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BIRTHDAY</name>
                        <newname>ed</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BODYPARTGROUPS</name>
                        <newname>ee</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BOSS</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BROW</name>
                        <newname>c8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BULLET_SPEED</name>
                        <newname>eg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BUY_1</name>
                        <newname>eh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CANTREMOVELAYER</name>
                        <newname>ei</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CAPSULESETUP</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CE_COMPAMMOUSER</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CE_MAGAZINESIZE</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CE_MODNAME</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CE_RELOADTIME</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHANGERACE</name>
                        <newname>dr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHANGE_FACTION</name>
                        <newname>ej</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHARACTER</name>
                        <newname>ek</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHOOSE_PAWN</name>
                        <newname>el</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHRONOAGE</name>
                        <newname>em</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CLONE_PAWN</name>
                        <newname>en</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CLOSE_FACIAL</name>
                        <newname>eo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COLONISTS</name>
                        <newname>ep</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COLONISTS_ONLY</name>
                        <newname>eq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COLONYANIMALS</name>
                        <newname>er</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COLORA</name>
                        <newname>es</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COLORB</name>
                        <newname>et</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COMP_FA_EYEBALLCONTROLLER</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONFIRM_RACE_CHANGE</name>
                        <newname>eu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COSTS</name>
                        <newname>ev</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COSTSTUFFCOUNT</name>
                        <newname>ew</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COUNT</name>
                        <newname>dq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_AGEBIOLOGICAL</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_AGECHRONOLOGICAL</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_ANIMALKIND</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_CACHEDDISABLEDWORKTYPES</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_CACHEDDISABLEDWORKTYPESPERMANENT</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_CACHEDTHOUGHTS</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_COUNT</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_CURPAWN</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_CURSTAGEINDEX</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_ENTRYCLICKED</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_GENBUILD_NEWBLUEPRINTDEF</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_GENBUILD_NEWFRAMEDEF</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_GETSTEPS</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_GETTOOLTIP</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_GIVESHORTHASH</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_HEADGRAPHICPATH</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_MINIFIED</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_PARTS</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_SHOWALLHEDIFFS</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_SKILLRECORDSTATE</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_STATUSOVERLAYS</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_STUFF</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_THINGDEF</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CO_WOUNDOVERLAYS</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREATE</name>
                        <newname>ex</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CURRENTENTROPY</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CURRENTPSYFOCUS</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DAUER</name>
                        <newname>ey</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DAY</name>
                        <newname>ez</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DAYS</name>
                        <newname>e0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DELETE_CUSTOMS</name>
                        <newname>e1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DELETE_PAWN</name>
                        <newname>e2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DELETE_SLOTS</name>
                        <newname>e3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DESC_CASCET</name>
                        <newname>e4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DESC_GRAVE</name>
                        <newname>e5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DISABLEDSKILLS</name>
                        <newname>e6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DISABLEDWORKTAGS</name>
                        <newname>e7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DORFBEWOHNER</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRAWSIZE</name>
                        <newname>e8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DROIDCOLONIST</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DUALWIELD_ADDOFFHANDEQUIP</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DUALWIELD_EXTCLASS</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DUALWIELD_MAKEROOM</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DUALWIELD_MODNAME</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DUALWIELD_NAMESPACE</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ENSLAVE</name>
                        <newname>dp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ENTER_ZOMBGRELLA</name>
                        <newname>e9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ENTROPY</name>
                        <newname>fa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EQUIPSTATS</name>
                        <newname>fb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXPL_RADIUS</name>
                        <newname>fc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXPORT</name>
                        <newname>fd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXPORT_SLOTS</name>
                        <newname>fe</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXTRAS</name>
                        <newname>ff</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EYECOLOR</name>
                        <newname>fg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACETATTOO</name>
                        <newname>fh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACIAL</name>
                        <newname>c6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACIALANIMATION_MODNAME</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACIALDIALOG</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACIALDIALOGALL</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACIALSTUFF</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FA_HARMONYFS</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FA_MODNAME10</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FA_MODNAME11</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FA_MODNAME12</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FA_OPENSTYLINGWINDOW</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FIND_PAWN</name>
                        <newname>fi</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FOCUS</name>
                        <newname>de</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FORM</name>
                        <newname>c4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FRISUR</name>
                        <newname>c5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FULLHEAL</name>
                        <newname>fj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FULLNEEDS</name>
                        <newname>fk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GENERATE_PAWN</name>
                        <newname>fl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GH_GETGRADIENTHAIR</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GH_MODNAME</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GH_PUBLICAPI</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GH_SETGRADIENTHAIR</name>
                        <newname>b4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GRADIENTHAIR</name>
                        <newname>b5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GRAPHICS</name>
                        <newname>fm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GUNSTATS</name>
                        <newname>fn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HAIR</name>
                        <newname>fp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HAIRCOLOR</name>
                        <newname>fq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HA_INFO</name>
                        <newname>fo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_ALLADDICTIONS</name>
                        <newname>fs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_ALLDISEASES</name>
                        <newname>ft</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_ALLIMPLANTS</name>
                        <newname>fu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_ALLINJURIES</name>
                        <newname>fv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_ALLTIME</name>
                        <newname>fw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_All</name>
                        <newname>fr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Arm</name>
                        <newname>fx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Brain</name>
                        <newname>fy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Clavicle</name>
                        <newname>fz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Ear</name>
                        <newname>f0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Eye</name>
                        <newname>f1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Femur</name>
                        <newname>f2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Finger</name>
                        <newname>f3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Foot</name>
                        <newname>f4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Hand</name>
                        <newname>f5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Head</name>
                        <newname>f6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Heart</name>
                        <newname>f7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Humerus</name>
                        <newname>f8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Jaw</name>
                        <newname>f9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Kidney</name>
                        <newname>ga</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Leg</name>
                        <newname>gb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Liver</name>
                        <newname>gc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Lung</name>
                        <newname>gd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Neck</name>
                        <newname>ge</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Nose</name>
                        <newname>gf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Pelvis</name>
                        <newname>gg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Radius</name>
                        <newname>gh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Shoulder</name>
                        <newname>gi</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Skull</name>
                        <newname>gj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Spine</name>
                        <newname>gk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Sternum</name>
                        <newname>gl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Stomach</name>
                        <newname>gm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Tibia</name>
                        <newname>gn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Toe</name>
                        <newname>go</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Torso</name>
                        <newname>gp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_Utility</name>
                        <newname>gq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_UtilitySlot</name>
                        <newname>gr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_WITHLEVEL</name>
                        <newname>gt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HB_WholeBody</name>
                        <newname>gs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HEAD_ADDONS</name>
                        <newname>gu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HEAL</name>
                        <newname>gv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HOUR</name>
                        <newname>gw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HOURS</name>
                        <newname>gx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_ADDONGRAPHICS</name>
                        <newname>ca</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_ADDONVARIANTS</name>
                        <newname>cb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_ALIENCROWNTYPES</name>
                        <newname>b8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_ALIENPARTGENERATOR</name>
                        <newname>b7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_ALIENRACE</name>
                        <newname>cc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_BODYADDONS</name>
                        <newname>b9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_CROWNTYPE</name>
                        <newname>cd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_DRAWADDONS</name>
                        <newname>ce</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_FIRST</name>
                        <newname>cf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_GENERALSETTINGS</name>
                        <newname>b6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_GETCHANNEL</name>
                        <newname>cg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_HAIR</name>
                        <newname>cm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_HARMONYPATCHES</name>
                        <newname>ch</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_MODNAME</name>
                        <newname>ci</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_MODNAME2</name>
                        <newname>cj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_SECOND</name>
                        <newname>ck</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_SKIN</name>
                        <newname>cl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_SKINCOLOR</name>
                        <newname>cn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_SKINCOLORSECOND</name>
                        <newname>co</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HR_TYPEALIENCOMP</name>
                        <newname>cp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HUMANOID</name>
                        <newname>gy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HUMANOIDALIENRACE</name>
                        <newname>cq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HURT</name>
                        <newname>gz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IDEOLOGY</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IMPORT</name>
                        <newname>g0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IMPORT_SLOTS</name>
                        <newname>g1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INFINITE</name>
                        <newname>g2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INFO</name>
                        <newname>g3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INGESTIBLEMOD</name>
                        <newname>di</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INSPIRATIONS</name>
                        <newname>dd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IS</name>
                        <newname>mw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>KAPSELCONTAINER</name>
                        <newname>dl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LID</name>
                        <newname>c7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LIFESTAGE</name>
                        <newname>g4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LOADSLOT</name>
                        <newname>g5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MAGAZIN</name>
                        <newname>g6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MAINBUTTON_DESCR</name>
                        <newname>g7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MAP_NOTLOADED</name>
                        <newname>g8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MAX_RANDOM_BRIGHTNESS</name>
                        <newname>g9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MEDICATE</name>
                        <newname>ha</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MELEE</name>
                        <newname>hb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MENTAL</name>
                        <newname>db</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MIN</name>
                        <newname>hc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MIN_RANDOM_BRIGHTNESS</name>
                        <newname>hd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MISC</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MISSINGLABEL</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MODIFICATIONLOADED</name>
                        <newname>he</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_AGEMATTERS</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_AVP</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_COMBATEXTENDED</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_DUALWIELD</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_FACES_OF_RIM</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_FACIALANIMATION</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_GRADIENTHAIR</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_HAR</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_PERSONALITIES</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_PSYCHOLOGY</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_RJW</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOD_TERRAFORMRIM</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOUTH</name>
                        <newname>c9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NEEDS</name>
                        <newname>dh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NOMEMORIES</name>
                        <newname>hg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NONE</name>
                        <newname>hh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NOT_COMPATIBLE_APPAREL</name>
                        <newname>hi</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NO_BLOCKING_SKILLS</name>
                        <newname>hf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NS_FACIALANIMATION</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ONLYFORSHIELD</name>
                        <newname>jn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ONMAP</name>
                        <newname>jo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OPTIONS</name>
                        <newname>jp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OTHER</name>
                        <newname>jq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OUTFITTAGS</name>
                        <newname>jr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_AUTOMOVEINCOMPATIBLE</name>
                        <newname>hj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_AUTOSAVECOLORS</name>
                        <newname>hk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CHAOSABILITY</name>
                        <newname>i3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CHARACTEREDITORUI</name>
                        <newname>hl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_COPYTOCLIPBOARD</name>
                        <newname>hm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CREATENOINV</name>
                        <newname>hn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CREATENOWEAPON</name>
                        <newname>ho</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CREATENUDE</name>
                        <newname>hp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CREATERACESPECIFIC</name>
                        <newname>hq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_CUSTOMCOLOR</name>
                        <newname>hr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_AUTOMOVEINCOMPATIBLE</name>
                        <newname>hs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_AUTOSAVECOLORS</name>
                        <newname>ht</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CHAOSABILITY</name>
                        <newname>i4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CHARACTEREDITORUI</name>
                        <newname>hu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CREATENOINV</name>
                        <newname>hv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CREATENOWEAPON</name>
                        <newname>hw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CREATENUDE</name>
                        <newname>hx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CREATERACESPECIFIC</name>
                        <newname>hy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_CUSTOMCOLOR</name>
                        <newname>hz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_DISABLEOBJ</name>
                        <newname>h0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_DOAPPARELCHECK</name>
                        <newname>iv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_EDITALLPAWNS</name>
                        <newname>h1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_EDITTABS</name>
                        <newname>h2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_EXTENDEDCOLORS</name>
                        <newname>h3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_FORCEIMAGE</name>
                        <newname>h4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_HDR</name>
                        <newname>c1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_HOTKEYEDITOR</name>
                        <newname>h5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_HOTKEYTELEPORT</name>
                        <newname>i0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_KEYCODE</name>
                        <newname>h6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_MAPSIZE</name>
                        <newname>h7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_MINI</name>
                        <newname>cz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_MOREPAWNNAMES</name>
                        <newname>h8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_NUMCAPSULE</name>
                        <newname>ji</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_NUMSLOTS</name>
                        <newname>cx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_PAUSEGAME</name>
                        <newname>h9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_PAWNLIST</name>
                        <newname>ia</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_PAWNSLOT</name>
                        <newname>ib</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_RESOLUTION</name>
                        <newname>c3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SAVEDARMORCHANGES</name>
                        <newname>ic</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SAVEDITEMCHANGES</name>
                        <newname>id</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SAVEDWEAPONCHANGES</name>
                        <newname>ie</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SHORTNAME</name>
                        <newname>ig</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SHOWDEADLOGO</name>
                        <newname>ih</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SHOWINMAINTABS</name>
                        <newname>ii</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SHOWPAWNLIST</name>
                        <newname>ij</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SHOWWEAPON</name>
                        <newname>ik</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_SORTEDPAWNLIST</name>
                        <newname>il</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_STACKLIMIT</name>
                        <newname>im</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_STAYINCASCET</name>
                        <newname>in</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_USEALTERNATIVEHEADFINDER</name>
                        <newname>io</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DESC_USERIMWORLDPAWNGENERATOR</name>
                        <newname>ip</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DISABLEOBJ</name>
                        <newname>iq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_DOAPPARELCHECK</name>
                        <newname>iu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_EDITALLPAWNS</name>
                        <newname>ir</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_EDITTABS</name>
                        <newname>is</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_EXTENDEDCOLORS</name>
                        <newname>it</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_FORCEIMAGE</name>
                        <newname>iw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_HDR</name>
                        <newname>c0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_HOTKEYEDITOR</name>
                        <newname>iy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_HOTKEYTELEPORT</name>
                        <newname>iz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_MAPSIZE</name>
                        <newname>i1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_MINI</name>
                        <newname>cy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_MOREPAWNNAMES</name>
                        <newname>i2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_NUMCAPSULE</name>
                        <newname>jh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_NUMSLOTS</name>
                        <newname>cw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_PAUSEGAME</name>
                        <newname>i5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_PAWNLIST</name>
                        <newname>i6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_PAWNSLOT</name>
                        <newname>i7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_RESOLUTION</name>
                        <newname>c2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SAVEDARMORCHANGES</name>
                        <newname>i8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SAVEDITEMCHANGES</name>
                        <newname>i9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SAVEDWEAPONCHANGES</name>
                        <newname>ja</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SETTODEFAULT</name>
                        <newname>jb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SHORTNAME</name>
                        <newname>jc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SHOWDEADLOGO</name>
                        <newname>jd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SHOWINMAINTABS</name>
                        <newname>je</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_SHOWWEAPON</name>
                        <newname>jf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_STACKLIMIT</name>
                        <newname>jg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_STAYINCASCET</name>
                        <newname>jj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_USEALTERNATIVEHEADFINDER</name>
                        <newname>jk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_USERIMWORLDPAWNGENERATOR</name>
                        <newname>jl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>O_USESORTEDPAWNLIST</name>
                        <newname>jm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PAINLESS</name>
                        <newname>js</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PARTS</name>
                        <newname>jt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PARTSANIMAL</name>
                        <newname>ju</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PARTSONMAP</name>
                        <newname>jv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PLACE_ITEM</name>
                        <newname>jw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PLACE_PAWN</name>
                        <newname>jx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PLANTDENSITY</name>
                        <newname>jy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>POSITIVE_ONLY</name>
                        <newname>jz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PREVIEW</name>
                        <newname>j0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PRICE</name>
                        <newname>j1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGY</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGYCARD</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGYDIALOG</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGYMODIFY</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGYUI</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGYUNOFFICIAL</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYFOCUS</name>
                        <newname>j2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYTALENTE</name>
                        <newname>j3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>QUADRUM</name>
                        <newname>j4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>QUALITY</name>
                        <newname>k6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>QUARTALS</name>
                        <newname>j5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RACESPECIFICDRESS</name>
                        <newname>ds</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RANGED</name>
                        <newname>j6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RECRUIT</name>
                        <newname>j7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REDRESS</name>
                        <newname>j8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REEQUIP</name>
                        <newname>j9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REINVENT</name>
                        <newname>ka</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RELATIONS</name>
                        <newname>kc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RELATIONSOF</name>
                        <newname>kd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RELATIONTO</name>
                        <newname>ke</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RELATION_INFO</name>
                        <newname>kb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RELOADTIME</name>
                        <newname>kf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REMOVE_ADDONS</name>
                        <newname>kg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REMOVE_HEDIFF</name>
                        <newname>kh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESET</name>
                        <newname>ki</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESETALL</name>
                        <newname>kj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESURRECT</name>
                        <newname>kk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RETTUNGSKAPSEL</name>
                        <newname>dj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ROTATION</name>
                        <newname>dw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ROYALTY</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SAVE</name>
                        <newname>kl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SAVESLOT</name>
                        <newname>km</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SELECT_BODYPART</name>
                        <newname>kn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SELECT_COLOR</name>
                        <newname>ko</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SELECT_PAWN</name>
                        <newname>kp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEPHEX</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEPLIST</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEPMULTI</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEPNAME</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEPVALUE</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SETROYALTITLE</name>
                        <newname>kq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SETTINGSSAVED</name>
                        <newname>kr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SHOWCREATION</name>
                        <newname>ku</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SHOW_HIDDEN</name>
                        <newname>ks</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SHOW_IMPLICITE</name>
                        <newname>kt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SILVER_NEAR</name>
                        <newname>kv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SILVER_NEEDED</name>
                        <newname>kw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SKILLGAINS</name>
                        <newname>df</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SKIN</name>
                        <newname>kx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SKIP</name>
                        <newname>ky</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SPRAYING</name>
                        <newname>kz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>START</name>
                        <newname>dn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STARTCONTAINER</name>
                        <newname>k0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STAT</name>
                        <newname>da</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STATS</name>
                        <newname>k1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STATTYPE</name>
                        <newname>k2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STEALABLE</name>
                        <newname>k3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STUFF</name>
                        <newname>k4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STUFFPROPS</name>
                        <newname>k7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STYLE</name>
                        <newname>k5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SUMME</name>
                        <newname>k8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SWAP_TO_PAWN</name>
                        <newname>k9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TAGS</name>
                        <newname>la</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TARGET_LOCATION</name>
                        <newname>lb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TATTOO</name>
                        <newname>ef</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TCD_BuildingMisc</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TECHLEVEL</name>
                        <newname>lc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TEILEIMSCHIFFSWRACK</name>
                        <newname>dm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TELEPORT</name>
                        <newname>ld</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TEXPATH</name>
                        <newname>le</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>THOUGHTS</name>
                        <newname>dc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TH_MEMORY</name>
                        <newname>lf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TH_SITUATIONAL</name>
                        <newname>lg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TH_SOCIAL</name>
                        <newname>lh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TH_UNSUPPORTED</name>
                        <newname>li</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIERKAPSEL</name>
                        <newname>dk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_ADD_APPAREL</name>
                        <newname>lj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_ADD_CUSTOMPAWN</name>
                        <newname>lk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_ADD_EQUIP</name>
                        <newname>ll</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_ADD_ITEM</name>
                        <newname>lm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_ADD_PAWN</name>
                        <newname>ln</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_CHANGE_NAME</name>
                        <newname>lo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_CHANGE_NAME_ALL</name>
                        <newname>lp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_CLONE</name>
                        <newname>lq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_DELETE_PAWN</name>
                        <newname>lr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_DESTROYDROP</name>
                        <newname>ls</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_DLG_RANDOMIZE_HAIRANDCOLOR</name>
                        <newname>lu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_DLG_RANDOM_COLOR</name>
                        <newname>lt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_HEAL</name>
                        <newname>lv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_HURT</name>
                        <newname>lw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_LOAD_PAWN_FROM_SLOT</name>
                        <newname>lx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_QUICKHEAL</name>
                        <newname>ly</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOMIZE_BIO</name>
                        <newname>l8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOMIZE_BODYPARTS</name>
                        <newname>l9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOMIZE_EQUIP</name>
                        <newname>ma</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOMIZE_PAWN</name>
                        <newname>mb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOMIZE_PAWNKEEPRACE</name>
                        <newname>mc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_APPAREL</name>
                        <newname>lz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_BEARD</name>
                        <newname>l0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_BODY</name>
                        <newname>l1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_BODYTATTOO</name>
                        <newname>l2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_FACETATTOO</name>
                        <newname>l3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_HAIR</name>
                        <newname>l4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_HAIRCOLOR</name>
                        <newname>l5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_HEAD</name>
                        <newname>l6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_RANDOM_SKINCOLOR</name>
                        <newname>l7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_REDRESS</name>
                        <newname>md</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_REEQUIP</name>
                        <newname>me</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_REINVENT</name>
                        <newname>mf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_REMOVE_PAWN</name>
                        <newname>mg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_SAVE_PAWN_TO_SLOT</name>
                        <newname>mh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_TELEPORT</name>
                        <newname>mi</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIP_UNDRESS</name>
                        <newname>mj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TOOLTIP_REMOVE_ADDONS</name>
                        <newname>mk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TRADEABILITY</name>
                        <newname>ml</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TRIBAL</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TR_MODNAME</name>
                        <newname>cr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TURRET</name>
                        <newname>mm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UNDRESS</name>
                        <newname>mn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VON</name>
                        <newname>mo</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WARMUP</name>
                        <newname>mp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WARMUPMAX</name>
                        <newname>mq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WILDANIMALS</name>
                        <newname>mr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WILL_REPLACE</name>
                        <newname>ms</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WORNPATH</name>
                        <newname>mt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XENOMORPH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>YAUTJA</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>YEAR</name>
                        <newname>mu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>YEARS</name>
                        <newname>mv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZL_CONVERTTOZOMBIE</name>
                        <newname>cs</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZL_TOOLS</name>
                        <newname>ct</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZL_ZOMBIELANDZOMBIE</name>
                        <newname>cu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZOMBGRELLA</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZOMBIE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZOMBIELAND</name>
                        <newname>cv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZOMBIES</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZOMBRELLA</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZUTULYWARRIOR</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentLanguage</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X</name>
                <newname>bx</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.GameFont)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string&amp;, int32&amp;, int32, int32, bool, string, bool)</signature>
                        <name>AddIntSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string&amp;, float32, float32&amp;, float32, float32, bool)</signature>
                        <name>AddMultiplierSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string&amp;, float32&amp;, float32, float32, bool, string)</signature>
                        <name>AddSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(string, float32, float32, bool&amp;, string)</signature>
                        <name>BaseCheckboxLabeled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>Begin</name>
                    </method>
                    <method>
                        <signature>Verse.Listing_Standard(float32)</signature>
                        <name>BeginSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(UnityEngine.Texture2D, float32, float32, float32, System.Action)</signature>
                        <name>ButtonImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(float32, float32, float32, float32, string, System.Action)</signature>
                        <name>ButtonImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(float32, float32, float32, float32, string, UnityEngine.Color, System.Action`1&lt;!!0&gt;, !!0)</signature>
                        <name>ButtonImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, float32, float32, float32, float32, System.Action, string)</signature>
                        <name>ButtonText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>ButtonText</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>ButtonTextLabeled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, float32, float32, bool&amp;, string)</signature>
                        <name>CheckboxLabeled</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool&amp;, bool&amp;)</signature>
                        <name>CheckboxLabeledSelectable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, float32, float32, bool&amp;, bool, string)</signature>
                        <name>CheckboxLabeledWithDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>End</name>
                    </method>
                    <method>
                        <signature>void(Verse.Listing_Standard)</signature>
                        <name>EndSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(string, float32, float32, string, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;)</signature>
                        <name>FloatMenuButtonWithLabel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(float32, float32, float32, float32, string, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;)</signature>
                        <name>FloatMenuOnButtonImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, float32)</signature>
                        <name>GetFormattedValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2(float32, float32)</signature>
                        <name>GetLabelScrollbarPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32, int32)</signature>
                        <name>IntAdjuster</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32&amp;, string&amp;, int32)</signature>
                        <name>IntEntry</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.IntRange&amp;, int32, int32)</signature>
                        <name>IntRange</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32, string)</signature>
                        <name>IntSetter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32, string)</signature>
                        <name>Label</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, float32, float32, float32, string)</signature>
                        <name>Label</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, float32, float32, float32, float32, string)</signature>
                        <name>LabelSimple</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(float32, string, string, string, bool, System.Action`1&lt;string&gt;)</signature>
                        <name>Listview</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(float32, float32, RimWorld.ScenPart, bool, bool, System.Action`1&lt;RimWorld.ScenPart&gt;)</signature>
                        <name>ListviewPart</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(float32, RimWorld.StatModifier, bool, bool, System.Action`1&lt;string&gt;)</signature>
                        <name>ListviewSM</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(float32, Verse.ThingDefCountClass, bool, bool, System.Action`1&lt;string&gt;, Verse.ThingDef)</signature>
                        <name>ListviewTDC</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool, float32, string)</signature>
                        <name>RadioButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, bool, string, UnityEngine.RenderTexture, Verse.ThingDef, RimWorld.HairDef, UnityEngine.Vector2, bool, float32, UnityEngine.Color, UnityEngine.Color, bool)</signature>
                        <name>Selectable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool, string, RimWorld.AbilityDef, UnityEngine.Color)</signature>
                        <name>SelectableAbility</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool, string)</signature>
                        <name>SelectableFast</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool, string, Verse.GeneDef, UnityEngine.Color)</signature>
                        <name>SelectableGene</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, bool, string, UnityEngine.RenderTexture, Verse.ThingDef, RimWorld.HairDef, UnityEngine.Vector2, bool, float32, UnityEngine.Color)</signature>
                        <name>SelectableHorizontal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(string, bool, bool, bool, bool, bool, bool, string, bool, bool, !!0, UnityEngine.Color, bool, bool)</signature>
                        <name>SelectableText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, UnityEngine.Texture2D, UnityEngine.Color, float32, float32, string, string, bool)</signature>
                        <name>SelectableThought</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, UnityEngine.Vector2)</signature>
                        <name>SetLabelScrollbarPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(float32, float32, float32)</signature>
                        <name>Slider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(float32, float32, float32, UnityEngine.Color)</signature>
                        <name>Slider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(float32, float32, float32, float32)</signature>
                        <name>Slider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(UnityEngine.Texture2D, string, string, string, UnityEngine.Texture2D, string)</signature>
                        <name>TableLine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, int32)</signature>
                        <name>TextEntry</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string, int32)</signature>
                        <name>TextEntryLabeled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>TextEntryLabeledWithDefaultAndCopy</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(float32, float32, !!0&amp;, string&amp;, float32, float32)</signature>
                        <name>TextFieldNumeric</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(string, float32, float32, !!0&amp;, string&amp;, float32, float32)</signature>
                        <name>TextFieldNumericLabeled</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_CurX</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_CurY</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_CurX</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_CurY</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>DefSelectionLineHeight</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>MoodColor</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>MoodColorNegative</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>NoEffectColor</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>alternate</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Verse.GameFont</signature>
                        <name>font</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pair`2&lt;UnityEngine.Vector2,UnityEngine.Vector2&gt;&gt;</signature>
                        <name>labelScrollbarPositions</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;</signature>
                        <name>labelScrollbarPositionsSetThisFrame</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Texture2D</signature>
                        <name>texRemove</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X/&lt;&gt;c__DisplayClass39_0</name>
                <newname>bx/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;Listview&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>tooltip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X/&lt;&gt;c__DisplayClass40_0</name>
                <newname>bx/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;ListviewTDC&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.ThingDefCountClass</signature>
                        <name>tdc</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X/&lt;&gt;c__DisplayClass42_0</name>
                <newname>bx/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;ListviewPart&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>td</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X/&lt;&gt;c__DisplayClass43_0</name>
                <newname>bx/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;ListviewSM&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>RimWorld.StatModifier</signature>
                        <name>sm</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X/&lt;&gt;c__DisplayClass55_0</name>
                <newname>bx/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;TableLine&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>tooltip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Listing_X/&lt;&gt;c__DisplayClass56_0</name>
                <newname>bx/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;SelectableThought&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>tooltip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.MainTabWindow_CharacterEditor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>InitialSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.MessageTool</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>void(string, Verse.MessageTypeDef)</signature>
                        <name>Show</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Action, string)</signature>
                        <name>ShowActionDialog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, System.Action, System.Action, System.Action)</signature>
                        <name>ShowCustomDialog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>ShowDialog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ShowInDebug</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.MessageTool/&lt;&gt;c</name>
                <newname>a2/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDialog&gt;b__2_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.MessageTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__2_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.MindTool</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.InspirationDef&gt;()</signature>
                        <name>GetAllInspirations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.MentalStateDef&gt;()</signature>
                        <name>GetAllMentalStates</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllNeedsAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;CharacterEditor.EType,System.Collections.Generic.HashSet`1&lt;RimWorld.ThoughtDef&gt;&gt;()</signature>
                        <name>GetAllThoughtLists</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetInspirationTooltip</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetMentalStateTooltip</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>RimWorld.Need(Verse.Pawn, RimWorld.NeedDef)</signature>
                        <name>GetNeedForThis</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetNeeds</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.MindTool/&lt;&gt;c</name>
                <newname>au/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.InspirationDef)</signature>
                        <name>&lt;GetAllInspirations&gt;b__4_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.InspirationDef)</signature>
                        <name>&lt;GetAllInspirations&gt;b__4_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.MentalStateDef)</signature>
                        <name>&lt;GetAllMentalStates&gt;b__3_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.MentalStateDef)</signature>
                        <name>&lt;GetAllMentalStates&gt;b__3_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;GetAllThoughtLists&gt;b__2_0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;GetAllThoughtLists&gt;b__2_1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;GetAllThoughtLists&gt;b__2_2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;GetAllThoughtLists&gt;b__2_3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;GetAllThoughtLists&gt;b__2_4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef)</signature>
                        <name>&lt;GetAllThoughtLists&gt;b__2_5</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.MindTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__2_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__2_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__2_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__2_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__2_4</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.ThoughtDef,string&gt;</signature>
                        <name>&lt;&gt;9__2_5</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.MentalStateDef,bool&gt;</signature>
                        <name>&lt;&gt;9__3_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.MentalStateDef,string&gt;</signature>
                        <name>&lt;&gt;9__3_1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.InspirationDef,bool&gt;</signature>
                        <name>&lt;&gt;9__4_0</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.InspirationDef,string&gt;</signature>
                        <name>&lt;&gt;9__4_1</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.NameTool</name>
                <newname>aq</newname>
                <methodlist>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetGenderInt</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetMainTitle</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.NameSingle)</signature>
                        <name>GetPawnByNameSingle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.NameTriple)</signature>
                        <name>GetPawnByNameTriple</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, Verse.Pawn)</signature>
                        <name>GetPawnDescription</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, bool)</signature>
                        <name>GetPawnName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPawnNameAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, bool)</signature>
                        <name>GetPawnNameColored</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.NameSingle(string, Verse.PawnKindDef)</signature>
                        <name>GetPawnNameFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.NameTriple(string)</signature>
                        <name>GetPawnNameFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetRoyalTitleAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.RoyalTitle)</signature>
                        <name>RemoveTitle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, int32)</signature>
                        <name>SetGenderInt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Name)</signature>
                        <name>SetName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string, string, string)</signature>
                        <name>SetName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetNameFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Gender)</signature>
                        <name>SetPawnGender</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetRoyalTitleFromSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetTitle</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.NameTool/&lt;&gt;c</name>
                <newname>aq/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>&lt;SetTitle&gt;b__6_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.NameTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Faction,bool&gt;</signature>
                        <name>&lt;&gt;9__6_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.NameTool/&lt;&gt;c__DisplayClass8_0</name>
                <newname>aq/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RemoveTitle&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>RimWorld.RoyalTitleDef(RimWorld.RoyalTitlePermitDef)</signature>
                        <name>&lt;RemoveTitle&gt;g__FirstTitleWithPermit|0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>RimWorld.RoyalTitle</signature>
                        <name>title</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.NameTool/&lt;&gt;c__DisplayClass8_1</name>
                <newname>aq/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.RoyalTitleDef)</signature>
                        <name>&lt;RemoveTitle&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>RimWorld.RoyalTitlePermitDef</signature>
                        <name>permitDef</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.OptionB</name>
                <newname>e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>CREATENOINV</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>CREATENOWEAPON</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>CREATENUDE</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>CREATERACESPECIFIC</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>DOAPPARELCHECK</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>HDRARGB</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>MOREPAWNNAMES</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>PAUSEGAME</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>SHOWDEADLOGO</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>SHOWINMENU</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>SHOWMAPVARS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>SHOWMINI</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>SHOWPAWNLIST</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>SHOWTABS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>STAYINCASCET</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>USECHAOSABILITY</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>USESORTEDPAWNLIST</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionB</signature>
                        <name>ZOMBOBJECTS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.OptionI</name>
                <newname>f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.OptionI</signature>
                        <name>NUMCAPSULESETS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionI</signature>
                        <name>NUMPAWNSLOTS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionI</signature>
                        <name>RESOLUTION</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionI</signature>
                        <name>STACKLIMIT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.OptionS</name>
                <newname>g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.OptionS</signature>
                        <name>CUSTOMARMOR</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionS</signature>
                        <name>CUSTOMITEM</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionS</signature>
                        <name>CUSTOMWEAPON</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionS</signature>
                        <name>HOTKEYEDITOR</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.OptionS</signature>
                        <name>HOTKEYTELEPORT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnKindTool</name>
                <newname>ar</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;()</signature>
                        <name>GetAnimals</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;()</signature>
                        <name>GetHumanlikes</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;()</signature>
                        <name>GetOther</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetPawnKindDefname</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;(RimWorld.Faction, string)</signature>
                        <name>GetPawnKindListxx</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef(string)</signature>
                        <name>GetRandomPawnKindDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsAbomination</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsAnimal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsDorfbewohner</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsDroidColonist</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef, string)</signature>
                        <name>IsFromMod</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsInsektoid</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsMechanoid</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsTribalOrBoss</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsXeno</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>IsZombie</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;(RimWorld.Faction, string, string)</signature>
                        <name>ListOfPawnKindDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.PawnKindDef&gt;(Verse.ThingDef, bool, bool)</signature>
                        <name>ListOfPawnKindDefByRace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;(bool, bool)</signature>
                        <name>ListOfRaces</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;(System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;)</signature>
                        <name>ThisOrDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef(Verse.PawnKindDef, System.Collections.Generic.List`1&lt;Verse.PawnKindDef&gt;)</signature>
                        <name>ThisOrFromList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef(Verse.PawnKindDef, string)</signature>
                        <name>ThisOrRandom</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnKindTool/&lt;&gt;c</name>
                <newname>ar/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetAnimals&gt;b__16_0</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;GetAnimals&gt;b__16_1</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetHumanlikes&gt;b__15_0</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;GetHumanlikes&gt;b__15_1</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetOther&gt;b__17_0</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;GetOther&gt;b__17_1</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetPawnKindListxx&gt;b__18_0</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetPawnKindListxx&gt;b__18_1</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetPawnKindListxx&gt;b__18_2</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;GetPawnKindListxx&gt;b__18_3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;GetPawnKindListxx&gt;b__18_4</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDef&gt;b__21_4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDefByRace&gt;b__20_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDefByRace&gt;b__20_3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ThisOrDefault&gt;b__14_0</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.PawnKindTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__14_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__15_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__15_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__16_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__16_1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__17_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__17_1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__18_0</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__18_1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__18_2</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__18_3</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,bool&gt;</signature>
                        <name>&lt;&gt;9__18_4</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__20_1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__20_3</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.PawnKindDef,string&gt;</signature>
                        <name>&lt;&gt;9__21_4</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnKindTool/&lt;&gt;c__DisplayClass20_0</name>
                <newname>ar/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDefByRace&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDefByRace&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>all</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>humanlike</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>raceDef</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnKindTool/&lt;&gt;c__DisplayClass21_0</name>
                <newname>ar/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDef&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDef&gt;b__1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDef&gt;b__2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.PawnKindDef)</signature>
                        <name>&lt;ListOfPawnKindDef&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnxTool</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>void(CharacterEditor.PresetPawn)</signature>
                        <name>AddOrCreateExistingPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.PawnKindDef, RimWorld.Faction, Verse.ThingDef, CharacterEditor.PresetPawn, Verse.IntVec3)</signature>
                        <name>AddOrCreateNewPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>CheckIfSpaceZombie</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.PresetPawn(Verse.Pawn)</signature>
                        <name>ClonePawn</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.PawnKindDef, RimWorld.Faction, Verse.ThingDef)</signature>
                        <name>CreateNewPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.IntVec3)</signature>
                        <name>CreatePawnLord</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool)</signature>
                        <name>Delete</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, bool, RimWorld.Faction)</signature>
                        <name>DeleteAllPawns</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>DiscardGeneratedPawn</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>EnslavePawn</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>FactionIsNotInsectNotMecha</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Faction)</signature>
                        <name>FactionIsXeno</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>FixInvalidNames</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Gender)</signature>
                        <name>ForceGenderizedBodyTypeDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.PawnGenerationRequest)</signature>
                        <name>GeneratePawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.PawnKindDef, RimWorld.Faction)</signature>
                        <name>GeneratePawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetNamesOfInactiveMods</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetNamesOfUsedMods</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(string)</signature>
                        <name>GetOtherPawnFromSeparatedString</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;(string, bool, RimWorld.Faction)</signature>
                        <name>GetPawnList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetTrainabilityLabel</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetUsedModIds</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetWildnessLabel</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>IsAnimal</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.BodyTypeDef)</signature>
                        <name>IsBodyInList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>IsOnMap</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>IsZombie</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(bool, string, RimWorld.Faction)</signature>
                        <name>KeyIsAnimal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(bool, string)</signature>
                        <name>KeyIsHumanoid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, RimWorld.Faction)</signature>
                        <name>KeyIsOther</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.HashSet`1&lt;string&gt;)</signature>
                        <name>ModListIdsToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;(string)</signature>
                        <name>ModStringToHashSet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Notify_CheckStartPawnsListChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn, Verse.IntVec3)</signature>
                        <name>PassToWorld</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn)</signature>
                        <name>PostCompsAfterCreate</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn)</signature>
                        <name>PostProcess</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>RecruitPawn</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Gender, RimWorld.Faction)</signature>
                        <name>ReplacePawnWithPawnOfSameRace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, RimWorld.Faction, bool&amp;, bool&amp;, bool&amp;, bool&amp;, bool&amp;, bool&amp;)</signature>
                        <name>SetPawnKindFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.IntVec3)</signature>
                        <name>SpawnAsZombie</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Faction, CharacterEditor.PresetPawn, Verse.IntVec3)</signature>
                        <name>SpawnOrPassPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn, Verse.IntVec3)</signature>
                        <name>SpawnPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.IntVec3)</signature>
                        <name>TeleportPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ZombieWorldCreationFixInSpace</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>CanCreateZombieInSpace</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnxTool/&lt;&gt;c</name>
                <newname>a4/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>&lt;GetPawnList&gt;b__19_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>&lt;GetPawnList&gt;b__19_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.PawnxTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>&lt;&gt;9__19_1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.Pawn,string&gt;</signature>
                        <name>&lt;&gt;9__19_2</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnxTool/&lt;&gt;c__DisplayClass19_0</name>
                <newname>a4/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>&lt;GetPawnList&gt;b__0</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>&lt;GetPawnList&gt;b__3</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>allFac</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>animal</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>RimWorld.Faction</signature>
                        <name>f</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>humanoid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>onMap</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>other</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PawnxTool/&lt;&gt;c__DisplayClass2_0</name>
                <newname>a4/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>&lt;CreatePawnLord&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Thing)</signature>
                        <name>&lt;CreatePawnLord&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>newPawn</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>BeginTeleportCustomPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>BeginTeleportPawn</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.IntVec3, Verse.Map)</signature>
                        <name>ClearCell</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeletePawnFromCustomPosition</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Destroy</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.IntVec3)</signature>
                        <name>DoEffect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn)</signature>
                        <name>DropWithPod</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Selected)</signature>
                        <name>PlaceInCustomPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn)</signature>
                        <name>PlaceInCustomPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.PresetPawn, Verse.IntVec3)</signature>
                        <name>PlaceInPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>TeleportPawnAndReselect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>TryCloneOrAbort</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Rot4</signature>
                        <name>rotation</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool/&lt;&gt;c</name>
                <newname>x/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;BeginTeleportCustomPawn&gt;b__8_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DeletePawnFromCustomPosition&gt;b__7_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Destroy&gt;b__11_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.PlacingTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__11_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__7_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;&gt;9__8_0</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool/&lt;&gt;c__DisplayClass0_0</name>
                <newname>x/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DropWithPod&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>p</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn</signature>
                        <name>ppn</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool/&lt;&gt;c__DisplayClass10_0</name>
                <newname>x/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;TeleportPawnAndReselect&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>p</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool/&lt;&gt;c__DisplayClass2_0</name>
                <newname>x/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PlaceInCustomPosition&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>p</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn</signature>
                        <name>ppn</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool/&lt;&gt;c__DisplayClass4_0</name>
                <newname>x/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;PlaceInCustomPosition&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>s</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PlacingTool/&lt;&gt;c__DisplayClass9_0</name>
                <newname>x/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;BeginTeleportPawn&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>p</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PosTool</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Vector2, System.Collections.Generic.HashSet`1&lt;!!0&gt;, !!0, float32, float32)</signature>
                        <name>CheckAndSetScrollPos</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Vector2, System.Collections.Generic.List`1&lt;!!0&gt;, !!0, float32, float32)</signature>
                        <name>CheckAndSetScrollPos</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.IntVec3)</signature>
                        <name>DeletePawnsInCell</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(Verse.IntVec3)</signature>
                        <name>FirstFromCell</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.IntVec3)</signature>
                        <name>FirstPawnFromCell</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(RimWorld.Selector)</signature>
                        <name>FirstPawnFromSelector</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.IntVec3)</signature>
                        <name>FirstPawnInCellArea</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(RimWorld.Selector)</signature>
                        <name>FirstThingFromSelector</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.PosTool/&lt;&gt;c__DisplayClass7_0`1</name>
                <newname>a5/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>&lt;CheckAndSetScrollPos&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>tSelected</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetApparel</name>
                <newname>bj</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.PresetApparel)</signature>
                        <name>FromPreset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,CharacterEditor.PresetApparel&gt;()</signature>
                        <name>GetAllPresets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadCustomString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetToDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveCustom</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateArmor</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AsString</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>bodyPartGroups</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>costStuffCount</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>defName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>defaultOutfitTags</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eqippedStats</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>label</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>layers</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>statBases</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stealable</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stuffCategories</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tags</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>techLevel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tradeability</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetApparel/&lt;&gt;c</name>
                <newname>bj/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllPresets&gt;b__23_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.PresetApparel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__23_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetItem</name>
                <newname>bk</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.PresetItem)</signature>
                        <name>FromPreset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,CharacterEditor.PresetItem&gt;()</signature>
                        <name>GetAllPresets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadCustomString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetToDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveCustom</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateItem</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AsString</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>costStuffCount</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>defName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eqippedStats</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>label</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>statBases</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stealable</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stuffCategories</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>techLevel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tradeability</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetPawn</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearAllCustoms</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearAllSlots</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>GeneratePawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int32, string)</signature>
                        <name>Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(int32, bool, string)</signature>
                        <name>LoadPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PostProcess</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RescueOldPawns</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, int32)</signature>
                        <name>SavePawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AsString</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinParams</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ParamCount</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bPlace</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;CharacterEditor.PresetPawn/Param,string&gt;</signature>
                        <name>dicParams</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>setBodyParts</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetPawn/Param</name>
                <newname>q/Param</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P00_id</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P01_pawnkinddef</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P02_faction</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P03_name</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P04_ageticks</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P05_chronoticks</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P06_gender</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P07_bodydefname</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P08_headpath</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P09_crowntype</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P10_crown</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P11_headaddons</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P12_hairdefname</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P13_gradientmask</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P14_haircolor1</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P15_haircolor2</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P16_melanin</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P17_skincolor1</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P18_skincolor2</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P19_eyecolor</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P20_skills</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P21_traits</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P22_hediffs</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P23_backstorychild</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P24_backstoryadult</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P25_workpriorities</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P26_weaponlist</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P27_apparellist</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P28_itemlist</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P29_records</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P31_memories</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P32_situationalmemories</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P33_relations</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P34_royaltitles</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P35_beard</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P36_facetattoo</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P37_bodytattoo</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P38_entropy</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P39_psyfocus</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P40_psyabilities</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P41_favcolor</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P42_ideoculture</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P43_ideoname</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P44_modids</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P45_facialanimation</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P46_personality</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P47_headtypedef</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P48_xenotypedef</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P49_customxenoname</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P50_endogene</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>P51_xenogene</name>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetPawn/Param</signature>
                        <name>p30_needs</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetWeapon</name>
                <newname>bl</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.PresetWeapon)</signature>
                        <name>FromPreset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,CharacterEditor.PresetWeapon&gt;()</signature>
                        <name>GetAllPresets</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Verse.ThingDef&gt;()</signature>
                        <name>GetAllTurrets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadCustomString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ResetToDefault</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveCustom</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>UpdateFromBullet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.SoundDef)</signature>
                        <name>UpdateFromSound</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>UpdateWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AsString</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>accuracyLong</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>accuracyMedium</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>accuracyShort</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>accuracyTouch</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bTargetGround</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bulletCount</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>bulletExplosionRadius</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bulletInterval</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>bulletName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>bulletSpeed</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>bulletStoppingPower</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>costStuffCount</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>defName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>equippedStats</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>label</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>soundName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>statBases</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stealable</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stuffCategories</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tags</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>techLevel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tradeability</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponCEReload</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponCooldown</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>weaponFuelCapacity</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponMinRange</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponRange</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponScatter</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponWarmupMax</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>weaponWarmupMin</name>
                        <newname>x</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.PresetWeapon/&lt;&gt;c</name>
                <newname>bl/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllPresets&gt;b__42_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.PresetWeapon/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__42_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.RaceTool</name>
                <newname>as</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.PawnKindDef, bool)</signature>
                        <name>ChangeRace</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.RecordTool</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllRecordsAsSeparatedString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.RecordDef, float32)</signature>
                        <name>GetAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.DefMap`2&lt;RimWorld.RecordDef,float32&gt;(Verse.Pawn)</signature>
                        <name>GetPawnRecords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.DefMap`2&lt;RimWorld.RecordDef,float32&gt;)</signature>
                        <name>SetPawnRecords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetRecords</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Reflect</name>
                <newname>at</newname>
                <methodlist>
                    <method>
                        <signature>System.Type(string)</signature>
                        <name>ByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.Reflection.MethodInfo, object[], object)</signature>
                        <name>CallMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.Type, string, object[])</signature>
                        <name>CallMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object, string, object[])</signature>
                        <name>CallMethod</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(object, string, object[])</signature>
                        <name>CallMethodAmbiguous</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type(string, string)</signature>
                        <name>GetAType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type(string, string)</signature>
                        <name>GetAssemblyType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(object, string)</signature>
                        <name>GetMemberConstValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>object(System.Type, string)</signature>
                        <name>GetMemberValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(object, string)</signature>
                        <name>GetMemberValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.MethodInfo(System.Type, string)</signature>
                        <name>GetMethodInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.MethodInfo(object, string)</signature>
                        <name>GetMethodInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type, string, object)</signature>
                        <name>SetMemberValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, string, object)</signature>
                        <name>SetMemberValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_APP_ATTRIBUTE_TITLE</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_APP_NAME_AND_VERISON</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Reflect/&lt;&gt;c__DisplayClass16_0</name>
                <newname>at/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.Assembly)</signature>
                        <name>&lt;GetAssemblyType&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.RelationTool</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>bool(Verse.Pawn, Verse.Pawn)</signature>
                        <name>AreThosePawnSisBro</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.Pawn, Verse.Pawn, Verse.Gender)</signature>
                        <name>GetCommonParent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(Verse.Pawn, Verse.Gender)</signature>
                        <name>GetFirstParentForPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, Verse.Pawn)</signature>
                        <name>GetPawnRowTooltip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;(Verse.Pawn, int32&amp;)</signature>
                        <name>GetRelatedPawns</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.DirectPawnRelation)</signature>
                        <name>GetRelationAsSeparatedString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetRelationsAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.DirectPawnRelation)</signature>
                        <name>RelationLabelDirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.PawnRelationDef, Verse.Pawn)</signature>
                        <name>RelationLabelIndirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, Verse.Pawn)</signature>
                        <name>RelationTooltip</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetRelationsFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SZWidgets</name>
                <newname>by</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AToggleSearch</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, System.Action, string)</signature>
                        <name>ButtonImage</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32, string, System.Action, string)</signature>
                        <name>ButtonImage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, System.Action, UnityEngine.Color, string)</signature>
                        <name>ButtonImageCol</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32, string, System.Action`1&lt;UnityEngine.Color&gt;, UnityEngine.Color, string)</signature>
                        <name>ButtonImageCol</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, string, System.Action`1&lt;!!0&gt;, !!0, UnityEngine.Color, string)</signature>
                        <name>ButtonImageCol2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, string, System.Action`1&lt;!!0&gt;, !!0, string)</signature>
                        <name>ButtonImageVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(float32, float32, float32, float32, string, System.Action`1&lt;!!0&gt;, !!0, string)</signature>
                        <name>ButtonImageVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, System.Action, string)</signature>
                        <name>ButtonInvisible</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, System.Action, string)</signature>
                        <name>ButtonInvisibleMouseOver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, System.Action`1&lt;!!0&gt;, !!0, string)</signature>
                        <name>ButtonInvisibleMouseOverVar</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, System.Action`1&lt;!!0&gt;, !!0, string)</signature>
                        <name>ButtonInvisibleVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, UnityEngine.Color, System.Action, string)</signature>
                        <name>ButtonSolid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, System.Action, string)</signature>
                        <name>ButtonText</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32, string, System.Action, string)</signature>
                        <name>ButtonText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(float32, float32, float32, float32, string, System.Action`1&lt;!!0&gt;, !!0)</signature>
                        <name>ButtonTextVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, UnityEngine.Texture2D, UnityEngine.Color, System.Action, string)</signature>
                        <name>ButtonTextureTextHighlight</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, string, UnityEngine.Color, System.Action, string, bool)</signature>
                        <name>ButtonTextureTextHighlight2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, !!0, System.Action`1&lt;!!0&gt;, string)</signature>
                        <name>ButtonThingVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, bool, System.Action`1&lt;bool&gt;)</signature>
                        <name>CheckBoxOnChange</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, UnityEngine.Color, System.Action`1&lt;UnityEngine.Color&gt;, bool)</signature>
                        <name>ColorBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, UnityEngine.Texture2D, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;, string)</signature>
                        <name>FloatMenuOnButtonImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, System.Collections.Generic.HashSet`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;, string)</signature>
                        <name>FloatMenuOnButtonInvisible</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;, string)</signature>
                        <name>FloatMenuOnButtonInvisible</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, string, System.Collections.Generic.HashSet`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;, string)</signature>
                        <name>FloatMenuOnButtonText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, string, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;)</signature>
                        <name>FloatMenuOnButtonText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, UnityEngine.Rect, CharacterEditor.Selected, System.Action`1&lt;Verse.ThingDef&gt;, string)</signature>
                        <name>FloatMenuOnButtonThingStuffIcon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, UnityEngine.Rect, CharacterEditor.Selected, System.Action`1&lt;Verse.ThingStyleDef&gt;, string)</signature>
                        <name>FloatMenuOnButtonThingStyleIcon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, UnityEngine.Color, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, !!0, System.Action`1&lt;!!0&gt;, string)</signature>
                        <name>FloatMenuOnLabel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, UnityEngine.Color, string, Verse.Pawn, UnityEngine.Color, System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, !!0, System.Action`1&lt;!!0&gt;, System.Action, bool)</signature>
                        <name>FloatMenuOnLabelAndImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;Verse.FloatMenuOption&gt;(System.Collections.Generic.List`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;, bool)</signature>
                        <name>FloatMenuOnRect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Action`1&lt;!!0&gt;)</signature>
                        <name>FloatMenuOnRect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>void(UnityEngine.Rect, UnityEngine.Texture2D, System.Collections.Generic.List`1&lt;!!0&gt;, System.Collections.Generic.List`1&lt;!!1&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`2&lt;!!1,string&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!1&gt;, string)</signature>
                        <name>FloatMixedMenuOnButtonImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string)</signature>
                        <name>Image</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, System.Action, string)</signature>
                        <name>Label</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32, string, System.Action)</signature>
                        <name>Label</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, UnityEngine.Color, int32, string)</signature>
                        <name>LabelBackground</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, string, UnityEngine.Color, System.Action`1&lt;!!0&gt;, !!0, string)</signature>
                        <name>LabelCol</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, System.Collections.Generic.ICollection`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`3&lt;!!0,!!0,bool&gt;, !!0&amp;, UnityEngine.Vector2&amp;, bool, System.Action`1&lt;!!0&gt;, bool, bool, bool, bool)</signature>
                        <name>ListView</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(float32, float32, float32, float32, System.Collections.Generic.ICollection`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`3&lt;!!0,!!0,bool&gt;, !!0&amp;, UnityEngine.Vector2&amp;, bool, System.Action`1&lt;!!0&gt;, bool, bool, bool, bool)</signature>
                        <name>ListView</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(float32, float32, float32, float32, System.Collections.Generic.ICollection`1&lt;!!0&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`2&lt;!!0,string&gt;, System.Func`3&lt;!!0,!!0,bool&gt;, !!0&amp;, UnityEngine.Vector2&amp;, bool, System.Action`1&lt;!!0&gt;, bool, bool, bool, bool)</signature>
                        <name>ListViewNew</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float32(UnityEngine.Rect, CharacterEditor.Selected, int32)</signature>
                        <name>NavSelectorCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, System.Action, System.Action, System.Action, System.Action, System.Action, System.Action, string, string, string, string, string, UnityEngine.Color)</signature>
                        <name>NavSelectorImageBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, !!0, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, string, string, string, string, string, UnityEngine.Color)</signature>
                        <name>NavSelectorImageBox2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(UnityEngine.Rect, CharacterEditor.Selected, System.Collections.Generic.List`1&lt;int32&gt;)</signature>
                        <name>NavSelectorQuality</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(UnityEngine.Rect, CharacterEditor.Selected)</signature>
                        <name>NavSelectorStuff</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float32(UnityEngine.Rect, CharacterEditor.Selected)</signature>
                        <name>NavSelectorStyle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(UnityEngine.Rect, !!0, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, System.Action`1&lt;!!0&gt;, string, string, string)</signature>
                        <name>NavSelectorVar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(float32, float32, float32, float32, float32, float32)</signature>
                        <name>NumericFloatBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(float32, float32, float32, float32, int32, int32, int32)</signature>
                        <name>NumericIntBox</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(float32, float32, float32, float32, int32, int32, int32)</signature>
                        <name>NumericTextField</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectClickableT</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectNext</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect, bool, int32, bool)</signature>
                        <name>RectOnClick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectPrevious</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectRandom</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect, int32)</signature>
                        <name>RectSlider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect, bool)</signature>
                        <name>RectSolid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectTexture</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectToggle</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Rect(UnityEngine.Rect)</signature>
                        <name>RectToggleLeft</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32, int32, UnityEngine.Vector2&amp;, System.Action`1&lt;CharacterEditor.Listing_X&gt;)</signature>
                        <name>ScrollView</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, string, bool, float32, float32&amp;, float32, float32)</signature>
                        <name>SimpleMultiplierSlider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, string, float32&amp;, float32, float32)</signature>
                        <name>SimpleSlider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, float32, float32, float32, System.Action`1&lt;float32&gt;)</signature>
                        <name>SingleSlinder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(UnityEngine.Rect, string, int32, System.Text.RegularExpressions.Regex)</signature>
                        <name>TextArea</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect, Verse.Thing)</signature>
                        <name>ThingDrawer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32, System.Collections.Generic.List`1&lt;RimWorld.Trait&gt;, UnityEngine.Vector2&amp;, int32, System.Action`1&lt;RimWorld.Trait&gt;, System.Action`1&lt;RimWorld.Trait&gt;, System.Action`1&lt;RimWorld.Trait&gt;, System.Action`1&lt;RimWorld.Trait&gt;, System.Func`2&lt;RimWorld.Trait,string&gt;, System.Func`2&lt;RimWorld.Trait,string&gt;)</signature>
                        <name>TraitListView</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bCountOpen</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bQualityOpen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bStuffOpen</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bStyleOpen</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bToggleSearch</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>lSimilar</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sFind</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sFindOld</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sFindTemp</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tDefName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>waitTimer</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c</name>
                <newname>by/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>&lt;NavSelectorQuality&gt;b__57_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.SZWidgets/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;int32,string&gt;</signature>
                        <name>&lt;&gt;9__57_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass40_0`1</name>
                <newname>by/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;!0&gt;</signature>
                        <name>action</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass40_1`1</name>
                <newname>by/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;FloatMenuOnRect&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass40_0`1&lt;!0&gt;</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>element</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass41_0`1</name>
                <newname>by/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;!0&gt;</signature>
                        <name>action</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass41_1`1</name>
                <newname>by/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;FloatMenuOnRect&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass41_0`1&lt;!0&gt;</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>element</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass57_0</name>
                <newname>by/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>&lt;NavSelectorQuality&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>lOfQuality</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>s</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass58_0</name>
                <newname>by/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>&lt;NavSelectorStuff&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>s</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SZWidgets/&lt;&gt;c__DisplayClass59_0</name>
                <newname>by/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingStyleDef)</signature>
                        <name>&lt;NavSelectorStyle&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>s</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ScenarioTool</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.PawnKindDef, int32)</signature>
                        <name>AddScenarioPartAnimal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, Verse.ThingStyleDef, int32)</signature>
                        <name>AddScenarioPartMap</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, Verse.ThingStyleDef, int32)</signature>
                        <name>AddScenarioPartTaken</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0)</signature>
                        <name>AddScenePart</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.ScenPart_StartingAnimal(Verse.PawnKindDef, int32)</signature>
                        <name>CreateScenePart_Animal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>RimWorld.ScenPart_ScatterThingsAnywhere(Verse.ThingDef, Verse.ThingDef, int32)</signature>
                        <name>CreateScenePart_Anywhere</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.ScenPart_StartingThing_Defined(Verse.ThingDef, Verse.ThingDef, int32)</signature>
                        <name>CreateScenePart_Defined</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetAllScenarioParameter</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetAllScenarioPartsAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.PawnKindDef(RimWorld.ScenPart, int32&amp;)</signature>
                        <name>GetScenarioPartAnimal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>string(!!0)</signature>
                        <name>GetScenarioPartString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>Verse.ThingDef(!!0, Verse.ThingDef&amp;, Verse.ThingStyleDef&amp;, int32&amp;)</signature>
                        <name>GetScenarioPartThingDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>int32(!!0)</signature>
                        <name>GetTypeReplacer</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ScenPart)</signature>
                        <name>IsScatterAnywherePart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ScenPart)</signature>
                        <name>IsScenarioAnimal</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ScenPart)</signature>
                        <name>IsSupportedScenarioPart</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>LoadCapsuleSetup</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveAllSupportedScenarioPartsFromList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SaveCapsuleSetup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetScenaioPartsFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, int32&amp;)</signature>
                        <name>SetScenarioParameterFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0, int32)</signature>
                        <name>SetScenarioPartCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;RimWorld.ScenPart&gt;)</signature>
                        <name>SetScenarioParts</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Pawn&gt;()</signature>
                        <name>get_CurrentPawnList</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentTakenPawnCount</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.ScenPart&gt;()</signature>
                        <name>get_ScenarioParts</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SearchTool</name>
                <newname>a7</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ClearSearch</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.SearchTool(int32)</signature>
                        <name>GetInstance</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.SearchTool(int32)</signature>
                        <name>Update</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedFilter1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedFilter2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectedModName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedFilter1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedFilter2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectedModName</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>filter1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filter2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>find</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>findOld</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;object&gt;</signature>
                        <name>list</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>ofilter1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>ofilter2</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Selected</name>
                <newname>a8</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Thing)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>&lt;Init&gt;b__48_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.Selected(string, string, string, UnityEngine.Color, int32, int32)</signature>
                        <name>ByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.Selected(Verse.Thing)</signature>
                        <name>ByThing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.Selected(Verse.ThingDef)</signature>
                        <name>ByThingDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckSetStuff</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckSetStyle</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, bool, Verse.Thing, System.Action)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.Selected(System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;, bool, bool)</signature>
                        <name>Random</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RandomQuality</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingStyleDef, UnityEngine.Color, int32, int32)</signature>
                        <name>Set</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>SetStuff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>SetStuff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingStyleDef)</signature>
                        <name>SetStyle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>SetStyle</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateBuyPrice</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateStuffList</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;()</signature>
                        <name>get_StuffDescrGetter</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;()</signature>
                        <name>get_StuffLabelGetter</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;()</signature>
                        <name>get_StyleDescrGetter</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;()</signature>
                        <name>get_StyleLabelGetter</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.Color</signature>
                        <name>DrawColor</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>OldStuffCount</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>Stuff</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingStyleDef</signature>
                        <name>Style</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>bulletDef</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>buyPrice</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetApparel</signature>
                        <name>currentApparel</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.PresetWeapon</signature>
                        <name>currentGun</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>equipStatDefName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;</signature>
                        <name>lOfStuff</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingStyleDef&gt;</signature>
                        <name>lOfStyle</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>oldQuality</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>oldStackVal</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>oldStuffIndex</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>oldstyleIndex</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>paramName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>quality</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Verse.SoundDef</signature>
                        <name>soundDef</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stackVal</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>statDefName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stuffIndex</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>styleIndex</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tdcDefName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>thingDef</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.TipSignal</signature>
                        <name>tip</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>tooltip</name>
                        <newname>u</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Selected/&lt;&gt;c</name>
                <newname>a8/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;get_StuffDescrGetter&gt;b__33_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;get_StuffLabelGetter&gt;b__31_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingStyleDef)</signature>
                        <name>&lt;get_StyleDescrGetter&gt;b__29_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingStyleDef)</signature>
                        <name>&lt;get_StyleLabelGetter&gt;b__27_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.Selected/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;</signature>
                        <name>&lt;&gt;9__27_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingStyleDef,string&gt;</signature>
                        <name>&lt;&gt;9__29_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__31_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__33_0</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SkillTool</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.SkillDef, int32, RimWorld.Passion, float32, float32)</signature>
                        <name>AddSkill</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.SkillRecord)</signature>
                        <name>CopySkillFromSkillRecord</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;RimWorld.SkillDef&gt;)</signature>
                        <name>DisableSkillsFromList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>EnableAllSkills</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllSkillsAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, string&amp;)</signature>
                        <name>GetIncapableOf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.SkillRecord)</signature>
                        <name>GetSkillAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(RimWorld.SkillDef)</signature>
                        <name>GetSkillIndex</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;Verse.WorkTags&gt;, System.Collections.Generic.List`1&lt;Verse.WorkTags&gt;)</signature>
                        <name>ListHasOneOrMoreMatches</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.WorkTags&gt;(Verse.Pawn)</signature>
                        <name>ListOfDiabledWorkTagsByBackstory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.WorkTags&gt;(RimWorld.SkillDef)</signature>
                        <name>ListOfDisablingWorkTagsForSkill</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;RimWorld.SkillRecord&gt;)</signature>
                        <name>PasteSkills</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.SkillDef, int32, RimWorld.Passion, float32, float32)</signature>
                        <name>SetSkill</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetSkillsFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.SkillDef, Verse.BoolUnknown)</signature>
                        <name>SkillDisable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.SkillRecord, Verse.BoolUnknown)</signature>
                        <name>SkillDisable</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SkinTool</name>
                <newname>aw</newname>
                <methodlist>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn)</signature>
                        <name>GetFavColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.Pawn, bool)</signature>
                        <name>GetSkinColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, UnityEngine.Color)</signature>
                        <name>SetFavColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, float32)</signature>
                        <name>SetMelanin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, UnityEngine.Color)</signature>
                        <name>SetSkinColor</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.SoundTool</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.SoundDef)</signature>
                        <name>PlayThis</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.StyleTool</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetBeardDefName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.BeardDef&gt;(string)</signature>
                        <name>GetBeardList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetBeardName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetBodyTattooDefName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.TattooDef&gt;(string)</signature>
                        <name>GetBodyTattooList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetBodyTattooName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetFaceTattooDefName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.TattooDef&gt;(string)</signature>
                        <name>GetFaceTattooList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetFaceTattooName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, bool, bool)</signature>
                        <name>SetBeard</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.BeardDef)</signature>
                        <name>SetBeard</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, bool, bool)</signature>
                        <name>SetBodyTattoo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.TattooDef)</signature>
                        <name>SetBodyTattoo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, bool, bool)</signature>
                        <name>SetFaceTattoo</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.TattooDef)</signature>
                        <name>SetFaceTattoo</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.StyleTool/&lt;&gt;c</name>
                <newname>z/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.TattooDef)</signature>
                        <name>&lt;GetBodyTattooList&gt;b__12_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.TattooDef)</signature>
                        <name>&lt;GetFaceTattooList&gt;b__7_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.StyleTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TattooDef,bool&gt;</signature>
                        <name>&lt;&gt;9__12_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TattooDef,bool&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.Teleport_Character</name>
                <newname>bi</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Rect)</signature>
                        <name>DoWindowContents</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Vector2()</signature>
                        <name>get_InitialSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.TexPath</name>
                <newname>bz</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ALIEN</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ARMORY</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ASTRONAUT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BIRTHDAY</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BLEEDING</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BPFEIL</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BWORLD</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CAPSULE</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CAPSULE2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CLONEPAWN</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONFIGURATE</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COPY</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CRONE</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DEADLOGO</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DEFICON</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DELETE</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DNAE</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DNAX</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DROP</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DROPDOWN</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ENDOGENEBACKGROUND</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FACIAL</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FAVCOLOR</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FEMALE</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FIND</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GENDERGIRL</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HAMMER</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HEADADDON</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INFO</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INGEST</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INSPIRE</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LOAD</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MALE</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MEMORY</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MENTAL</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MINUS</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MINUS2</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOVEDOWN</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MOVEUP</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NAV_BACK</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NAV_FOR</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NOCLOTHES</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NOHATS</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NONE</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PASTE</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PLUS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PLUS2</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>POSITION</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PSYCHOLOGY</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RACTIVE</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RANDOM</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RELOAD</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REMOVETITLE</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REPLACE</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESET</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESURRECT</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RINACTIVE</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ROTATE</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SAVE</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SAVE2</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SKILLS</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SOCIAL</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TELEPORT</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TOGGLELEFT</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TOGGLERIGHT</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WHITE</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XENOGENEBACKGROUND</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.TextureTool</name>
                <newname>b0</newname>
                <methodlist>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.GraphicData, Verse.Rot4)</signature>
                        <name>GetGraphicForMulti</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.GraphicData)</signature>
                        <name>GetGraphicForRandom</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.GraphicData)</signature>
                        <name>GetGraphicForSingle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.GraphicData, Verse.ThingDef, int32)</signature>
                        <name>GetGraphicForStackCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.GraphicData)</signature>
                        <name>GetGraphicForUndefined</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.ThingDef, int32, Verse.ThingStyleDef, Verse.Rot4)</signature>
                        <name>GetTexture</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.Graphic, string)</signature>
                        <name>GetTextureFromMulti</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D(Verse.ThingDef)</signature>
                        <name>GetTextureFromStackCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Rot4)</signature>
                        <name>Rot4ToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, string, string)</signature>
                        <name>SetGraphicDataSingle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>TestTexturePath</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool</name>
                <newname>b1</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AddCompColorable</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>AddCompQuality</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, int32)</signature>
                        <name>AddCost</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef, float32)</signature>
                        <name>AddEquipStat</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Thing)</signature>
                        <name>AddItemToInventory</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef, float32)</signature>
                        <name>AddStat</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StuffCategoryDef)</signature>
                        <name>AddStuff</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(CharacterEditor.Selected)</signature>
                        <name>BeginBuyItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, Verse.Thing)</signature>
                        <name>CopyQuality</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.Selected)</signature>
                        <name>CreateAndAddItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string, System.Type, string)</signature>
                        <name>CreateBuilding</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>DestroyAllItems</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Thing)</signature>
                        <name>DestroyItem</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, int32, int32, int32)</signature>
                        <name>DmoBuyAndPlaceItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.Thing(CharacterEditor.Selected)</signature>
                        <name>GenerateItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.Thing(Verse.ThingCategoryDef, bool, bool)</signature>
                        <name>GenerateRandomItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatDef&gt;()</signature>
                        <name>GetAllApparelStatDefs</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetAllApparelTags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>GetAllCostThingDefs</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllItemsAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatDef&gt;()</signature>
                        <name>GetAllOnEquipStatDefs</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetAllOutfitTags</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;()</signature>
                        <name>GetAllStatCategoriesApparel</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;()</signature>
                        <name>GetAllStatCategoriesOnEquip</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;()</signature>
                        <name>GetAllStatCategoriesWeapon</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StuffCategoryDef&gt;()</signature>
                        <name>GetAllStuffCategories</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatDef&gt;()</signature>
                        <name>GetAllWeaponStatDefs</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetAllWeaponTags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Thing)</signature>
                        <name>GetAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingDef)</signature>
                        <name>GetBaseThingDefFromMinified</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Color(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>GetColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.CompProperties(Verse.ThingDef, System.Type)</signature>
                        <name>GetCompByType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.CompProperties(Verse.ThingDef, string)</signature>
                        <name>GetCompByType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>GetEquipStatValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Thing)</signature>
                        <name>GetQuality</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.IntVec3, Verse.Map)</signature>
                        <name>GetSilverAmountNear</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>GetStatValue</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingDef, System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;&amp;, int32&amp;, bool)</signature>
                        <name>GetStuff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Thing)</signature>
                        <name>GetStuffDefName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingStyleDef(Verse.ThingDef, System.Collections.Generic.HashSet`1&lt;Verse.ThingStyleDef&gt;&amp;, int32&amp;, bool)</signature>
                        <name>GetStyle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasAnyItem</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>HasCost</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>HasEquipStat</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>HasStat</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatCategoryDef)</signature>
                        <name>HasStatsForCategory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, RimWorld.StuffCategoryDef)</signature>
                        <name>HasStuff</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsMineableMineral</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsMineableRock</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsMinified</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Thing&gt;(Verse.Pawn)</signature>
                        <name>ListOfCopyItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;(Verse.ThingCategoryDef, string)</signature>
                        <name>ListOfItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingStyleDef&gt;(Verse.ThingDef, string, bool)</signature>
                        <name>ListOfThingStyleDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;Verse.Thing&gt;)</signature>
                        <name>PasteCopyItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;Verse.ThingDefCountClass&gt;)</signature>
                        <name>PasteCost</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;)</signature>
                        <name>PasteEquipStats</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;RimWorld.StatModifier&gt;)</signature>
                        <name>PasteStats</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;RimWorld.StuffCategoryDef&gt;)</signature>
                        <name>PasteStuff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingDef)</signature>
                        <name>RandomAllowedStuff</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingStyleDef(Verse.ThingDef)</signature>
                        <name>RandomAllowedStyle</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Verse.Thing(Verse.Pawn)</signature>
                        <name>RandomInventoryItem</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.IntVec3, Verse.Map, int32)</signature>
                        <name>ReduceSilverAmount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>RegisterBuildingDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.Selected, int32)</signature>
                        <name>Reinvent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;)</signature>
                        <name>RemoveCategoriesWithoutStats</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Verse.ThingCategoryDef&gt;)</signature>
                        <name>RemoveCategoriesWithoutThings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>RemoveCost</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>RemoveEquipStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef)</signature>
                        <name>RemoveStat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StuffCategoryDef)</signature>
                        <name>RemoveStuff</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Thing)</signature>
                        <name>ReplaceItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, UnityEngine.Color)</signature>
                        <name>SetDrawColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetItemsFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, int32)</signature>
                        <name>SetQuality</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Thing, Verse.Rot4, Verse.IntVec3)</signature>
                        <name>Spawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>ThisOrDefaultStuff</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Thing)</signature>
                        <name>TransferFromInventory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.Thing)</signature>
                        <name>TransferToInventory</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, int32)</signature>
                        <name>UpdateCost</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>UpdateCostStuffCount</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef, float32)</signature>
                        <name>UpdateEquipStat</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef)</signature>
                        <name>UpdateRecipes</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, RimWorld.StatDef, float32)</signature>
                        <name>UpdateStat</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c</name>
                <newname>b1/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>&lt;GetAllApparelStatDefs&gt;b__28_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;GetAllCostThingDefs&gt;b__54_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;GetAllCostThingDefs&gt;b__54_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>&lt;GetAllOnEquipStatDefs&gt;b__29_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatCategoryDef)</signature>
                        <name>&lt;GetAllStatCategoriesApparel&gt;b__20_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatCategoryDef)</signature>
                        <name>&lt;GetAllStatCategoriesWeapon&gt;b__22_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StuffCategoryDef)</signature>
                        <name>&lt;GetAllStuffCategories&gt;b__46_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.StatDef)</signature>
                        <name>&lt;GetAllWeaponStatDefs&gt;b__30_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.ThingTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatCategoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__20_1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatCategoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__22_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>&lt;&gt;9__28_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>&lt;&gt;9__29_1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StatDef,string&gt;</signature>
                        <name>&lt;&gt;9__30_1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.StuffCategoryDef,string&gt;</signature>
                        <name>&lt;&gt;9__46_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__54_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__54_1</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass20_0</name>
                <newname>b1/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatCategoryDef)</signature>
                        <name>&lt;GetAllStatCategoriesApparel&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lequip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass22_0</name>
                <newname>b1/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatCategoryDef)</signature>
                        <name>&lt;GetAllStatCategoriesWeapon&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lequip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass28_0</name>
                <newname>b1/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatDef)</signature>
                        <name>&lt;GetAllApparelStatDefs&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lequip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass29_0</name>
                <newname>b1/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatDef)</signature>
                        <name>&lt;GetAllOnEquipStatDefs&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lequip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass30_0</name>
                <newname>b1/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.StatDef)</signature>
                        <name>&lt;GetAllWeaponStatDefs&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.StatCategoryDef&gt;</signature>
                        <name>lequip</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass72_0</name>
                <newname>b1/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;BeginBuyItem&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.Selected</signature>
                        <name>selected</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThingTool/&lt;&gt;c__DisplayClass73_0</name>
                <newname>b1/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DmoBuyAndPlaceItem&gt;b__0</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buyPrice</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>quality</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stackCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>stuff</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingDef</signature>
                        <name>thingDef</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThoughtTool</name>
                <newname>ax</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.ThoughtDef, Verse.Pawn, int32, string, float32, float32, int32)</signature>
                        <name>AddThought</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.ThoughtDef, Verse.Pawn, int32, string, float32, float32)</signature>
                        <name>AddThoughtSituational</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.ThoughtDef, Verse.Pawn, int32, string, float32, float32, int32)</signature>
                        <name>AddThought_Memory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ClearAllThoughts</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>int32(System.Collections.Generic.List`1&lt;RimWorld.Thought&gt;, RimWorld.Thought&amp;, string)</signature>
                        <name>CountOfDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(RimWorld.ThoughtDef, int32)</signature>
                        <name>FixStageValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllMemoriesAsSeparatedString</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllSituationalMemoriesAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Thought_Situational&gt;(Verse.Pawn)</signature>
                        <name>GetAllThoughtSituationals</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Thought)</signature>
                        <name>GetAsSeparatedString</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.Thought)</signature>
                        <name>GetOpinionOffset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Verse.Gender(Verse.Pawn)</signature>
                        <name>GetOppositeGender</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Verse.Pawn(RimWorld.Thought, string&amp;)</signature>
                        <name>GetOtherPawn</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Thought)</signature>
                        <name>GetThoughtDescription</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef, int32, RimWorld.Thought)</signature>
                        <name>GetThoughtDescription</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Thought)</signature>
                        <name>GetThoughtLabel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.ThoughtDef, int32, Verse.Pawn)</signature>
                        <name>GetThoughtLabel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.Thought&gt;(Verse.Pawn)</signature>
                        <name>GetThoughtsSorted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef, string)</signature>
                        <name>HasLabelPlaceholder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasMemories</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>HasOtherPawnMember</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>IsClassOf</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>IsForTitle</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>IsForWeapon</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>IsTrulySocial</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(RimWorld.ThoughtDef)</signature>
                        <name>IsTypeOf</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Thought)</signature>
                        <name>RemoveThought</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Thought)</signature>
                        <name>RemoveThoughtMemory</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Thought)</signature>
                        <name>RemoveThoughtSituational</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetMemories</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetSituationalMemories</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.Thought)</signature>
                        <name>TryGetMoodOffset</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.ThoughtTool/&lt;&gt;c</name>
                <newname>ax/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Thought)</signature>
                        <name>&lt;GetThoughtsSorted&gt;b__24_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.Thought)</signature>
                        <name>&lt;GetThoughtsSorted&gt;b__24_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(RimWorld.Thought)</signature>
                        <name>&lt;GetThoughtsSorted&gt;b__24_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>float32(RimWorld.Thought)</signature>
                        <name>&lt;GetThoughtsSorted&gt;b__24_3</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.ThoughtTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Thought,bool&gt;</signature>
                        <name>&lt;&gt;9__24_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Thought,float32&gt;</signature>
                        <name>&lt;&gt;9__24_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Thought,bool&gt;</signature>
                        <name>&lt;&gt;9__24_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.Thought,float32&gt;</signature>
                        <name>&lt;&gt;9__24_3</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.TrackerTool</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>FixInvalidTracker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasAbilityTracker</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasAgeTracker</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasApparelTracker</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasCarryTracker</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasEquipmentTracker</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasForcedApparel</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasGeneTracker</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasHealthTracker</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasInventoryTracker</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasMemoryTracker</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasNeedsTracker</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasPsyTracker</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasRecordsTracker</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasRelationTracker</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasRoyalTitle</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasRoyaltyTracker</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasSituationalTracker</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasSkillTracker</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasStoryTracker</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasStyleTracker</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasThoughtsTracker</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasTimeTracker</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasTraitTracker</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasWorkTracker</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.TraitTool</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.TraitDef, RimWorld.TraitDegreeData, bool, bool, RimWorld.Trait)</signature>
                        <name>AddTrait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllTraitsAsSeparatedString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>RimWorld.TraitDegreeData(RimWorld.TraitDef, int32)</signature>
                        <name>GetDegreeDataOrFirst</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;RimWorld.TraitDef,int32&gt;(Verse.Pawn)</signature>
                        <name>GetGeneBasedTraitDefsToSkip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>RimWorld.TraitDef(RimWorld.TraitDegreeData&amp;)</signature>
                        <name>GetRandomTrait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn, RimWorld.SkillRecord)</signature>
                        <name>GetTooltipForSkillpoints</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(RimWorld.Trait)</signature>
                        <name>GetTraitAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Pawn, RimWorld.SkillDef)</signature>
                        <name>GetTraitOffsetForSkill</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, RimWorld.TraitDef, RimWorld.TraitDegreeData)</signature>
                        <name>HasTrait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.TraitDef&gt;(string)</signature>
                        <name>ListOfTraitDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;RimWorld.StatModifier&gt;(string, bool)</signature>
                        <name>ListOfTraitStatModifier</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;&gt;(string, RimWorld.StatModifier, string)</signature>
                        <name>ListOfTraitsKeyValuePair</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, RimWorld.Trait)</signature>
                        <name>RemoveTrait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetTraitsFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.TraitTool/&lt;&gt;c</name>
                <newname>ay/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(RimWorld.TraitDef)</signature>
                        <name>&lt;ListOfTraitDef&gt;b__11_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;)</signature>
                        <name>&lt;ListOfTraitsKeyValuePair&gt;b__13_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.TraitTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;RimWorld.TraitDef,string&gt;</signature>
                        <name>&lt;&gt;9__11_1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;RimWorld.TraitDef,RimWorld.TraitDegreeData&gt;,string&gt;</signature>
                        <name>&lt;&gt;9__13_0</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.TraitTool/&lt;&gt;c__DisplayClass11_0</name>
                <newname>ay/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(RimWorld.TraitDef)</signature>
                        <name>&lt;ListOfTraitDef&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bAll</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponTool</name>
                <newname>b2</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.ThingDef, string)</signature>
                        <name>AddWeaponTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.ThingWithComps, bool, bool)</signature>
                        <name>AddWeaponToEquipment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.Selected, bool)</signature>
                        <name>CreateAndWearEquipment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>DestroyAllEquipment</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.ThingWithComps)</signature>
                        <name>DestroyEquipment</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>DoesExplosion</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingWithComps(bool)</signature>
                        <name>GenerateRandomWeapon</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingWithComps(CharacterEditor.Selected)</signature>
                        <name>GenerateWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetAllWeaponsAsSeparatedString</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetBulletDefName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.ThingDef)</signature>
                        <name>GetBulletExplosionRadius</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.ThingDef)</signature>
                        <name>GetBulletSpeed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.ThingDef)</signature>
                        <name>GetBulletStoppingPower</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>GetCompRefuelable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>GetCompReloadTime</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.ThingDef)</signature>
                        <name>GetDmg</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingDef)</signature>
                        <name>GetRealWeaponDef</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>GetSoundCastDefName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingDef(Verse.ThingDef)</signature>
                        <name>GetTurretDef</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>GetWeaponTargetGround</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn)</signature>
                        <name>HasAnyWeapon</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>HasAnyWeaponTags</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>HasProjectile</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>HasSoundcast</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>HasVerb</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef, string)</signature>
                        <name>HasWeaponTag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsBullet</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, Verse.ThingWithComps)</signature>
                        <name>IsEquippedByPawn</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Pawn, Verse.ThingWithComps)</signature>
                        <name>IsPrimaryWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsTurret</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>IsTurretGun</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;(Verse.ThingCategoryDef, string)</signature>
                        <name>ListOfBullets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingWithComps&gt;(Verse.Pawn)</signature>
                        <name>ListOfCopyWeapons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.SoundDef&gt;(bool)</signature>
                        <name>ListOfSounds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.ThingDef&gt;()</signature>
                        <name>ListOfTurrets</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.HashSet`1&lt;Verse.ThingDef&gt;(Verse.ThingCategoryDef, string, CharacterEditor.WeaponType)</signature>
                        <name>ListOfWeapons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;Verse.ThingWithComps&gt;)</signature>
                        <name>PasteCopyWeapons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>PasteWeaponTag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingWithComps(Verse.Pawn)</signature>
                        <name>RandomEquippedWeapon</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, CharacterEditor.Selected, int32, bool)</signature>
                        <name>Reequip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, string)</signature>
                        <name>RemoveWeaponTag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>CharacterEditor.Selected(Verse.Pawn)</signature>
                        <name>SelectorForPawnSpecificWeapon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef)</signature>
                        <name>SetBullet</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, float32)</signature>
                        <name>SetBulletSpeed</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, int32)</signature>
                        <name>SetCompRefuelable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, Verse.ThingDef, float32)</signature>
                        <name>SetCompReloadTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, float32)</signature>
                        <name>SetExplosionRadius</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, float32)</signature>
                        <name>SetStoppingPower</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.ThingDef, bool)</signature>
                        <name>SetTargetParams</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetWeaponsFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Verse.ThingWithComps(Verse.Pawn, Verse.ThingWithComps)</signature>
                        <name>ThisOrFirstWeapon</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponTool/&lt;&gt;c</name>
                <newname>b2/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;ListOfBullets&gt;b__49_1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.SoundDef)</signature>
                        <name>&lt;ListOfSounds&gt;b__50_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Verse.SoundDef)</signature>
                        <name>&lt;ListOfSounds&gt;b__50_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;ListOfSounds&gt;b__50_2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;ListOfSounds&gt;b__50_3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.SoundDef(Verse.ThingDef)</signature>
                        <name>&lt;ListOfSounds&gt;b__50_4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;ListOfTurrets&gt;b__47_0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;ListOfTurrets&gt;b__47_1</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Verse.ThingDef)</signature>
                        <name>&lt;ListOfWeapons&gt;b__48_1</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.WeaponTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__47_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__47_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__48_1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__49_1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.SoundDef,bool&gt;</signature>
                        <name>&lt;&gt;9__50_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.SoundDef,string&gt;</signature>
                        <name>&lt;&gt;9__50_1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,bool&gt;</signature>
                        <name>&lt;&gt;9__50_2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,string&gt;</signature>
                        <name>&lt;&gt;9__50_3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Verse.ThingDef,Verse.SoundDef&gt;</signature>
                        <name>&lt;&gt;9__50_4</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponTool/&lt;&gt;c__DisplayClass40_0</name>
                <newname>b2/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;SelectorForPawnSpecificWeapon&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Verse.Pawn</signature>
                        <name>pawn</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponTool/&lt;&gt;c__DisplayClass40_1</name>
                <newname>b2/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;SelectorForPawnSpecificWeapon&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.WeaponTool/&lt;&gt;c__DisplayClass40_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponTool/&lt;&gt;c__DisplayClass48_0</name>
                <newname>b2/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;ListOfWeapons&gt;b__0</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bAll1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAll2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Verse.ThingDef&gt;</signature>
                        <name>dicTurrets</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingCategoryDef</signature>
                        <name>tc</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.WeaponType</signature>
                        <name>weaponType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponTool/&lt;&gt;c__DisplayClass49_0</name>
                <newname>b2/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Verse.ThingDef)</signature>
                        <name>&lt;ListOfBullets&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>bAll1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bAll2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>modname</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Verse.ThingCategoryDef</signature>
                        <name>tc</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WeaponType</name>
                <newname>i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.WeaponType</signature>
                        <name>Melee</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.WeaponType</signature>
                        <name>Ranged</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CharacterEditor.WeaponType</signature>
                        <name>Turret</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WindowTool</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Window, bool)</signature>
                        <name>BringToFront</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Verse.Window&gt;)</signature>
                        <name>BringToFrontMulti</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Verse.Window&gt;)</signature>
                        <name>Close</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Verse.Window)</signature>
                        <name>GetIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>Verse.Window()</signature>
                        <name>GetWindowOf</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Window&gt;(string)</signature>
                        <name>GetWindowOfEndsWithType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.Window&gt;(string)</signature>
                        <name>GetWindowOfStartsWithType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Verse.Window(string)</signature>
                        <name>GetWindowOfType</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool()</signature>
                        <name>IsOpen</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Window)</signature>
                        <name>Open</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowOpenedWindows</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(bool)</signature>
                        <name>TopLayerForWindowOf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>TopLayerForWindowOfType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void()</signature>
                        <name>TryRemove</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.WorkTool</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Verse.WorkTypeDef&gt;()</signature>
                        <name>GetAllWorkTypeDefs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetWorkPrioritiesAsSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetWorkPrioritiesFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.XenoTool</name>
                <newname>bg</newname>
                <methodlist>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ClearEndogenes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, bool, bool)</signature>
                        <name>ClearGenes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn)</signature>
                        <name>ClearXenogenes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.CustomXenotype&gt;()</signature>
                        <name>GetAllCustomXenotypes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetEndogeneAsSeparatedString</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetXenoCustomName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>RimWorld.XenotypeDef(Verse.Pawn)</signature>
                        <name>GetXenoTypeDef</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetXenoTypeDefName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(Verse.Pawn)</signature>
                        <name>GetXenogeneAsSeparatedString</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Gene)</signature>
                        <name>IsHairGene</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Verse.Gene)</signature>
                        <name>IsSkinGene</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.HeadTypeDef, RimWorld.BodyTypeDef)</signature>
                        <name>PostGeneChange_HeadAndBodyTest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, Verse.HeadTypeDef&amp;, RimWorld.BodyTypeDef&amp;)</signature>
                        <name>PreGeneChange_HeadAndBodyTest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string, string, bool, bool)</signature>
                        <name>PresetXenoType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetEndogeneFromSeparatedString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, System.Collections.Generic.List`1&lt;Verse.GeneDef&gt;, bool, bool)</signature>
                        <name>SetGenesFromList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Verse.Pawn, string)</signature>
                        <name>SetXenogeneFromSeparatedString</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.XenoTool/&lt;&gt;c</name>
                <newname>bg/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(System.IO.FileInfo)</signature>
                        <name>&lt;GetAllCustomXenotypes&gt;b__15_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.XenoTool/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.IO.FileInfo,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__15_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.XenoTool/&lt;&gt;c__DisplayClass15_0</name>
                <newname>bg/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;RimWorld.CustomXenotype&gt;</signature>
                        <name>lcustomxeontypes</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CharacterEditor.XenoTool/&lt;&gt;c__DisplayClass15_1</name>
                <newname>bg/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GetAllCustomXenotypes&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CharacterEditor.XenoTool/&lt;&gt;c__DisplayClass15_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>264</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>2908</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>2167</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>39</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>0</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>253</statistic>
            <statistic>95.83 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>2507</statistic>
            <statistic>86.21 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>2103</statistic>
            <statistic>97.05 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>806</statistic>
            <statistic>27.72 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>445</statistic>
            <statistic>15.30 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>269</statistic>
            <statistic>9.25 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>143</statistic>
            <statistic>4.92 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>113</statistic>
            <statistic>3.89 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>83</statistic>
            <statistic>2.85 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>74</statistic>
            <statistic>2.54 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>